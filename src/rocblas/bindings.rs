/* automatically generated by rust-bindgen 0.71.1 */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rocblas_bfloat16 {
    pub data: u16,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rocblas_f8 {
    pub data: u8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rocblas_bf8 {
    pub data: u8,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _rocblas_handle {
    _unused: [u8; 0],
}
pub type rocblas_handle = *mut _rocblas_handle;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ihipStream_t {
    _unused: [u8; 0],
}
pub type hipStream_t = *mut ihipStream_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ihipEvent_t {
    _unused: [u8; 0],
}
pub type hipEvent_t = *mut ihipEvent_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rocblas_device_malloc_base {
    _unused: [u8; 0],
}
pub type rocblas_int = i32;
pub type rocblas_stride = i64;
pub type rocblas_float = f32;
pub type rocblas_double = f64;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rocblas_half {
    pub data: u16,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rocblas_float_complex {
    pub x: f32,
    pub y: f32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rocblas_double_complex {
    pub x: f64,
    pub y: f64,
}
pub const rocblas_operation__rocblas_operation_none: rocblas_operation_ = 111;
pub const rocblas_operation__rocblas_operation_transpose: rocblas_operation_ = 112;
pub const rocblas_operation__rocblas_operation_conjugate_transpose: rocblas_operation_ = 113;
pub type rocblas_operation_ = ::std::os::raw::c_uint;
pub use self::rocblas_operation_ as rocblas_operation;
pub const rocblas_fill__rocblas_fill_upper: rocblas_fill_ = 121;
pub const rocblas_fill__rocblas_fill_lower: rocblas_fill_ = 122;
pub const rocblas_fill__rocblas_fill_full: rocblas_fill_ = 123;
pub type rocblas_fill_ = ::std::os::raw::c_uint;
pub use self::rocblas_fill_ as rocblas_fill;
pub const rocblas_diagonal__rocblas_diagonal_non_unit: rocblas_diagonal_ = 131;
pub const rocblas_diagonal__rocblas_diagonal_unit: rocblas_diagonal_ = 132;
pub type rocblas_diagonal_ = ::std::os::raw::c_uint;
pub use self::rocblas_diagonal_ as rocblas_diagonal;
pub const rocblas_side__rocblas_side_left: rocblas_side_ = 141;
pub const rocblas_side__rocblas_side_right: rocblas_side_ = 142;
pub const rocblas_side__rocblas_side_both: rocblas_side_ = 143;
pub type rocblas_side_ = ::std::os::raw::c_uint;
pub use self::rocblas_side_ as rocblas_side;
pub const rocblas_datatype__rocblas_datatype_f16_r: rocblas_datatype_ = 150;
pub const rocblas_datatype__rocblas_datatype_f32_r: rocblas_datatype_ = 151;
pub const rocblas_datatype__rocblas_datatype_f64_r: rocblas_datatype_ = 152;
pub const rocblas_datatype__rocblas_datatype_f16_c: rocblas_datatype_ = 153;
pub const rocblas_datatype__rocblas_datatype_f32_c: rocblas_datatype_ = 154;
pub const rocblas_datatype__rocblas_datatype_f64_c: rocblas_datatype_ = 155;
pub const rocblas_datatype__rocblas_datatype_i8_r: rocblas_datatype_ = 160;
pub const rocblas_datatype__rocblas_datatype_u8_r: rocblas_datatype_ = 161;
pub const rocblas_datatype__rocblas_datatype_i32_r: rocblas_datatype_ = 162;
pub const rocblas_datatype__rocblas_datatype_u32_r: rocblas_datatype_ = 163;
pub const rocblas_datatype__rocblas_datatype_i8_c: rocblas_datatype_ = 164;
pub const rocblas_datatype__rocblas_datatype_u8_c: rocblas_datatype_ = 165;
pub const rocblas_datatype__rocblas_datatype_i32_c: rocblas_datatype_ = 166;
pub const rocblas_datatype__rocblas_datatype_u32_c: rocblas_datatype_ = 167;
pub const rocblas_datatype__rocblas_datatype_bf16_r: rocblas_datatype_ = 168;
pub const rocblas_datatype__rocblas_datatype_bf16_c: rocblas_datatype_ = 169;
pub const rocblas_datatype__rocblas_datatype_f8_r: rocblas_datatype_ = 170;
pub const rocblas_datatype__rocblas_datatype_bf8_r: rocblas_datatype_ = 171;
pub const rocblas_datatype__rocblas_datatype_invalid: rocblas_datatype_ = 255;
pub type rocblas_datatype_ = ::std::os::raw::c_uint;
pub use self::rocblas_datatype_ as rocblas_datatype;
pub const rocblas_computetype__rocblas_compute_type_f32: rocblas_computetype_ = 300;
pub const rocblas_computetype__rocblas_compute_type_f8_f8_f32: rocblas_computetype_ = 301;
pub const rocblas_computetype__rocblas_compute_type_f8_bf8_f32: rocblas_computetype_ = 302;
pub const rocblas_computetype__rocblas_compute_type_bf8_f8_f32: rocblas_computetype_ = 303;
pub const rocblas_computetype__rocblas_compute_type_bf8_bf8_f32: rocblas_computetype_ = 304;
pub const rocblas_computetype__rocblas_compute_type_invalid: rocblas_computetype_ = 455;
pub type rocblas_computetype_ = ::std::os::raw::c_uint;
pub use self::rocblas_computetype_ as rocblas_computetype;
pub const rocblas_status__rocblas_status_success: rocblas_status_ = 0;
pub const rocblas_status__rocblas_status_invalid_handle: rocblas_status_ = 1;
pub const rocblas_status__rocblas_status_not_implemented: rocblas_status_ = 2;
pub const rocblas_status__rocblas_status_invalid_pointer: rocblas_status_ = 3;
pub const rocblas_status__rocblas_status_invalid_size: rocblas_status_ = 4;
pub const rocblas_status__rocblas_status_memory_error: rocblas_status_ = 5;
pub const rocblas_status__rocblas_status_internal_error: rocblas_status_ = 6;
pub const rocblas_status__rocblas_status_perf_degraded: rocblas_status_ = 7;
pub const rocblas_status__rocblas_status_size_query_mismatch: rocblas_status_ = 8;
pub const rocblas_status__rocblas_status_size_increased: rocblas_status_ = 9;
pub const rocblas_status__rocblas_status_size_unchanged: rocblas_status_ = 10;
pub const rocblas_status__rocblas_status_invalid_value: rocblas_status_ = 11;
pub const rocblas_status__rocblas_status_continue: rocblas_status_ = 12;
pub const rocblas_status__rocblas_status_check_numerics_fail: rocblas_status_ = 13;
pub const rocblas_status__rocblas_status_excluded_from_build: rocblas_status_ = 14;
pub const rocblas_status__rocblas_status_arch_mismatch: rocblas_status_ = 15;
pub type rocblas_status_ = ::std::os::raw::c_uint;
pub use self::rocblas_status_ as rocblas_status;
pub const rocblas_pointer_mode__rocblas_pointer_mode_host: rocblas_pointer_mode_ = 0;
pub const rocblas_pointer_mode__rocblas_pointer_mode_device: rocblas_pointer_mode_ = 1;
pub type rocblas_pointer_mode_ = ::std::os::raw::c_uint;
pub use self::rocblas_pointer_mode_ as rocblas_pointer_mode;
pub const rocblas_atomics_mode__rocblas_atomics_not_allowed: rocblas_atomics_mode_ = 0;
pub const rocblas_atomics_mode__rocblas_atomics_allowed: rocblas_atomics_mode_ = 1;
pub type rocblas_atomics_mode_ = ::std::os::raw::c_uint;
pub use self::rocblas_atomics_mode_ as rocblas_atomics_mode;
pub const rocblas_performance_metric__rocblas_default_performance_metric:
    rocblas_performance_metric_ = 0;
pub const rocblas_performance_metric__rocblas_device_efficiency_performance_metric:
    rocblas_performance_metric_ = 1;
pub const rocblas_performance_metric__rocblas_cu_efficiency_performance_metric:
    rocblas_performance_metric_ = 2;
pub type rocblas_performance_metric_ = ::std::os::raw::c_uint;
pub use self::rocblas_performance_metric_ as rocblas_performance_metric;
pub const rocblas_layer_mode__rocblas_layer_mode_none: rocblas_layer_mode_ = 0;
pub const rocblas_layer_mode__rocblas_layer_mode_log_trace: rocblas_layer_mode_ = 1;
pub const rocblas_layer_mode__rocblas_layer_mode_log_bench: rocblas_layer_mode_ = 2;
pub const rocblas_layer_mode__rocblas_layer_mode_log_profile: rocblas_layer_mode_ = 4;
pub type rocblas_layer_mode_ = ::std::os::raw::c_uint;
pub use self::rocblas_layer_mode_ as rocblas_layer_mode;
pub const rocblas_gemm_algo__rocblas_gemm_algo_standard: rocblas_gemm_algo_ = 0;
pub const rocblas_gemm_algo__rocblas_gemm_algo_solution_index: rocblas_gemm_algo_ = 1;
pub type rocblas_gemm_algo_ = ::std::os::raw::c_uint;
pub use self::rocblas_gemm_algo_ as rocblas_gemm_algo;
pub const rocblas_geam_ex_operation__rocblas_geam_ex_operation_min_plus:
    rocblas_geam_ex_operation_ = 0;
pub const rocblas_geam_ex_operation__rocblas_geam_ex_operation_plus_min:
    rocblas_geam_ex_operation_ = 1;
pub type rocblas_geam_ex_operation_ = ::std::os::raw::c_uint;
pub use self::rocblas_geam_ex_operation_ as rocblas_geam_ex_operation;
pub const rocblas_gemm_flags__rocblas_gemm_flags_none: rocblas_gemm_flags_ = 0;
pub const rocblas_gemm_flags__rocblas_gemm_flags_use_cu_efficiency: rocblas_gemm_flags_ = 2;
pub const rocblas_gemm_flags__rocblas_gemm_flags_fp16_alt_impl: rocblas_gemm_flags_ = 4;
pub const rocblas_gemm_flags__rocblas_gemm_flags_check_solution_index: rocblas_gemm_flags_ = 8;
pub const rocblas_gemm_flags__rocblas_gemm_flags_fp16_alt_impl_rnz: rocblas_gemm_flags_ = 16;
pub const rocblas_gemm_flags__rocblas_gemm_flags_stochastic_rounding: rocblas_gemm_flags_ = 32;
pub type rocblas_gemm_flags_ = ::std::os::raw::c_uint;
pub use self::rocblas_gemm_flags_ as rocblas_gemm_flags;
#[repr(C)]
#[derive(Copy, Clone)]
pub union rocblas_union_u {
    pub h: rocblas_half,
    pub s: f32,
    pub d: f64,
    pub i: i32,
    pub c: rocblas_float_complex,
    pub z: rocblas_double_complex,
}
pub type rocblas_union_t = rocblas_union_u;
pub const rocblas_check_numerics_mode__rocblas_check_numerics_mode_no_check:
    rocblas_check_numerics_mode_ = 0;
pub const rocblas_check_numerics_mode__rocblas_check_numerics_mode_info:
    rocblas_check_numerics_mode_ = 1;
pub const rocblas_check_numerics_mode__rocblas_check_numerics_mode_warn:
    rocblas_check_numerics_mode_ = 2;
pub const rocblas_check_numerics_mode__rocblas_check_numerics_mode_fail:
    rocblas_check_numerics_mode_ = 4;
pub const rocblas_check_numerics_mode__rocblas_check_numerics_mode_only_nan_inf:
    rocblas_check_numerics_mode_ = 8;
pub type rocblas_check_numerics_mode_ = ::std::os::raw::c_uint;
pub use self::rocblas_check_numerics_mode_ as rocblas_check_numerics_mode;
pub const rocblas_math_mode__rocblas_default_math: rocblas_math_mode_ = 0;
pub const rocblas_math_mode__rocblas_xf32_xdl_math_op: rocblas_math_mode_ = 1;
pub type rocblas_math_mode_ = ::std::os::raw::c_uint;
pub use self::rocblas_math_mode_ as rocblas_math_mode;
unsafe extern "C" {
    pub fn rocblas_create_handle(handle: *mut rocblas_handle) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_destroy_handle(handle: rocblas_handle) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_set_stream(handle: rocblas_handle, stream: hipStream_t) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_get_stream(handle: rocblas_handle, stream: *mut hipStream_t) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_set_pointer_mode(
        handle: rocblas_handle,
        pointer_mode: rocblas_pointer_mode,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_get_pointer_mode(
        handle: rocblas_handle,
        pointer_mode: *mut rocblas_pointer_mode,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_set_atomics_mode(
        handle: rocblas_handle,
        atomics_mode: rocblas_atomics_mode,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_get_atomics_mode(
        handle: rocblas_handle,
        atomics_mode: *mut rocblas_atomics_mode,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_set_math_mode(
        handle: rocblas_handle,
        math_mode: rocblas_math_mode,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_get_math_mode(
        handle: rocblas_handle,
        math_mode: *mut rocblas_math_mode,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_pointer_to_mode(ptr: *mut ::std::os::raw::c_void) -> rocblas_pointer_mode;
}
unsafe extern "C" {
    pub fn rocblas_set_vector(
        n: rocblas_int,
        elem_size: rocblas_int,
        x: *const ::std::os::raw::c_void,
        incx: rocblas_int,
        y: *mut ::std::os::raw::c_void,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_set_vector_64(
        n: i64,
        elem_size: i64,
        x: *const ::std::os::raw::c_void,
        incx: i64,
        y: *mut ::std::os::raw::c_void,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_get_vector(
        n: rocblas_int,
        elem_size: rocblas_int,
        x: *const ::std::os::raw::c_void,
        incx: rocblas_int,
        y: *mut ::std::os::raw::c_void,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_get_vector_64(
        n: i64,
        elem_size: i64,
        x: *const ::std::os::raw::c_void,
        incx: i64,
        y: *mut ::std::os::raw::c_void,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_set_matrix(
        rows: rocblas_int,
        cols: rocblas_int,
        elem_size: rocblas_int,
        a: *const ::std::os::raw::c_void,
        lda: rocblas_int,
        b: *mut ::std::os::raw::c_void,
        ldb: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_set_matrix_64(
        rows: i64,
        cols: i64,
        elem_size: i64,
        a: *const ::std::os::raw::c_void,
        lda: i64,
        b: *mut ::std::os::raw::c_void,
        ldb: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_get_matrix(
        rows: rocblas_int,
        cols: rocblas_int,
        elem_size: rocblas_int,
        a: *const ::std::os::raw::c_void,
        lda: rocblas_int,
        b: *mut ::std::os::raw::c_void,
        ldb: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_get_matrix_64(
        rows: i64,
        cols: i64,
        elem_size: i64,
        a: *const ::std::os::raw::c_void,
        lda: i64,
        b: *mut ::std::os::raw::c_void,
        ldb: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_set_vector_async(
        n: rocblas_int,
        elem_size: rocblas_int,
        x: *const ::std::os::raw::c_void,
        incx: rocblas_int,
        y: *mut ::std::os::raw::c_void,
        incy: rocblas_int,
        stream: hipStream_t,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_set_vector_async_64(
        n: i64,
        elem_size: i64,
        x: *const ::std::os::raw::c_void,
        incx: i64,
        y: *mut ::std::os::raw::c_void,
        incy: i64,
        stream: hipStream_t,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_get_vector_async(
        n: rocblas_int,
        elem_size: rocblas_int,
        x: *const ::std::os::raw::c_void,
        incx: rocblas_int,
        y: *mut ::std::os::raw::c_void,
        incy: rocblas_int,
        stream: hipStream_t,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_get_vector_async_64(
        n: i64,
        elem_size: i64,
        x: *const ::std::os::raw::c_void,
        incx: i64,
        y: *mut ::std::os::raw::c_void,
        incy: i64,
        stream: hipStream_t,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_set_matrix_async(
        rows: rocblas_int,
        cols: rocblas_int,
        elem_size: rocblas_int,
        a: *const ::std::os::raw::c_void,
        lda: rocblas_int,
        b: *mut ::std::os::raw::c_void,
        ldb: rocblas_int,
        stream: hipStream_t,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_set_matrix_async_64(
        rows: i64,
        cols: i64,
        elem_size: i64,
        a: *const ::std::os::raw::c_void,
        lda: i64,
        b: *mut ::std::os::raw::c_void,
        ldb: i64,
        stream: hipStream_t,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_get_matrix_async(
        rows: rocblas_int,
        cols: rocblas_int,
        elem_size: rocblas_int,
        a: *const ::std::os::raw::c_void,
        lda: rocblas_int,
        b: *mut ::std::os::raw::c_void,
        ldb: rocblas_int,
        stream: hipStream_t,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_get_matrix_async_64(
        rows: i64,
        cols: i64,
        elem_size: i64,
        a: *const ::std::os::raw::c_void,
        lda: i64,
        b: *mut ::std::os::raw::c_void,
        ldb: i64,
        stream: hipStream_t,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_set_start_stop_events(
        handle: rocblas_handle,
        startEvent: hipEvent_t,
        stopEvent: hipEvent_t,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_set_solution_fitness_query(
        handle: rocblas_handle,
        fitness: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_set_performance_metric(
        handle: rocblas_handle,
        metric: rocblas_performance_metric,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_get_performance_metric(
        handle: rocblas_handle,
        metric: *mut rocblas_performance_metric,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sscal(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const f32,
        x: *mut f32,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dscal(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const f64,
        x: *mut f64,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cscal(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        x: *mut rocblas_float_complex,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zscal(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        x: *mut rocblas_double_complex,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csscal(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const f32,
        x: *mut rocblas_float_complex,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zdscal(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const f64,
        x: *mut rocblas_double_complex,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sscal_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const f32,
        x: *mut f32,
        incx: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dscal_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const f64,
        x: *mut f64,
        incx: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cscal_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const rocblas_float_complex,
        x: *mut rocblas_float_complex,
        incx: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zscal_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const rocblas_double_complex,
        x: *mut rocblas_double_complex,
        incx: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csscal_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const f32,
        x: *mut rocblas_float_complex,
        incx: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zdscal_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const f64,
        x: *mut rocblas_double_complex,
        incx: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sscal_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const f32,
        x: *const *mut f32,
        incx: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dscal_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const f64,
        x: *const *mut f64,
        incx: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cscal_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        x: *const *mut rocblas_float_complex,
        incx: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zscal_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        x: *const *mut rocblas_double_complex,
        incx: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csscal_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const f32,
        x: *const *mut rocblas_float_complex,
        incx: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zdscal_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const f64,
        x: *const *mut rocblas_double_complex,
        incx: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sscal_batched_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const f32,
        x: *const *mut f32,
        incx: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dscal_batched_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const f64,
        x: *const *mut f64,
        incx: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cscal_batched_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const rocblas_float_complex,
        x: *const *mut rocblas_float_complex,
        incx: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zscal_batched_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const rocblas_double_complex,
        x: *const *mut rocblas_double_complex,
        incx: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csscal_batched_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const f32,
        x: *const *mut rocblas_float_complex,
        incx: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zdscal_batched_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const f64,
        x: *const *mut rocblas_double_complex,
        incx: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sscal_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const f32,
        x: *mut f32,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dscal_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const f64,
        x: *mut f64,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cscal_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        x: *mut rocblas_float_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zscal_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        x: *mut rocblas_double_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csscal_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const f32,
        x: *mut rocblas_float_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zdscal_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const f64,
        x: *mut rocblas_double_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sscal_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const f32,
        x: *mut f32,
        incx: i64,
        stride_x: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dscal_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const f64,
        x: *mut f64,
        incx: i64,
        stride_x: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cscal_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const rocblas_float_complex,
        x: *mut rocblas_float_complex,
        incx: i64,
        stride_x: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zscal_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const rocblas_double_complex,
        x: *mut rocblas_double_complex,
        incx: i64,
        stride_x: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csscal_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const f32,
        x: *mut rocblas_float_complex,
        incx: i64,
        stride_x: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zdscal_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const f64,
        x: *mut rocblas_double_complex,
        incx: i64,
        stride_x: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_scopy(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const f32,
        incx: rocblas_int,
        y: *mut f32,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dcopy(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const f64,
        incx: rocblas_int,
        y: *mut f64,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ccopy(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        y: *mut rocblas_float_complex,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zcopy(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        y: *mut rocblas_double_complex,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_scopy_64(
        handle: rocblas_handle,
        n: i64,
        x: *const f32,
        incx: i64,
        y: *mut f32,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dcopy_64(
        handle: rocblas_handle,
        n: i64,
        x: *const f64,
        incx: i64,
        y: *mut f64,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ccopy_64(
        handle: rocblas_handle,
        n: i64,
        x: *const rocblas_float_complex,
        incx: i64,
        y: *mut rocblas_float_complex,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zcopy_64(
        handle: rocblas_handle,
        n: i64,
        x: *const rocblas_double_complex,
        incx: i64,
        y: *mut rocblas_double_complex,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_scopy_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *const f32,
        incx: rocblas_int,
        y: *const *mut f32,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dcopy_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *const f64,
        incx: rocblas_int,
        y: *const *mut f64,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ccopy_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *const rocblas_float_complex,
        incx: rocblas_int,
        y: *const *mut rocblas_float_complex,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zcopy_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *const rocblas_double_complex,
        incx: rocblas_int,
        y: *const *mut rocblas_double_complex,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_scopy_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *const f32,
        incx: i64,
        y: *const *mut f32,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dcopy_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *const f64,
        incx: i64,
        y: *const *mut f64,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ccopy_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *const rocblas_float_complex,
        incx: i64,
        y: *const *mut rocblas_float_complex,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zcopy_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *const rocblas_double_complex,
        incx: i64,
        y: *const *mut rocblas_double_complex,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_scopy_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const f32,
        incx: rocblas_int,
        stridex: rocblas_stride,
        y: *mut f32,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dcopy_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const f64,
        incx: rocblas_int,
        stridex: rocblas_stride,
        y: *mut f64,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ccopy_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        stridex: rocblas_stride,
        y: *mut rocblas_float_complex,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zcopy_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        stridex: rocblas_stride,
        y: *mut rocblas_double_complex,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_scopy_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const f32,
        incx: i64,
        stridex: rocblas_stride,
        y: *mut f32,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dcopy_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const f64,
        incx: i64,
        stridex: rocblas_stride,
        y: *mut f64,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ccopy_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const rocblas_float_complex,
        incx: i64,
        stridex: rocblas_stride,
        y: *mut rocblas_float_complex,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zcopy_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const rocblas_double_complex,
        incx: i64,
        stridex: rocblas_stride,
        y: *mut rocblas_double_complex,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sdot(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const f32,
        incx: rocblas_int,
        y: *const f32,
        incy: rocblas_int,
        result: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ddot(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const f64,
        incx: rocblas_int,
        y: *const f64,
        incy: rocblas_int,
        result: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_hdot(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const rocblas_half,
        incx: rocblas_int,
        y: *const rocblas_half,
        incy: rocblas_int,
        result: *mut rocblas_half,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_bfdot(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const rocblas_bfloat16,
        incx: rocblas_int,
        y: *const rocblas_bfloat16,
        incy: rocblas_int,
        result: *mut rocblas_bfloat16,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cdotu(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        y: *const rocblas_float_complex,
        incy: rocblas_int,
        result: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zdotu(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        y: *const rocblas_double_complex,
        incy: rocblas_int,
        result: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cdotc(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        y: *const rocblas_float_complex,
        incy: rocblas_int,
        result: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zdotc(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        y: *const rocblas_double_complex,
        incy: rocblas_int,
        result: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sdot_64(
        handle: rocblas_handle,
        n: i64,
        x: *const f32,
        incx: i64,
        y: *const f32,
        incy: i64,
        result: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ddot_64(
        handle: rocblas_handle,
        n: i64,
        x: *const f64,
        incx: i64,
        y: *const f64,
        incy: i64,
        result: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_hdot_64(
        handle: rocblas_handle,
        n: i64,
        x: *const rocblas_half,
        incx: i64,
        y: *const rocblas_half,
        incy: i64,
        result: *mut rocblas_half,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_bfdot_64(
        handle: rocblas_handle,
        n: i64,
        x: *const rocblas_bfloat16,
        incx: i64,
        y: *const rocblas_bfloat16,
        incy: i64,
        result: *mut rocblas_bfloat16,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cdotu_64(
        handle: rocblas_handle,
        n: i64,
        x: *const rocblas_float_complex,
        incx: i64,
        y: *const rocblas_float_complex,
        incy: i64,
        result: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zdotu_64(
        handle: rocblas_handle,
        n: i64,
        x: *const rocblas_double_complex,
        incx: i64,
        y: *const rocblas_double_complex,
        incy: i64,
        result: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cdotc_64(
        handle: rocblas_handle,
        n: i64,
        x: *const rocblas_float_complex,
        incx: i64,
        y: *const rocblas_float_complex,
        incy: i64,
        result: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zdotc_64(
        handle: rocblas_handle,
        n: i64,
        x: *const rocblas_double_complex,
        incx: i64,
        y: *const rocblas_double_complex,
        incy: i64,
        result: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sdot_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *const f32,
        incx: rocblas_int,
        y: *const *const f32,
        incy: rocblas_int,
        batch_count: rocblas_int,
        result: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ddot_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *const f64,
        incx: rocblas_int,
        y: *const *const f64,
        incy: rocblas_int,
        batch_count: rocblas_int,
        result: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_hdot_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *const rocblas_half,
        incx: rocblas_int,
        y: *const *const rocblas_half,
        incy: rocblas_int,
        batch_count: rocblas_int,
        result: *mut rocblas_half,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_bfdot_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *const rocblas_bfloat16,
        incx: rocblas_int,
        y: *const *const rocblas_bfloat16,
        incy: rocblas_int,
        batch_count: rocblas_int,
        result: *mut rocblas_bfloat16,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cdotu_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *const rocblas_float_complex,
        incx: rocblas_int,
        y: *const *const rocblas_float_complex,
        incy: rocblas_int,
        batch_count: rocblas_int,
        result: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zdotu_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *const rocblas_double_complex,
        incx: rocblas_int,
        y: *const *const rocblas_double_complex,
        incy: rocblas_int,
        batch_count: rocblas_int,
        result: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cdotc_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *const rocblas_float_complex,
        incx: rocblas_int,
        y: *const *const rocblas_float_complex,
        incy: rocblas_int,
        batch_count: rocblas_int,
        result: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zdotc_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *const rocblas_double_complex,
        incx: rocblas_int,
        y: *const *const rocblas_double_complex,
        incy: rocblas_int,
        batch_count: rocblas_int,
        result: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sdot_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *const f32,
        incx: i64,
        y: *const *const f32,
        incy: i64,
        batch_count: i64,
        result: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ddot_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *const f64,
        incx: i64,
        y: *const *const f64,
        incy: i64,
        batch_count: i64,
        result: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_hdot_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *const rocblas_half,
        incx: i64,
        y: *const *const rocblas_half,
        incy: i64,
        batch_count: i64,
        result: *mut rocblas_half,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_bfdot_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *const rocblas_bfloat16,
        incx: i64,
        y: *const *const rocblas_bfloat16,
        incy: i64,
        batch_count: i64,
        result: *mut rocblas_bfloat16,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cdotu_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *const rocblas_float_complex,
        incx: i64,
        y: *const *const rocblas_float_complex,
        incy: i64,
        batch_count: i64,
        result: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zdotu_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *const rocblas_double_complex,
        incx: i64,
        y: *const *const rocblas_double_complex,
        incy: i64,
        batch_count: i64,
        result: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cdotc_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *const rocblas_float_complex,
        incx: i64,
        y: *const *const rocblas_float_complex,
        incy: i64,
        batch_count: i64,
        result: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zdotc_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *const rocblas_double_complex,
        incx: i64,
        y: *const *const rocblas_double_complex,
        incy: i64,
        batch_count: i64,
        result: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sdot_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const f32,
        incx: rocblas_int,
        stridex: rocblas_stride,
        y: *const f32,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
        result: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ddot_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const f64,
        incx: rocblas_int,
        stridex: rocblas_stride,
        y: *const f64,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
        result: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_hdot_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const rocblas_half,
        incx: rocblas_int,
        stridex: rocblas_stride,
        y: *const rocblas_half,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
        result: *mut rocblas_half,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_bfdot_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const rocblas_bfloat16,
        incx: rocblas_int,
        stridex: rocblas_stride,
        y: *const rocblas_bfloat16,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
        result: *mut rocblas_bfloat16,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cdotu_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        stridex: rocblas_stride,
        y: *const rocblas_float_complex,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
        result: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zdotu_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        stridex: rocblas_stride,
        y: *const rocblas_double_complex,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
        result: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cdotc_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        stridex: rocblas_stride,
        y: *const rocblas_float_complex,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
        result: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zdotc_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        stridex: rocblas_stride,
        y: *const rocblas_double_complex,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
        result: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sdot_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const f32,
        incx: i64,
        stridex: rocblas_stride,
        y: *const f32,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
        result: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ddot_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const f64,
        incx: i64,
        stridex: rocblas_stride,
        y: *const f64,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
        result: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_hdot_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const rocblas_half,
        incx: i64,
        stridex: rocblas_stride,
        y: *const rocblas_half,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
        result: *mut rocblas_half,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_bfdot_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const rocblas_bfloat16,
        incx: i64,
        stridex: rocblas_stride,
        y: *const rocblas_bfloat16,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
        result: *mut rocblas_bfloat16,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cdotu_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const rocblas_float_complex,
        incx: i64,
        stridex: rocblas_stride,
        y: *const rocblas_float_complex,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
        result: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zdotu_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const rocblas_double_complex,
        incx: i64,
        stridex: rocblas_stride,
        y: *const rocblas_double_complex,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
        result: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cdotc_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const rocblas_float_complex,
        incx: i64,
        stridex: rocblas_stride,
        y: *const rocblas_float_complex,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
        result: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zdotc_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const rocblas_double_complex,
        incx: i64,
        stridex: rocblas_stride,
        y: *const rocblas_double_complex,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
        result: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sswap(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *mut f32,
        incx: rocblas_int,
        y: *mut f32,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dswap(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *mut f64,
        incx: rocblas_int,
        y: *mut f64,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cswap(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *mut rocblas_float_complex,
        incx: rocblas_int,
        y: *mut rocblas_float_complex,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zswap(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *mut rocblas_double_complex,
        incx: rocblas_int,
        y: *mut rocblas_double_complex,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sswap_64(
        handle: rocblas_handle,
        n: i64,
        x: *mut f32,
        incx: i64,
        y: *mut f32,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dswap_64(
        handle: rocblas_handle,
        n: i64,
        x: *mut f64,
        incx: i64,
        y: *mut f64,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cswap_64(
        handle: rocblas_handle,
        n: i64,
        x: *mut rocblas_float_complex,
        incx: i64,
        y: *mut rocblas_float_complex,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zswap_64(
        handle: rocblas_handle,
        n: i64,
        x: *mut rocblas_double_complex,
        incx: i64,
        y: *mut rocblas_double_complex,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sswap_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *mut f32,
        incx: rocblas_int,
        y: *const *mut f32,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dswap_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *mut f64,
        incx: rocblas_int,
        y: *const *mut f64,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cswap_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *mut rocblas_float_complex,
        incx: rocblas_int,
        y: *const *mut rocblas_float_complex,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zswap_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *mut rocblas_double_complex,
        incx: rocblas_int,
        y: *const *mut rocblas_double_complex,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sswap_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *mut f32,
        incx: i64,
        y: *const *mut f32,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dswap_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *mut f64,
        incx: i64,
        y: *const *mut f64,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cswap_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *mut rocblas_float_complex,
        incx: i64,
        y: *const *mut rocblas_float_complex,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zswap_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *mut rocblas_double_complex,
        incx: i64,
        y: *const *mut rocblas_double_complex,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sswap_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *mut f32,
        incx: rocblas_int,
        stridex: rocblas_stride,
        y: *mut f32,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dswap_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *mut f64,
        incx: rocblas_int,
        stridex: rocblas_stride,
        y: *mut f64,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cswap_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *mut rocblas_float_complex,
        incx: rocblas_int,
        stridex: rocblas_stride,
        y: *mut rocblas_float_complex,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zswap_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *mut rocblas_double_complex,
        incx: rocblas_int,
        stridex: rocblas_stride,
        y: *mut rocblas_double_complex,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sswap_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *mut f32,
        incx: i64,
        stridex: rocblas_stride,
        y: *mut f32,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dswap_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *mut f64,
        incx: i64,
        stridex: rocblas_stride,
        y: *mut f64,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cswap_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *mut rocblas_float_complex,
        incx: i64,
        stridex: rocblas_stride,
        y: *mut rocblas_float_complex,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zswap_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *mut rocblas_double_complex,
        incx: i64,
        stridex: rocblas_stride,
        y: *mut rocblas_double_complex,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_haxpy(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const rocblas_half,
        x: *const rocblas_half,
        incx: rocblas_int,
        y: *mut rocblas_half,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_saxpy(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const f32,
        x: *const f32,
        incx: rocblas_int,
        y: *mut f32,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_daxpy(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const f64,
        x: *const f64,
        incx: rocblas_int,
        y: *mut f64,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_caxpy(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        y: *mut rocblas_float_complex,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zaxpy(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        y: *mut rocblas_double_complex,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_haxpy_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const rocblas_half,
        x: *const rocblas_half,
        incx: i64,
        y: *mut rocblas_half,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_saxpy_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const f32,
        x: *const f32,
        incx: i64,
        y: *mut f32,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_daxpy_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const f64,
        x: *const f64,
        incx: i64,
        y: *mut f64,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_caxpy_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const rocblas_float_complex,
        x: *const rocblas_float_complex,
        incx: i64,
        y: *mut rocblas_float_complex,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zaxpy_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const rocblas_double_complex,
        x: *const rocblas_double_complex,
        incx: i64,
        y: *mut rocblas_double_complex,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_haxpy_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const rocblas_half,
        x: *const *const rocblas_half,
        incx: rocblas_int,
        y: *const *mut rocblas_half,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_saxpy_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const f32,
        x: *const *const f32,
        incx: rocblas_int,
        y: *const *mut f32,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_daxpy_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const f64,
        x: *const *const f64,
        incx: rocblas_int,
        y: *const *mut f64,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_caxpy_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        x: *const *const rocblas_float_complex,
        incx: rocblas_int,
        y: *const *mut rocblas_float_complex,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zaxpy_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        x: *const *const rocblas_double_complex,
        incx: rocblas_int,
        y: *const *mut rocblas_double_complex,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_haxpy_batched_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const rocblas_half,
        x: *const *const rocblas_half,
        incx: i64,
        y: *const *mut rocblas_half,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_saxpy_batched_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const f32,
        x: *const *const f32,
        incx: i64,
        y: *const *mut f32,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_daxpy_batched_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const f64,
        x: *const *const f64,
        incx: i64,
        y: *const *mut f64,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_caxpy_batched_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const rocblas_float_complex,
        x: *const *const rocblas_float_complex,
        incx: i64,
        y: *const *mut rocblas_float_complex,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zaxpy_batched_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const rocblas_double_complex,
        x: *const *const rocblas_double_complex,
        incx: i64,
        y: *const *mut rocblas_double_complex,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_haxpy_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const rocblas_half,
        x: *const rocblas_half,
        incx: rocblas_int,
        stridex: rocblas_stride,
        y: *mut rocblas_half,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_saxpy_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const f32,
        x: *const f32,
        incx: rocblas_int,
        stridex: rocblas_stride,
        y: *mut f32,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_daxpy_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const f64,
        x: *const f64,
        incx: rocblas_int,
        stridex: rocblas_stride,
        y: *mut f64,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_caxpy_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        stridex: rocblas_stride,
        y: *mut rocblas_float_complex,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zaxpy_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        stridex: rocblas_stride,
        y: *mut rocblas_double_complex,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_haxpy_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const rocblas_half,
        x: *const rocblas_half,
        incx: i64,
        stridex: rocblas_stride,
        y: *mut rocblas_half,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_saxpy_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const f32,
        x: *const f32,
        incx: i64,
        stridex: rocblas_stride,
        y: *mut f32,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_daxpy_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const f64,
        x: *const f64,
        incx: i64,
        stridex: rocblas_stride,
        y: *mut f64,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_caxpy_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const rocblas_float_complex,
        x: *const rocblas_float_complex,
        incx: i64,
        stridex: rocblas_stride,
        y: *mut rocblas_float_complex,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zaxpy_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const rocblas_double_complex,
        x: *const rocblas_double_complex,
        incx: i64,
        stridex: rocblas_stride,
        y: *mut rocblas_double_complex,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sasum(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const f32,
        incx: rocblas_int,
        result: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dasum(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const f64,
        incx: rocblas_int,
        result: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_scasum(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        result: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dzasum(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        result: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sasum_64(
        handle: rocblas_handle,
        n: i64,
        x: *const f32,
        incx: i64,
        result: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dasum_64(
        handle: rocblas_handle,
        n: i64,
        x: *const f64,
        incx: i64,
        result: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_scasum_64(
        handle: rocblas_handle,
        n: i64,
        x: *const rocblas_float_complex,
        incx: i64,
        result: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dzasum_64(
        handle: rocblas_handle,
        n: i64,
        x: *const rocblas_double_complex,
        incx: i64,
        result: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sasum_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *const f32,
        incx: rocblas_int,
        batch_count: rocblas_int,
        results: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dasum_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *const f64,
        incx: rocblas_int,
        batch_count: rocblas_int,
        results: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_scasum_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *const rocblas_float_complex,
        incx: rocblas_int,
        batch_count: rocblas_int,
        results: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dzasum_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *const rocblas_double_complex,
        incx: rocblas_int,
        batch_count: rocblas_int,
        results: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sasum_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *const f32,
        incx: i64,
        batch_count: i64,
        results: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dasum_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *const f64,
        incx: i64,
        batch_count: i64,
        results: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_scasum_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *const rocblas_float_complex,
        incx: i64,
        batch_count: i64,
        results: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dzasum_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *const rocblas_double_complex,
        incx: i64,
        batch_count: i64,
        results: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sasum_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const f32,
        incx: rocblas_int,
        stridex: rocblas_stride,
        batch_count: rocblas_int,
        results: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dasum_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const f64,
        incx: rocblas_int,
        stridex: rocblas_stride,
        batch_count: rocblas_int,
        results: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_scasum_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        stridex: rocblas_stride,
        batch_count: rocblas_int,
        results: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dzasum_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        stridex: rocblas_stride,
        batch_count: rocblas_int,
        results: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sasum_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const f32,
        incx: i64,
        stridex: rocblas_stride,
        batch_count: i64,
        results: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dasum_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const f64,
        incx: i64,
        stridex: rocblas_stride,
        batch_count: i64,
        results: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_scasum_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const rocblas_float_complex,
        incx: i64,
        stridex: rocblas_stride,
        batch_count: i64,
        results: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dzasum_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const rocblas_double_complex,
        incx: i64,
        stridex: rocblas_stride,
        batch_count: i64,
        results: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_snrm2(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const f32,
        incx: rocblas_int,
        result: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dnrm2(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const f64,
        incx: rocblas_int,
        result: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_scnrm2(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        result: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dznrm2(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        result: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_snrm2_64(
        handle: rocblas_handle,
        n: i64,
        x: *const f32,
        incx: i64,
        result: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dnrm2_64(
        handle: rocblas_handle,
        n: i64,
        x: *const f64,
        incx: i64,
        result: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_scnrm2_64(
        handle: rocblas_handle,
        n: i64,
        x: *const rocblas_float_complex,
        incx: i64,
        result: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dznrm2_64(
        handle: rocblas_handle,
        n: i64,
        x: *const rocblas_double_complex,
        incx: i64,
        result: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_snrm2_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *const f32,
        incx: rocblas_int,
        batch_count: rocblas_int,
        results: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dnrm2_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *const f64,
        incx: rocblas_int,
        batch_count: rocblas_int,
        results: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_scnrm2_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *const rocblas_float_complex,
        incx: rocblas_int,
        batch_count: rocblas_int,
        results: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dznrm2_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *const rocblas_double_complex,
        incx: rocblas_int,
        batch_count: rocblas_int,
        results: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_snrm2_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *const f32,
        incx: i64,
        batch_count: i64,
        results: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dnrm2_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *const f64,
        incx: i64,
        batch_count: i64,
        results: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_scnrm2_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *const rocblas_float_complex,
        incx: i64,
        batch_count: i64,
        results: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dznrm2_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *const rocblas_double_complex,
        incx: i64,
        batch_count: i64,
        results: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_snrm2_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const f32,
        incx: rocblas_int,
        stridex: rocblas_stride,
        batch_count: rocblas_int,
        results: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dnrm2_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const f64,
        incx: rocblas_int,
        stridex: rocblas_stride,
        batch_count: rocblas_int,
        results: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_scnrm2_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        stridex: rocblas_stride,
        batch_count: rocblas_int,
        results: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dznrm2_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        stridex: rocblas_stride,
        batch_count: rocblas_int,
        results: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_snrm2_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const f32,
        incx: i64,
        stridex: rocblas_stride,
        batch_count: i64,
        results: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dnrm2_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const f64,
        incx: i64,
        stridex: rocblas_stride,
        batch_count: i64,
        results: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_scnrm2_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const rocblas_float_complex,
        incx: i64,
        stridex: rocblas_stride,
        batch_count: i64,
        results: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dznrm2_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const rocblas_double_complex,
        incx: i64,
        stridex: rocblas_stride,
        batch_count: i64,
        results: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_isamax(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const f32,
        incx: rocblas_int,
        result: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_idamax(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const f64,
        incx: rocblas_int,
        result: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_icamax(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        result: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_izamax(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        result: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_isamax_64(
        handle: rocblas_handle,
        n: i64,
        x: *const f32,
        incx: i64,
        result: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_idamax_64(
        handle: rocblas_handle,
        n: i64,
        x: *const f64,
        incx: i64,
        result: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_icamax_64(
        handle: rocblas_handle,
        n: i64,
        x: *const rocblas_float_complex,
        incx: i64,
        result: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_izamax_64(
        handle: rocblas_handle,
        n: i64,
        x: *const rocblas_double_complex,
        incx: i64,
        result: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_isamax_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *const f32,
        incx: rocblas_int,
        batch_count: rocblas_int,
        result: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_idamax_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *const f64,
        incx: rocblas_int,
        batch_count: rocblas_int,
        result: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_icamax_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *const rocblas_float_complex,
        incx: rocblas_int,
        batch_count: rocblas_int,
        result: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_izamax_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *const rocblas_double_complex,
        incx: rocblas_int,
        batch_count: rocblas_int,
        result: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_isamax_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *const f32,
        incx: i64,
        batch_count: i64,
        result: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_idamax_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *const f64,
        incx: i64,
        batch_count: i64,
        result: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_icamax_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *const rocblas_float_complex,
        incx: i64,
        batch_count: i64,
        result: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_izamax_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *const rocblas_double_complex,
        incx: i64,
        batch_count: i64,
        result: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_isamax_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const f32,
        incx: rocblas_int,
        stridex: rocblas_stride,
        batch_count: rocblas_int,
        result: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_idamax_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const f64,
        incx: rocblas_int,
        stridex: rocblas_stride,
        batch_count: rocblas_int,
        result: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_icamax_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        stridex: rocblas_stride,
        batch_count: rocblas_int,
        result: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_izamax_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        stridex: rocblas_stride,
        batch_count: rocblas_int,
        result: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_isamax_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const f32,
        incx: i64,
        stridex: rocblas_stride,
        batch_count: i64,
        result: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_idamax_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const f64,
        incx: i64,
        stridex: rocblas_stride,
        batch_count: i64,
        result: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_icamax_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const rocblas_float_complex,
        incx: i64,
        stridex: rocblas_stride,
        batch_count: i64,
        result: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_izamax_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const rocblas_double_complex,
        incx: i64,
        stridex: rocblas_stride,
        batch_count: i64,
        result: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_isamin(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const f32,
        incx: rocblas_int,
        result: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_idamin(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const f64,
        incx: rocblas_int,
        result: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_icamin(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        result: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_izamin(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        result: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_isamin_64(
        handle: rocblas_handle,
        n: i64,
        x: *const f32,
        incx: i64,
        result: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_idamin_64(
        handle: rocblas_handle,
        n: i64,
        x: *const f64,
        incx: i64,
        result: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_icamin_64(
        handle: rocblas_handle,
        n: i64,
        x: *const rocblas_float_complex,
        incx: i64,
        result: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_izamin_64(
        handle: rocblas_handle,
        n: i64,
        x: *const rocblas_double_complex,
        incx: i64,
        result: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_isamin_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *const f32,
        incx: rocblas_int,
        batch_count: rocblas_int,
        result: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_idamin_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *const f64,
        incx: rocblas_int,
        batch_count: rocblas_int,
        result: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_icamin_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *const rocblas_float_complex,
        incx: rocblas_int,
        batch_count: rocblas_int,
        result: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_izamin_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *const rocblas_double_complex,
        incx: rocblas_int,
        batch_count: rocblas_int,
        result: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_isamin_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *const f32,
        incx: i64,
        batch_count: i64,
        result: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_idamin_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *const f64,
        incx: i64,
        batch_count: i64,
        result: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_icamin_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *const rocblas_float_complex,
        incx: i64,
        batch_count: i64,
        result: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_izamin_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *const rocblas_double_complex,
        incx: i64,
        batch_count: i64,
        result: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_isamin_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const f32,
        incx: rocblas_int,
        stridex: rocblas_stride,
        batch_count: rocblas_int,
        result: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_idamin_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const f64,
        incx: rocblas_int,
        stridex: rocblas_stride,
        batch_count: rocblas_int,
        result: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_icamin_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        stridex: rocblas_stride,
        batch_count: rocblas_int,
        result: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_izamin_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        stridex: rocblas_stride,
        batch_count: rocblas_int,
        result: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_isamin_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const f32,
        incx: i64,
        stridex: rocblas_stride,
        batch_count: i64,
        result: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_idamin_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const f64,
        incx: i64,
        stridex: rocblas_stride,
        batch_count: i64,
        result: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_icamin_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const rocblas_float_complex,
        incx: i64,
        stridex: rocblas_stride,
        batch_count: i64,
        result: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_izamin_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const rocblas_double_complex,
        incx: i64,
        stridex: rocblas_stride,
        batch_count: i64,
        result: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_srot(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *mut f32,
        incx: rocblas_int,
        y: *mut f32,
        incy: rocblas_int,
        c: *const f32,
        s: *const f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_drot(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *mut f64,
        incx: rocblas_int,
        y: *mut f64,
        incy: rocblas_int,
        c: *const f64,
        s: *const f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_crot(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *mut rocblas_float_complex,
        incx: rocblas_int,
        y: *mut rocblas_float_complex,
        incy: rocblas_int,
        c: *const f32,
        s: *const rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csrot(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *mut rocblas_float_complex,
        incx: rocblas_int,
        y: *mut rocblas_float_complex,
        incy: rocblas_int,
        c: *const f32,
        s: *const f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zrot(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *mut rocblas_double_complex,
        incx: rocblas_int,
        y: *mut rocblas_double_complex,
        incy: rocblas_int,
        c: *const f64,
        s: *const rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zdrot(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *mut rocblas_double_complex,
        incx: rocblas_int,
        y: *mut rocblas_double_complex,
        incy: rocblas_int,
        c: *const f64,
        s: *const f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_srot_64(
        handle: rocblas_handle,
        n: i64,
        x: *mut f32,
        incx: i64,
        y: *mut f32,
        incy: i64,
        c: *const f32,
        s: *const f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_drot_64(
        handle: rocblas_handle,
        n: i64,
        x: *mut f64,
        incx: i64,
        y: *mut f64,
        incy: i64,
        c: *const f64,
        s: *const f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_crot_64(
        handle: rocblas_handle,
        n: i64,
        x: *mut rocblas_float_complex,
        incx: i64,
        y: *mut rocblas_float_complex,
        incy: i64,
        c: *const f32,
        s: *const rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csrot_64(
        handle: rocblas_handle,
        n: i64,
        x: *mut rocblas_float_complex,
        incx: i64,
        y: *mut rocblas_float_complex,
        incy: i64,
        c: *const f32,
        s: *const f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zrot_64(
        handle: rocblas_handle,
        n: i64,
        x: *mut rocblas_double_complex,
        incx: i64,
        y: *mut rocblas_double_complex,
        incy: i64,
        c: *const f64,
        s: *const rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zdrot_64(
        handle: rocblas_handle,
        n: i64,
        x: *mut rocblas_double_complex,
        incx: i64,
        y: *mut rocblas_double_complex,
        incy: i64,
        c: *const f64,
        s: *const f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_srot_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *mut f32,
        incx: rocblas_int,
        y: *const *mut f32,
        incy: rocblas_int,
        c: *const f32,
        s: *const f32,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_drot_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *mut f64,
        incx: rocblas_int,
        y: *const *mut f64,
        incy: rocblas_int,
        c: *const f64,
        s: *const f64,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_crot_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *mut rocblas_float_complex,
        incx: rocblas_int,
        y: *const *mut rocblas_float_complex,
        incy: rocblas_int,
        c: *const f32,
        s: *const rocblas_float_complex,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csrot_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *mut rocblas_float_complex,
        incx: rocblas_int,
        y: *const *mut rocblas_float_complex,
        incy: rocblas_int,
        c: *const f32,
        s: *const f32,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zrot_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *mut rocblas_double_complex,
        incx: rocblas_int,
        y: *const *mut rocblas_double_complex,
        incy: rocblas_int,
        c: *const f64,
        s: *const rocblas_double_complex,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zdrot_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *mut rocblas_double_complex,
        incx: rocblas_int,
        y: *const *mut rocblas_double_complex,
        incy: rocblas_int,
        c: *const f64,
        s: *const f64,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_srot_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *mut f32,
        incx: i64,
        y: *const *mut f32,
        incy: i64,
        c: *const f32,
        s: *const f32,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_drot_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *mut f64,
        incx: i64,
        y: *const *mut f64,
        incy: i64,
        c: *const f64,
        s: *const f64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_crot_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *mut rocblas_float_complex,
        incx: i64,
        y: *const *mut rocblas_float_complex,
        incy: i64,
        c: *const f32,
        s: *const rocblas_float_complex,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csrot_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *mut rocblas_float_complex,
        incx: i64,
        y: *const *mut rocblas_float_complex,
        incy: i64,
        c: *const f32,
        s: *const f32,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zrot_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *mut rocblas_double_complex,
        incx: i64,
        y: *const *mut rocblas_double_complex,
        incy: i64,
        c: *const f64,
        s: *const rocblas_double_complex,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zdrot_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *mut rocblas_double_complex,
        incx: i64,
        y: *const *mut rocblas_double_complex,
        incy: i64,
        c: *const f64,
        s: *const f64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_srot_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *mut f32,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        y: *mut f32,
        incy: rocblas_int,
        stride_y: rocblas_stride,
        c: *const f32,
        s: *const f32,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_drot_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *mut f64,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        y: *mut f64,
        incy: rocblas_int,
        stride_y: rocblas_stride,
        c: *const f64,
        s: *const f64,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_crot_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *mut rocblas_float_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        y: *mut rocblas_float_complex,
        incy: rocblas_int,
        stride_y: rocblas_stride,
        c: *const f32,
        s: *const rocblas_float_complex,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csrot_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *mut rocblas_float_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        y: *mut rocblas_float_complex,
        incy: rocblas_int,
        stride_y: rocblas_stride,
        c: *const f32,
        s: *const f32,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zrot_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *mut rocblas_double_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        y: *mut rocblas_double_complex,
        incy: rocblas_int,
        stride_y: rocblas_stride,
        c: *const f64,
        s: *const rocblas_double_complex,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zdrot_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *mut rocblas_double_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        y: *mut rocblas_double_complex,
        incy: rocblas_int,
        stride_y: rocblas_stride,
        c: *const f64,
        s: *const f64,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_srot_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *mut f32,
        incx: i64,
        stride_x: rocblas_stride,
        y: *mut f32,
        incy: i64,
        stride_y: rocblas_stride,
        c: *const f32,
        s: *const f32,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_drot_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *mut f64,
        incx: i64,
        stride_x: rocblas_stride,
        y: *mut f64,
        incy: i64,
        stride_y: rocblas_stride,
        c: *const f64,
        s: *const f64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_crot_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *mut rocblas_float_complex,
        incx: i64,
        stride_x: rocblas_stride,
        y: *mut rocblas_float_complex,
        incy: i64,
        stride_y: rocblas_stride,
        c: *const f32,
        s: *const rocblas_float_complex,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csrot_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *mut rocblas_float_complex,
        incx: i64,
        stride_x: rocblas_stride,
        y: *mut rocblas_float_complex,
        incy: i64,
        stride_y: rocblas_stride,
        c: *const f32,
        s: *const f32,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zrot_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *mut rocblas_double_complex,
        incx: i64,
        stride_x: rocblas_stride,
        y: *mut rocblas_double_complex,
        incy: i64,
        stride_y: rocblas_stride,
        c: *const f64,
        s: *const rocblas_double_complex,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zdrot_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *mut rocblas_double_complex,
        incx: i64,
        stride_x: rocblas_stride,
        y: *mut rocblas_double_complex,
        incy: i64,
        stride_y: rocblas_stride,
        c: *const f64,
        s: *const f64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_srotg(
        handle: rocblas_handle,
        a: *mut f32,
        b: *mut f32,
        c: *mut f32,
        s: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_drotg(
        handle: rocblas_handle,
        a: *mut f64,
        b: *mut f64,
        c: *mut f64,
        s: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_crotg(
        handle: rocblas_handle,
        a: *mut rocblas_float_complex,
        b: *mut rocblas_float_complex,
        c: *mut f32,
        s: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zrotg(
        handle: rocblas_handle,
        a: *mut rocblas_double_complex,
        b: *mut rocblas_double_complex,
        c: *mut f64,
        s: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_srotg_64(
        handle: rocblas_handle,
        a: *mut f32,
        b: *mut f32,
        c: *mut f32,
        s: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_drotg_64(
        handle: rocblas_handle,
        a: *mut f64,
        b: *mut f64,
        c: *mut f64,
        s: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_crotg_64(
        handle: rocblas_handle,
        a: *mut rocblas_float_complex,
        b: *mut rocblas_float_complex,
        c: *mut f32,
        s: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zrotg_64(
        handle: rocblas_handle,
        a: *mut rocblas_double_complex,
        b: *mut rocblas_double_complex,
        c: *mut f64,
        s: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_srotg_batched(
        handle: rocblas_handle,
        a: *const *mut f32,
        b: *const *mut f32,
        c: *const *mut f32,
        s: *const *mut f32,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_drotg_batched(
        handle: rocblas_handle,
        a: *const *mut f64,
        b: *const *mut f64,
        c: *const *mut f64,
        s: *const *mut f64,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_crotg_batched(
        handle: rocblas_handle,
        a: *const *mut rocblas_float_complex,
        b: *const *mut rocblas_float_complex,
        c: *const *mut f32,
        s: *const *mut rocblas_float_complex,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zrotg_batched(
        handle: rocblas_handle,
        a: *const *mut rocblas_double_complex,
        b: *const *mut rocblas_double_complex,
        c: *const *mut f64,
        s: *const *mut rocblas_double_complex,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_srotg_batched_64(
        handle: rocblas_handle,
        a: *const *mut f32,
        b: *const *mut f32,
        c: *const *mut f32,
        s: *const *mut f32,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_drotg_batched_64(
        handle: rocblas_handle,
        a: *const *mut f64,
        b: *const *mut f64,
        c: *const *mut f64,
        s: *const *mut f64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_crotg_batched_64(
        handle: rocblas_handle,
        a: *const *mut rocblas_float_complex,
        b: *const *mut rocblas_float_complex,
        c: *const *mut f32,
        s: *const *mut rocblas_float_complex,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zrotg_batched_64(
        handle: rocblas_handle,
        a: *const *mut rocblas_double_complex,
        b: *const *mut rocblas_double_complex,
        c: *const *mut f64,
        s: *const *mut rocblas_double_complex,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_srotg_strided_batched(
        handle: rocblas_handle,
        a: *mut f32,
        stride_a: rocblas_stride,
        b: *mut f32,
        stride_b: rocblas_stride,
        c: *mut f32,
        stride_c: rocblas_stride,
        s: *mut f32,
        stride_s: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_drotg_strided_batched(
        handle: rocblas_handle,
        a: *mut f64,
        stride_a: rocblas_stride,
        b: *mut f64,
        stride_b: rocblas_stride,
        c: *mut f64,
        stride_c: rocblas_stride,
        s: *mut f64,
        stride_s: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_crotg_strided_batched(
        handle: rocblas_handle,
        a: *mut rocblas_float_complex,
        stride_a: rocblas_stride,
        b: *mut rocblas_float_complex,
        stride_b: rocblas_stride,
        c: *mut f32,
        stride_c: rocblas_stride,
        s: *mut rocblas_float_complex,
        stride_s: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zrotg_strided_batched(
        handle: rocblas_handle,
        a: *mut rocblas_double_complex,
        stride_a: rocblas_stride,
        b: *mut rocblas_double_complex,
        stride_b: rocblas_stride,
        c: *mut f64,
        stride_c: rocblas_stride,
        s: *mut rocblas_double_complex,
        stride_s: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_srotg_strided_batched_64(
        handle: rocblas_handle,
        a: *mut f32,
        stride_a: rocblas_stride,
        b: *mut f32,
        stride_b: rocblas_stride,
        c: *mut f32,
        stride_c: rocblas_stride,
        s: *mut f32,
        stride_s: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_drotg_strided_batched_64(
        handle: rocblas_handle,
        a: *mut f64,
        stride_a: rocblas_stride,
        b: *mut f64,
        stride_b: rocblas_stride,
        c: *mut f64,
        stride_c: rocblas_stride,
        s: *mut f64,
        stride_s: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_crotg_strided_batched_64(
        handle: rocblas_handle,
        a: *mut rocblas_float_complex,
        stride_a: rocblas_stride,
        b: *mut rocblas_float_complex,
        stride_b: rocblas_stride,
        c: *mut f32,
        stride_c: rocblas_stride,
        s: *mut rocblas_float_complex,
        stride_s: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zrotg_strided_batched_64(
        handle: rocblas_handle,
        a: *mut rocblas_double_complex,
        stride_a: rocblas_stride,
        b: *mut rocblas_double_complex,
        stride_b: rocblas_stride,
        c: *mut f64,
        stride_c: rocblas_stride,
        s: *mut rocblas_double_complex,
        stride_s: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_srotm(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *mut f32,
        incx: rocblas_int,
        y: *mut f32,
        incy: rocblas_int,
        param: *const f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_drotm(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *mut f64,
        incx: rocblas_int,
        y: *mut f64,
        incy: rocblas_int,
        param: *const f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_srotm_64(
        handle: rocblas_handle,
        n: i64,
        x: *mut f32,
        incx: i64,
        y: *mut f32,
        incy: i64,
        param: *const f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_drotm_64(
        handle: rocblas_handle,
        n: i64,
        x: *mut f64,
        incx: i64,
        y: *mut f64,
        incy: i64,
        param: *const f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_srotm_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *mut f32,
        incx: rocblas_int,
        y: *const *mut f32,
        incy: rocblas_int,
        param: *const *const f32,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_drotm_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const *mut f64,
        incx: rocblas_int,
        y: *const *mut f64,
        incy: rocblas_int,
        param: *const *const f64,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_srotm_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *mut f32,
        incx: i64,
        y: *const *mut f32,
        incy: i64,
        param: *const *const f32,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_drotm_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *const *mut f64,
        incx: i64,
        y: *const *mut f64,
        incy: i64,
        param: *const *const f64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_srotm_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *mut f32,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        y: *mut f32,
        incy: rocblas_int,
        stride_y: rocblas_stride,
        param: *const f32,
        stride_param: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_drotm_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *mut f64,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        y: *mut f64,
        incy: rocblas_int,
        stride_y: rocblas_stride,
        param: *const f64,
        stride_param: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_srotm_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *mut f32,
        incx: i64,
        stride_x: rocblas_stride,
        y: *mut f32,
        incy: i64,
        stride_y: rocblas_stride,
        param: *const f32,
        stride_param: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_drotm_strided_batched_64(
        handle: rocblas_handle,
        n: i64,
        x: *mut f64,
        incx: i64,
        stride_x: rocblas_stride,
        y: *mut f64,
        incy: i64,
        stride_y: rocblas_stride,
        param: *const f64,
        stride_param: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_srotmg(
        handle: rocblas_handle,
        d1: *mut f32,
        d2: *mut f32,
        x1: *mut f32,
        y1: *const f32,
        param: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_drotmg(
        handle: rocblas_handle,
        d1: *mut f64,
        d2: *mut f64,
        x1: *mut f64,
        y1: *const f64,
        param: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_srotmg_64(
        handle: rocblas_handle,
        d1: *mut f32,
        d2: *mut f32,
        x1: *mut f32,
        y1: *const f32,
        param: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_drotmg_64(
        handle: rocblas_handle,
        d1: *mut f64,
        d2: *mut f64,
        x1: *mut f64,
        y1: *const f64,
        param: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_srotmg_batched(
        handle: rocblas_handle,
        d1: *const *mut f32,
        d2: *const *mut f32,
        x1: *const *mut f32,
        y1: *const *const f32,
        param: *const *mut f32,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_drotmg_batched(
        handle: rocblas_handle,
        d1: *const *mut f64,
        d2: *const *mut f64,
        x1: *const *mut f64,
        y1: *const *const f64,
        param: *const *mut f64,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_srotmg_batched_64(
        handle: rocblas_handle,
        d1: *const *mut f32,
        d2: *const *mut f32,
        x1: *const *mut f32,
        y1: *const *const f32,
        param: *const *mut f32,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_drotmg_batched_64(
        handle: rocblas_handle,
        d1: *const *mut f64,
        d2: *const *mut f64,
        x1: *const *mut f64,
        y1: *const *const f64,
        param: *const *mut f64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_srotmg_strided_batched(
        handle: rocblas_handle,
        d1: *mut f32,
        stride_d1: rocblas_stride,
        d2: *mut f32,
        stride_d2: rocblas_stride,
        x1: *mut f32,
        stride_x1: rocblas_stride,
        y1: *const f32,
        stride_y1: rocblas_stride,
        param: *mut f32,
        stride_param: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_drotmg_strided_batched(
        handle: rocblas_handle,
        d1: *mut f64,
        stride_d1: rocblas_stride,
        d2: *mut f64,
        stride_d2: rocblas_stride,
        x1: *mut f64,
        stride_x1: rocblas_stride,
        y1: *const f64,
        stride_y1: rocblas_stride,
        param: *mut f64,
        stride_param: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_srotmg_strided_batched_64(
        handle: rocblas_handle,
        d1: *mut f32,
        stride_d1: rocblas_stride,
        d2: *mut f32,
        stride_d2: rocblas_stride,
        x1: *mut f32,
        stride_x1: rocblas_stride,
        y1: *const f32,
        stride_y1: rocblas_stride,
        param: *mut f32,
        stride_param: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_drotmg_strided_batched_64(
        handle: rocblas_handle,
        d1: *mut f64,
        stride_d1: rocblas_stride,
        d2: *mut f64,
        stride_d2: rocblas_stride,
        x1: *mut f64,
        stride_x1: rocblas_stride,
        y1: *const f64,
        stride_y1: rocblas_stride,
        param: *mut f64,
        stride_param: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sgbmv(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        kl: rocblas_int,
        ku: rocblas_int,
        alpha: *const f32,
        A: *const f32,
        lda: rocblas_int,
        x: *const f32,
        incx: rocblas_int,
        beta: *const f32,
        y: *mut f32,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dgbmv(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        kl: rocblas_int,
        ku: rocblas_int,
        alpha: *const f64,
        A: *const f64,
        lda: rocblas_int,
        x: *const f64,
        incx: rocblas_int,
        beta: *const f64,
        y: *mut f64,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgbmv(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        kl: rocblas_int,
        ku: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        beta: *const rocblas_float_complex,
        y: *mut rocblas_float_complex,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgbmv(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        kl: rocblas_int,
        ku: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        beta: *const rocblas_double_complex,
        y: *mut rocblas_double_complex,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sgbmv_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: i64,
        n: i64,
        kl: i64,
        ku: i64,
        alpha: *const f32,
        A: *const f32,
        lda: i64,
        x: *const f32,
        incx: i64,
        beta: *const f32,
        y: *mut f32,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dgbmv_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: i64,
        n: i64,
        kl: i64,
        ku: i64,
        alpha: *const f64,
        A: *const f64,
        lda: i64,
        x: *const f64,
        incx: i64,
        beta: *const f64,
        y: *mut f64,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgbmv_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: i64,
        n: i64,
        kl: i64,
        ku: i64,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: i64,
        x: *const rocblas_float_complex,
        incx: i64,
        beta: *const rocblas_float_complex,
        y: *mut rocblas_float_complex,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgbmv_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: i64,
        n: i64,
        kl: i64,
        ku: i64,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: i64,
        x: *const rocblas_double_complex,
        incx: i64,
        beta: *const rocblas_double_complex,
        y: *mut rocblas_double_complex,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sgbmv_batched(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        kl: rocblas_int,
        ku: rocblas_int,
        alpha: *const f32,
        A: *const *const f32,
        lda: rocblas_int,
        x: *const *const f32,
        incx: rocblas_int,
        beta: *const f32,
        y: *const *mut f32,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dgbmv_batched(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        kl: rocblas_int,
        ku: rocblas_int,
        alpha: *const f64,
        A: *const *const f64,
        lda: rocblas_int,
        x: *const *const f64,
        incx: rocblas_int,
        beta: *const f64,
        y: *const *mut f64,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgbmv_batched(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        kl: rocblas_int,
        ku: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const *const rocblas_float_complex,
        lda: rocblas_int,
        x: *const *const rocblas_float_complex,
        incx: rocblas_int,
        beta: *const rocblas_float_complex,
        y: *const *mut rocblas_float_complex,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgbmv_batched(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        kl: rocblas_int,
        ku: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const *const rocblas_double_complex,
        lda: rocblas_int,
        x: *const *const rocblas_double_complex,
        incx: rocblas_int,
        beta: *const rocblas_double_complex,
        y: *const *mut rocblas_double_complex,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sgbmv_batched_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: i64,
        n: i64,
        kl: i64,
        ku: i64,
        alpha: *const f32,
        A: *const *const f32,
        lda: i64,
        x: *const *const f32,
        incx: i64,
        beta: *const f32,
        y: *const *mut f32,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dgbmv_batched_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: i64,
        n: i64,
        kl: i64,
        ku: i64,
        alpha: *const f64,
        A: *const *const f64,
        lda: i64,
        x: *const *const f64,
        incx: i64,
        beta: *const f64,
        y: *const *mut f64,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgbmv_batched_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: i64,
        n: i64,
        kl: i64,
        ku: i64,
        alpha: *const rocblas_float_complex,
        A: *const *const rocblas_float_complex,
        lda: i64,
        x: *const *const rocblas_float_complex,
        incx: i64,
        beta: *const rocblas_float_complex,
        y: *const *mut rocblas_float_complex,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgbmv_batched_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: i64,
        n: i64,
        kl: i64,
        ku: i64,
        alpha: *const rocblas_double_complex,
        A: *const *const rocblas_double_complex,
        lda: i64,
        x: *const *const rocblas_double_complex,
        incx: i64,
        beta: *const rocblas_double_complex,
        y: *const *mut rocblas_double_complex,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sgbmv_strided_batched(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        kl: rocblas_int,
        ku: rocblas_int,
        alpha: *const f32,
        A: *const f32,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        x: *const f32,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        beta: *const f32,
        y: *mut f32,
        incy: rocblas_int,
        stride_y: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dgbmv_strided_batched(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        kl: rocblas_int,
        ku: rocblas_int,
        alpha: *const f64,
        A: *const f64,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        x: *const f64,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        beta: *const f64,
        y: *mut f64,
        incy: rocblas_int,
        stride_y: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgbmv_strided_batched(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        kl: rocblas_int,
        ku: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        beta: *const rocblas_float_complex,
        y: *mut rocblas_float_complex,
        incy: rocblas_int,
        stride_y: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgbmv_strided_batched(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        kl: rocblas_int,
        ku: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        beta: *const rocblas_double_complex,
        y: *mut rocblas_double_complex,
        incy: rocblas_int,
        stride_y: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sgbmv_strided_batched_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: i64,
        n: i64,
        kl: i64,
        ku: i64,
        alpha: *const f32,
        A: *const f32,
        lda: i64,
        stride_A: rocblas_stride,
        x: *const f32,
        incx: i64,
        stride_x: rocblas_stride,
        beta: *const f32,
        y: *mut f32,
        incy: i64,
        stride_y: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dgbmv_strided_batched_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: i64,
        n: i64,
        kl: i64,
        ku: i64,
        alpha: *const f64,
        A: *const f64,
        lda: i64,
        stride_A: rocblas_stride,
        x: *const f64,
        incx: i64,
        stride_x: rocblas_stride,
        beta: *const f64,
        y: *mut f64,
        incy: i64,
        stride_y: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgbmv_strided_batched_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: i64,
        n: i64,
        kl: i64,
        ku: i64,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: i64,
        stride_A: rocblas_stride,
        x: *const rocblas_float_complex,
        incx: i64,
        stride_x: rocblas_stride,
        beta: *const rocblas_float_complex,
        y: *mut rocblas_float_complex,
        incy: i64,
        stride_y: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgbmv_strided_batched_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: i64,
        n: i64,
        kl: i64,
        ku: i64,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: i64,
        stride_A: rocblas_stride,
        x: *const rocblas_double_complex,
        incx: i64,
        stride_x: rocblas_stride,
        beta: *const rocblas_double_complex,
        y: *mut rocblas_double_complex,
        incy: i64,
        stride_y: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sgemv(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f32,
        A: *const f32,
        lda: rocblas_int,
        x: *const f32,
        incx: rocblas_int,
        beta: *const f32,
        y: *mut f32,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dgemv(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f64,
        A: *const f64,
        lda: rocblas_int,
        x: *const f64,
        incx: rocblas_int,
        beta: *const f64,
        y: *mut f64,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgemv(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        beta: *const rocblas_float_complex,
        y: *mut rocblas_float_complex,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgemv(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        beta: *const rocblas_double_complex,
        y: *mut rocblas_double_complex,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sgemv_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: i64,
        n: i64,
        alpha: *const f32,
        A: *const f32,
        lda: i64,
        x: *const f32,
        incx: i64,
        beta: *const f32,
        y: *mut f32,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dgemv_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: i64,
        n: i64,
        alpha: *const f64,
        A: *const f64,
        lda: i64,
        x: *const f64,
        incx: i64,
        beta: *const f64,
        y: *mut f64,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgemv_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: i64,
        n: i64,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: i64,
        x: *const rocblas_float_complex,
        incx: i64,
        beta: *const rocblas_float_complex,
        y: *mut rocblas_float_complex,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgemv_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: i64,
        n: i64,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: i64,
        x: *const rocblas_double_complex,
        incx: i64,
        beta: *const rocblas_double_complex,
        y: *mut rocblas_double_complex,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sgemv_batched(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f32,
        A: *const *const f32,
        lda: rocblas_int,
        x: *const *const f32,
        incx: rocblas_int,
        beta: *const f32,
        y: *const *mut f32,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dgemv_batched(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f64,
        A: *const *const f64,
        lda: rocblas_int,
        x: *const *const f64,
        incx: rocblas_int,
        beta: *const f64,
        y: *const *mut f64,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgemv_batched(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const *const rocblas_float_complex,
        lda: rocblas_int,
        x: *const *const rocblas_float_complex,
        incx: rocblas_int,
        beta: *const rocblas_float_complex,
        y: *const *mut rocblas_float_complex,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgemv_batched(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const *const rocblas_double_complex,
        lda: rocblas_int,
        x: *const *const rocblas_double_complex,
        incx: rocblas_int,
        beta: *const rocblas_double_complex,
        y: *const *mut rocblas_double_complex,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_hshgemv_batched(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f32,
        A: *const *const rocblas_half,
        lda: rocblas_int,
        x: *const *const rocblas_half,
        incx: rocblas_int,
        beta: *const f32,
        y: *const *mut rocblas_half,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_hssgemv_batched(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f32,
        A: *const *const rocblas_half,
        lda: rocblas_int,
        x: *const *const rocblas_half,
        incx: rocblas_int,
        beta: *const f32,
        y: *const *mut f32,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_tstgemv_batched(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f32,
        A: *const *const rocblas_bfloat16,
        lda: rocblas_int,
        x: *const *const rocblas_bfloat16,
        incx: rocblas_int,
        beta: *const f32,
        y: *const *mut rocblas_bfloat16,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_tssgemv_batched(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f32,
        A: *const *const rocblas_bfloat16,
        lda: rocblas_int,
        x: *const *const rocblas_bfloat16,
        incx: rocblas_int,
        beta: *const f32,
        y: *const *mut f32,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sgemv_batched_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: i64,
        n: i64,
        alpha: *const f32,
        A: *const *const f32,
        lda: i64,
        x: *const *const f32,
        incx: i64,
        beta: *const f32,
        y: *const *mut f32,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dgemv_batched_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: i64,
        n: i64,
        alpha: *const f64,
        A: *const *const f64,
        lda: i64,
        x: *const *const f64,
        incx: i64,
        beta: *const f64,
        y: *const *mut f64,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgemv_batched_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: i64,
        n: i64,
        alpha: *const rocblas_float_complex,
        A: *const *const rocblas_float_complex,
        lda: i64,
        x: *const *const rocblas_float_complex,
        incx: i64,
        beta: *const rocblas_float_complex,
        y: *const *mut rocblas_float_complex,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgemv_batched_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: i64,
        n: i64,
        alpha: *const rocblas_double_complex,
        A: *const *const rocblas_double_complex,
        lda: i64,
        x: *const *const rocblas_double_complex,
        incx: i64,
        beta: *const rocblas_double_complex,
        y: *const *mut rocblas_double_complex,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_hshgemv_batched_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: i64,
        n: i64,
        alpha: *const f32,
        A: *const *const rocblas_half,
        lda: i64,
        x: *const *const rocblas_half,
        incx: i64,
        beta: *const f32,
        y: *const *mut rocblas_half,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_hssgemv_batched_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: i64,
        n: i64,
        alpha: *const f32,
        A: *const *const rocblas_half,
        lda: i64,
        x: *const *const rocblas_half,
        incx: i64,
        beta: *const f32,
        y: *const *mut f32,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_tstgemv_batched_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: i64,
        n: i64,
        alpha: *const f32,
        A: *const *const rocblas_bfloat16,
        lda: i64,
        x: *const *const rocblas_bfloat16,
        incx: i64,
        beta: *const f32,
        y: *const *mut rocblas_bfloat16,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_tssgemv_batched_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: i64,
        n: i64,
        alpha: *const f32,
        A: *const *const rocblas_bfloat16,
        lda: i64,
        x: *const *const rocblas_bfloat16,
        incx: i64,
        beta: *const f32,
        y: *const *mut f32,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sgemv_strided_batched(
        handle: rocblas_handle,
        transA: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f32,
        A: *const f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        x: *const f32,
        incx: rocblas_int,
        stridex: rocblas_stride,
        beta: *const f32,
        y: *mut f32,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dgemv_strided_batched(
        handle: rocblas_handle,
        transA: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f64,
        A: *const f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        x: *const f64,
        incx: rocblas_int,
        stridex: rocblas_stride,
        beta: *const f64,
        y: *mut f64,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgemv_strided_batched(
        handle: rocblas_handle,
        transA: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        stridex: rocblas_stride,
        beta: *const rocblas_float_complex,
        y: *mut rocblas_float_complex,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgemv_strided_batched(
        handle: rocblas_handle,
        transA: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        stridex: rocblas_stride,
        beta: *const rocblas_double_complex,
        y: *mut rocblas_double_complex,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_hshgemv_strided_batched(
        handle: rocblas_handle,
        transA: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f32,
        A: *const rocblas_half,
        lda: rocblas_int,
        strideA: rocblas_stride,
        x: *const rocblas_half,
        incx: rocblas_int,
        stridex: rocblas_stride,
        beta: *const f32,
        y: *mut rocblas_half,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_hssgemv_strided_batched(
        handle: rocblas_handle,
        transA: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f32,
        A: *const rocblas_half,
        lda: rocblas_int,
        strideA: rocblas_stride,
        x: *const rocblas_half,
        incx: rocblas_int,
        stridex: rocblas_stride,
        beta: *const f32,
        y: *mut f32,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_tstgemv_strided_batched(
        handle: rocblas_handle,
        transA: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f32,
        A: *const rocblas_bfloat16,
        lda: rocblas_int,
        strideA: rocblas_stride,
        x: *const rocblas_bfloat16,
        incx: rocblas_int,
        stridex: rocblas_stride,
        beta: *const f32,
        y: *mut rocblas_bfloat16,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_tssgemv_strided_batched(
        handle: rocblas_handle,
        transA: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f32,
        A: *const rocblas_bfloat16,
        lda: rocblas_int,
        strideA: rocblas_stride,
        x: *const rocblas_bfloat16,
        incx: rocblas_int,
        stridex: rocblas_stride,
        beta: *const f32,
        y: *mut f32,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sgemv_strided_batched_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        m: i64,
        n: i64,
        alpha: *const f32,
        A: *const f32,
        lda: i64,
        strideA: rocblas_stride,
        x: *const f32,
        incx: i64,
        stridex: rocblas_stride,
        beta: *const f32,
        y: *mut f32,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dgemv_strided_batched_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        m: i64,
        n: i64,
        alpha: *const f64,
        A: *const f64,
        lda: i64,
        strideA: rocblas_stride,
        x: *const f64,
        incx: i64,
        stridex: rocblas_stride,
        beta: *const f64,
        y: *mut f64,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgemv_strided_batched_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        m: i64,
        n: i64,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: i64,
        strideA: rocblas_stride,
        x: *const rocblas_float_complex,
        incx: i64,
        stridex: rocblas_stride,
        beta: *const rocblas_float_complex,
        y: *mut rocblas_float_complex,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgemv_strided_batched_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        m: i64,
        n: i64,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: i64,
        strideA: rocblas_stride,
        x: *const rocblas_double_complex,
        incx: i64,
        stridex: rocblas_stride,
        beta: *const rocblas_double_complex,
        y: *mut rocblas_double_complex,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_hshgemv_strided_batched_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        m: i64,
        n: i64,
        alpha: *const f32,
        A: *const rocblas_half,
        lda: i64,
        strideA: rocblas_stride,
        x: *const rocblas_half,
        incx: i64,
        stridex: rocblas_stride,
        beta: *const f32,
        y: *mut rocblas_half,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_hssgemv_strided_batched_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        m: i64,
        n: i64,
        alpha: *const f32,
        A: *const rocblas_half,
        lda: i64,
        strideA: rocblas_stride,
        x: *const rocblas_half,
        incx: i64,
        stridex: rocblas_stride,
        beta: *const f32,
        y: *mut f32,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_tstgemv_strided_batched_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        m: i64,
        n: i64,
        alpha: *const f32,
        A: *const rocblas_bfloat16,
        lda: i64,
        strideA: rocblas_stride,
        x: *const rocblas_bfloat16,
        incx: i64,
        stridex: rocblas_stride,
        beta: *const f32,
        y: *mut rocblas_bfloat16,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_tssgemv_strided_batched_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        m: i64,
        n: i64,
        alpha: *const f32,
        A: *const rocblas_bfloat16,
        lda: i64,
        strideA: rocblas_stride,
        x: *const rocblas_bfloat16,
        incx: i64,
        stridex: rocblas_stride,
        beta: *const f32,
        y: *mut f32,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chbmv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        beta: *const rocblas_float_complex,
        y: *mut rocblas_float_complex,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhbmv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        beta: *const rocblas_double_complex,
        y: *mut rocblas_double_complex,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chbmv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        k: i64,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: i64,
        x: *const rocblas_float_complex,
        incx: i64,
        beta: *const rocblas_float_complex,
        y: *mut rocblas_float_complex,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhbmv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        k: i64,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: i64,
        x: *const rocblas_double_complex,
        incx: i64,
        beta: *const rocblas_double_complex,
        y: *mut rocblas_double_complex,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chbmv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const *const rocblas_float_complex,
        lda: rocblas_int,
        x: *const *const rocblas_float_complex,
        incx: rocblas_int,
        beta: *const rocblas_float_complex,
        y: *const *mut rocblas_float_complex,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhbmv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const *const rocblas_double_complex,
        lda: rocblas_int,
        x: *const *const rocblas_double_complex,
        incx: rocblas_int,
        beta: *const rocblas_double_complex,
        y: *const *mut rocblas_double_complex,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chbmv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        k: i64,
        alpha: *const rocblas_float_complex,
        A: *const *const rocblas_float_complex,
        lda: i64,
        x: *const *const rocblas_float_complex,
        incx: i64,
        beta: *const rocblas_float_complex,
        y: *const *mut rocblas_float_complex,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhbmv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        k: i64,
        alpha: *const rocblas_double_complex,
        A: *const *const rocblas_double_complex,
        lda: i64,
        x: *const *const rocblas_double_complex,
        incx: i64,
        beta: *const rocblas_double_complex,
        y: *const *mut rocblas_double_complex,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chbmv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        beta: *const rocblas_float_complex,
        y: *mut rocblas_float_complex,
        incy: rocblas_int,
        stride_y: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhbmv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        beta: *const rocblas_double_complex,
        y: *mut rocblas_double_complex,
        incy: rocblas_int,
        stride_y: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chbmv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        k: i64,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: i64,
        stride_A: rocblas_stride,
        x: *const rocblas_float_complex,
        incx: i64,
        stride_x: rocblas_stride,
        beta: *const rocblas_float_complex,
        y: *mut rocblas_float_complex,
        incy: i64,
        stride_y: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhbmv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        k: i64,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: i64,
        stride_A: rocblas_stride,
        x: *const rocblas_double_complex,
        incx: i64,
        stride_x: rocblas_stride,
        beta: *const rocblas_double_complex,
        y: *mut rocblas_double_complex,
        incy: i64,
        stride_y: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chemv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        beta: *const rocblas_float_complex,
        y: *mut rocblas_float_complex,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhemv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        beta: *const rocblas_double_complex,
        y: *mut rocblas_double_complex,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chemv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: i64,
        x: *const rocblas_float_complex,
        incx: i64,
        beta: *const rocblas_float_complex,
        y: *mut rocblas_float_complex,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhemv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: i64,
        x: *const rocblas_double_complex,
        incx: i64,
        beta: *const rocblas_double_complex,
        y: *mut rocblas_double_complex,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chemv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const *const rocblas_float_complex,
        lda: rocblas_int,
        x: *const *const rocblas_float_complex,
        incx: rocblas_int,
        beta: *const rocblas_float_complex,
        y: *const *mut rocblas_float_complex,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhemv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const *const rocblas_double_complex,
        lda: rocblas_int,
        x: *const *const rocblas_double_complex,
        incx: rocblas_int,
        beta: *const rocblas_double_complex,
        y: *const *mut rocblas_double_complex,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chemv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_float_complex,
        A: *const *const rocblas_float_complex,
        lda: i64,
        x: *const *const rocblas_float_complex,
        incx: i64,
        beta: *const rocblas_float_complex,
        y: *const *mut rocblas_float_complex,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhemv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_double_complex,
        A: *const *const rocblas_double_complex,
        lda: i64,
        x: *const *const rocblas_double_complex,
        incx: i64,
        beta: *const rocblas_double_complex,
        y: *const *mut rocblas_double_complex,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chemv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        beta: *const rocblas_float_complex,
        y: *mut rocblas_float_complex,
        incy: rocblas_int,
        stride_y: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhemv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        beta: *const rocblas_double_complex,
        y: *mut rocblas_double_complex,
        incy: rocblas_int,
        stride_y: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chemv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: i64,
        stride_A: rocblas_stride,
        x: *const rocblas_float_complex,
        incx: i64,
        stride_x: rocblas_stride,
        beta: *const rocblas_float_complex,
        y: *mut rocblas_float_complex,
        incy: i64,
        stride_y: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhemv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: i64,
        stride_A: rocblas_stride,
        x: *const rocblas_double_complex,
        incx: i64,
        stride_x: rocblas_stride,
        beta: *const rocblas_double_complex,
        y: *mut rocblas_double_complex,
        incy: i64,
        stride_y: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cher(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f32,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zher(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f64,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cher_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f32,
        x: *const rocblas_float_complex,
        incx: i64,
        A: *mut rocblas_float_complex,
        lda: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zher_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f64,
        x: *const rocblas_double_complex,
        incx: i64,
        A: *mut rocblas_double_complex,
        lda: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cher_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f32,
        x: *const *const rocblas_float_complex,
        incx: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zher_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f64,
        x: *const *const rocblas_double_complex,
        incx: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cher_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f32,
        x: *const *const rocblas_float_complex,
        incx: i64,
        A: *const *mut rocblas_float_complex,
        lda: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zher_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f64,
        x: *const *const rocblas_double_complex,
        incx: i64,
        A: *const *mut rocblas_double_complex,
        lda: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cher_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f32,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zher_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f64,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cher_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f32,
        x: *const rocblas_float_complex,
        incx: i64,
        stride_x: rocblas_stride,
        A: *mut rocblas_float_complex,
        lda: i64,
        stride_A: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zher_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f64,
        x: *const rocblas_double_complex,
        incx: i64,
        stride_x: rocblas_stride,
        A: *mut rocblas_double_complex,
        lda: i64,
        stride_A: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cher2(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        y: *const rocblas_float_complex,
        incy: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zher2(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        y: *const rocblas_double_complex,
        incy: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cher2_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_float_complex,
        x: *const rocblas_float_complex,
        incx: i64,
        y: *const rocblas_float_complex,
        incy: i64,
        A: *mut rocblas_float_complex,
        lda: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zher2_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_double_complex,
        x: *const rocblas_double_complex,
        incx: i64,
        y: *const rocblas_double_complex,
        incy: i64,
        A: *mut rocblas_double_complex,
        lda: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cher2_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        x: *const *const rocblas_float_complex,
        incx: rocblas_int,
        y: *const *const rocblas_float_complex,
        incy: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zher2_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        x: *const *const rocblas_double_complex,
        incx: rocblas_int,
        y: *const *const rocblas_double_complex,
        incy: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cher2_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_float_complex,
        x: *const *const rocblas_float_complex,
        incx: i64,
        y: *const *const rocblas_float_complex,
        incy: i64,
        A: *const *mut rocblas_float_complex,
        lda: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zher2_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_double_complex,
        x: *const *const rocblas_double_complex,
        incx: i64,
        y: *const *const rocblas_double_complex,
        incy: i64,
        A: *const *mut rocblas_double_complex,
        lda: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cher2_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        y: *const rocblas_float_complex,
        incy: rocblas_int,
        stride_y: rocblas_stride,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zher2_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        y: *const rocblas_double_complex,
        incy: rocblas_int,
        stride_y: rocblas_stride,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cher2_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_float_complex,
        x: *const rocblas_float_complex,
        incx: i64,
        stride_x: rocblas_stride,
        y: *const rocblas_float_complex,
        incy: i64,
        stride_y: rocblas_stride,
        A: *mut rocblas_float_complex,
        lda: i64,
        stride_A: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zher2_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_double_complex,
        x: *const rocblas_double_complex,
        incx: i64,
        stride_x: rocblas_stride,
        y: *const rocblas_double_complex,
        incy: i64,
        stride_y: rocblas_stride,
        A: *mut rocblas_double_complex,
        lda: i64,
        stride_A: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chpmv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        AP: *const rocblas_float_complex,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        beta: *const rocblas_float_complex,
        y: *mut rocblas_float_complex,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhpmv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        AP: *const rocblas_double_complex,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        beta: *const rocblas_double_complex,
        y: *mut rocblas_double_complex,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chpmv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_float_complex,
        AP: *const rocblas_float_complex,
        x: *const rocblas_float_complex,
        incx: i64,
        beta: *const rocblas_float_complex,
        y: *mut rocblas_float_complex,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhpmv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_double_complex,
        AP: *const rocblas_double_complex,
        x: *const rocblas_double_complex,
        incx: i64,
        beta: *const rocblas_double_complex,
        y: *mut rocblas_double_complex,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chpmv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        AP: *const *const rocblas_float_complex,
        x: *const *const rocblas_float_complex,
        incx: rocblas_int,
        beta: *const rocblas_float_complex,
        y: *const *mut rocblas_float_complex,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhpmv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        AP: *const *const rocblas_double_complex,
        x: *const *const rocblas_double_complex,
        incx: rocblas_int,
        beta: *const rocblas_double_complex,
        y: *const *mut rocblas_double_complex,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chpmv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_float_complex,
        AP: *const *const rocblas_float_complex,
        x: *const *const rocblas_float_complex,
        incx: i64,
        beta: *const rocblas_float_complex,
        y: *const *mut rocblas_float_complex,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhpmv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_double_complex,
        AP: *const *const rocblas_double_complex,
        x: *const *const rocblas_double_complex,
        incx: i64,
        beta: *const rocblas_double_complex,
        y: *const *mut rocblas_double_complex,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chpmv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        AP: *const rocblas_float_complex,
        stride_A: rocblas_stride,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        beta: *const rocblas_float_complex,
        y: *mut rocblas_float_complex,
        incy: rocblas_int,
        stride_y: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhpmv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        AP: *const rocblas_double_complex,
        stride_A: rocblas_stride,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        beta: *const rocblas_double_complex,
        y: *mut rocblas_double_complex,
        incy: rocblas_int,
        stride_y: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chpmv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_float_complex,
        AP: *const rocblas_float_complex,
        stride_A: rocblas_stride,
        x: *const rocblas_float_complex,
        incx: i64,
        stride_x: rocblas_stride,
        beta: *const rocblas_float_complex,
        y: *mut rocblas_float_complex,
        incy: i64,
        stride_y: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhpmv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_double_complex,
        AP: *const rocblas_double_complex,
        stride_A: rocblas_stride,
        x: *const rocblas_double_complex,
        incx: i64,
        stride_x: rocblas_stride,
        beta: *const rocblas_double_complex,
        y: *mut rocblas_double_complex,
        incy: i64,
        stride_y: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chpr(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f32,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        AP: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhpr(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f64,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        AP: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chpr_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f32,
        x: *const rocblas_float_complex,
        incx: i64,
        AP: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhpr_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f64,
        x: *const rocblas_double_complex,
        incx: i64,
        AP: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chpr_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f32,
        x: *const *const rocblas_float_complex,
        incx: rocblas_int,
        AP: *const *mut rocblas_float_complex,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhpr_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f64,
        x: *const *const rocblas_double_complex,
        incx: rocblas_int,
        AP: *const *mut rocblas_double_complex,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chpr_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f32,
        x: *const *const rocblas_float_complex,
        incx: i64,
        AP: *const *mut rocblas_float_complex,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhpr_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f64,
        x: *const *const rocblas_double_complex,
        incx: i64,
        AP: *const *mut rocblas_double_complex,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chpr_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f32,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        AP: *mut rocblas_float_complex,
        stride_A: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhpr_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f64,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        AP: *mut rocblas_double_complex,
        stride_A: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chpr_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f32,
        x: *const rocblas_float_complex,
        incx: i64,
        stride_x: rocblas_stride,
        AP: *mut rocblas_float_complex,
        stride_A: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhpr_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f64,
        x: *const rocblas_double_complex,
        incx: i64,
        stride_x: rocblas_stride,
        AP: *mut rocblas_double_complex,
        stride_A: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chpr2(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        y: *const rocblas_float_complex,
        incy: rocblas_int,
        AP: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhpr2(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        y: *const rocblas_double_complex,
        incy: rocblas_int,
        AP: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chpr2_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_float_complex,
        x: *const rocblas_float_complex,
        incx: i64,
        y: *const rocblas_float_complex,
        incy: i64,
        AP: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhpr2_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_double_complex,
        x: *const rocblas_double_complex,
        incx: i64,
        y: *const rocblas_double_complex,
        incy: i64,
        AP: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chpr2_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        x: *const *const rocblas_float_complex,
        incx: rocblas_int,
        y: *const *const rocblas_float_complex,
        incy: rocblas_int,
        AP: *const *mut rocblas_float_complex,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhpr2_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        x: *const *const rocblas_double_complex,
        incx: rocblas_int,
        y: *const *const rocblas_double_complex,
        incy: rocblas_int,
        AP: *const *mut rocblas_double_complex,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chpr2_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_float_complex,
        x: *const *const rocblas_float_complex,
        incx: i64,
        y: *const *const rocblas_float_complex,
        incy: i64,
        AP: *const *mut rocblas_float_complex,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhpr2_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_double_complex,
        x: *const *const rocblas_double_complex,
        incx: i64,
        y: *const *const rocblas_double_complex,
        incy: i64,
        AP: *const *mut rocblas_double_complex,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chpr2_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        y: *const rocblas_float_complex,
        incy: rocblas_int,
        stride_y: rocblas_stride,
        AP: *mut rocblas_float_complex,
        stride_A: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhpr2_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        y: *const rocblas_double_complex,
        incy: rocblas_int,
        stride_y: rocblas_stride,
        AP: *mut rocblas_double_complex,
        stride_A: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chpr2_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_float_complex,
        x: *const rocblas_float_complex,
        incx: i64,
        stride_x: rocblas_stride,
        y: *const rocblas_float_complex,
        incy: i64,
        stride_y: rocblas_stride,
        AP: *mut rocblas_float_complex,
        stride_A: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhpr2_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_double_complex,
        x: *const rocblas_double_complex,
        incx: i64,
        stride_x: rocblas_stride,
        y: *const rocblas_double_complex,
        incy: i64,
        stride_y: rocblas_stride,
        AP: *mut rocblas_double_complex,
        stride_A: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_strmv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const f32,
        lda: rocblas_int,
        x: *mut f32,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtrmv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const f64,
        lda: rocblas_int,
        x: *mut f64,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctrmv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        x: *mut rocblas_float_complex,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztrmv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        x: *mut rocblas_double_complex,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_strmv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const f32,
        lda: i64,
        x: *mut f32,
        incx: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtrmv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const f64,
        lda: i64,
        x: *mut f64,
        incx: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctrmv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const rocblas_float_complex,
        lda: i64,
        x: *mut rocblas_float_complex,
        incx: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztrmv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const rocblas_double_complex,
        lda: i64,
        x: *mut rocblas_double_complex,
        incx: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_strmv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const *const f32,
        lda: rocblas_int,
        x: *const *mut f32,
        incx: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtrmv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const *const f64,
        lda: rocblas_int,
        x: *const *mut f64,
        incx: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctrmv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const *const rocblas_float_complex,
        lda: rocblas_int,
        x: *const *mut rocblas_float_complex,
        incx: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztrmv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const *const rocblas_double_complex,
        lda: rocblas_int,
        x: *const *mut rocblas_double_complex,
        incx: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_strmv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const *const f32,
        lda: i64,
        x: *const *mut f32,
        incx: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtrmv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const *const f64,
        lda: i64,
        x: *const *mut f64,
        incx: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctrmv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const *const rocblas_float_complex,
        lda: i64,
        x: *const *mut rocblas_float_complex,
        incx: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztrmv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const *const rocblas_double_complex,
        lda: i64,
        x: *const *mut rocblas_double_complex,
        incx: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_strmv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const f32,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        x: *mut f32,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtrmv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const f64,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        x: *mut f64,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctrmv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        x: *mut rocblas_float_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztrmv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        x: *mut rocblas_double_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_strmv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const f32,
        lda: i64,
        stride_A: rocblas_stride,
        x: *mut f32,
        incx: i64,
        stride_x: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtrmv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const f64,
        lda: i64,
        stride_A: rocblas_stride,
        x: *mut f64,
        incx: i64,
        stride_x: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctrmv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const rocblas_float_complex,
        lda: i64,
        stride_A: rocblas_stride,
        x: *mut rocblas_float_complex,
        incx: i64,
        stride_x: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztrmv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const rocblas_double_complex,
        lda: i64,
        stride_A: rocblas_stride,
        x: *mut rocblas_double_complex,
        incx: i64,
        stride_x: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_stpmv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const f32,
        x: *mut f32,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtpmv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const f64,
        x: *mut f64,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctpmv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const rocblas_float_complex,
        x: *mut rocblas_float_complex,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztpmv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const rocblas_double_complex,
        x: *mut rocblas_double_complex,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_stpmv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const f32,
        x: *mut f32,
        incx: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtpmv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const f64,
        x: *mut f64,
        incx: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctpmv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const rocblas_float_complex,
        x: *mut rocblas_float_complex,
        incx: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztpmv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const rocblas_double_complex,
        x: *mut rocblas_double_complex,
        incx: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_stpmv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const *const f32,
        x: *const *mut f32,
        incx: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtpmv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const *const f64,
        x: *const *mut f64,
        incx: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctpmv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const *const rocblas_float_complex,
        x: *const *mut rocblas_float_complex,
        incx: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztpmv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const *const rocblas_double_complex,
        x: *const *mut rocblas_double_complex,
        incx: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_stpmv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const *const f32,
        x: *const *mut f32,
        incx: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtpmv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const *const f64,
        x: *const *mut f64,
        incx: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctpmv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const *const rocblas_float_complex,
        x: *const *mut rocblas_float_complex,
        incx: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztpmv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const *const rocblas_double_complex,
        x: *const *mut rocblas_double_complex,
        incx: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_stpmv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const f32,
        stride_A: rocblas_stride,
        x: *mut f32,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtpmv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const f64,
        stride_A: rocblas_stride,
        x: *mut f64,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctpmv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const rocblas_float_complex,
        stride_A: rocblas_stride,
        x: *mut rocblas_float_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztpmv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const rocblas_double_complex,
        stride_A: rocblas_stride,
        x: *mut rocblas_double_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_stpmv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const f32,
        stride_A: rocblas_stride,
        x: *mut f32,
        incx: i64,
        stride_x: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtpmv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const f64,
        stride_A: rocblas_stride,
        x: *mut f64,
        incx: i64,
        stride_x: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctpmv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const rocblas_float_complex,
        stride_A: rocblas_stride,
        x: *mut rocblas_float_complex,
        incx: i64,
        stride_x: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztpmv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const rocblas_double_complex,
        stride_A: rocblas_stride,
        x: *mut rocblas_double_complex,
        incx: i64,
        stride_x: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_stbmv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        k: rocblas_int,
        A: *const f32,
        lda: rocblas_int,
        x: *mut f32,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtbmv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        k: rocblas_int,
        A: *const f64,
        lda: rocblas_int,
        x: *mut f64,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctbmv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        k: rocblas_int,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        x: *mut rocblas_float_complex,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztbmv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        k: rocblas_int,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        x: *mut rocblas_double_complex,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_stbmv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        k: i64,
        A: *const f32,
        lda: i64,
        x: *mut f32,
        incx: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtbmv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        k: i64,
        A: *const f64,
        lda: i64,
        x: *mut f64,
        incx: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctbmv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        k: i64,
        A: *const rocblas_float_complex,
        lda: i64,
        x: *mut rocblas_float_complex,
        incx: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztbmv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        k: i64,
        A: *const rocblas_double_complex,
        lda: i64,
        x: *mut rocblas_double_complex,
        incx: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_stbmv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        k: rocblas_int,
        A: *const *const f32,
        lda: rocblas_int,
        x: *const *mut f32,
        incx: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtbmv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        k: rocblas_int,
        A: *const *const f64,
        lda: rocblas_int,
        x: *const *mut f64,
        incx: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctbmv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        k: rocblas_int,
        A: *const *const rocblas_float_complex,
        lda: rocblas_int,
        x: *const *mut rocblas_float_complex,
        incx: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztbmv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        k: rocblas_int,
        A: *const *const rocblas_double_complex,
        lda: rocblas_int,
        x: *const *mut rocblas_double_complex,
        incx: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_stbmv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        k: i64,
        A: *const *const f32,
        lda: i64,
        x: *const *mut f32,
        incx: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtbmv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        k: i64,
        A: *const *const f64,
        lda: i64,
        x: *const *mut f64,
        incx: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctbmv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        k: i64,
        A: *const *const rocblas_float_complex,
        lda: i64,
        x: *const *mut rocblas_float_complex,
        incx: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztbmv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        k: i64,
        A: *const *const rocblas_double_complex,
        lda: i64,
        x: *const *mut rocblas_double_complex,
        incx: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_stbmv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        k: rocblas_int,
        A: *const f32,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        x: *mut f32,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtbmv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        k: rocblas_int,
        A: *const f64,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        x: *mut f64,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctbmv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        k: rocblas_int,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        x: *mut rocblas_float_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztbmv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        k: rocblas_int,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        x: *mut rocblas_double_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_stbmv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        k: i64,
        A: *const f32,
        lda: i64,
        stride_A: rocblas_stride,
        x: *mut f32,
        incx: i64,
        stride_x: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtbmv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        k: i64,
        A: *const f64,
        lda: i64,
        stride_A: rocblas_stride,
        x: *mut f64,
        incx: i64,
        stride_x: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctbmv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        k: i64,
        A: *const rocblas_float_complex,
        lda: i64,
        stride_A: rocblas_stride,
        x: *mut rocblas_float_complex,
        incx: i64,
        stride_x: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztbmv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        k: i64,
        A: *const rocblas_double_complex,
        lda: i64,
        stride_A: rocblas_stride,
        x: *mut rocblas_double_complex,
        incx: i64,
        stride_x: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_stbsv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        k: rocblas_int,
        A: *const f32,
        lda: rocblas_int,
        x: *mut f32,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtbsv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        k: rocblas_int,
        A: *const f64,
        lda: rocblas_int,
        x: *mut f64,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctbsv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        k: rocblas_int,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        x: *mut rocblas_float_complex,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztbsv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        k: rocblas_int,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        x: *mut rocblas_double_complex,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_stbsv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        k: i64,
        A: *const f32,
        lda: i64,
        x: *mut f32,
        incx: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtbsv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        k: i64,
        A: *const f64,
        lda: i64,
        x: *mut f64,
        incx: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctbsv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        k: i64,
        A: *const rocblas_float_complex,
        lda: i64,
        x: *mut rocblas_float_complex,
        incx: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztbsv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        k: i64,
        A: *const rocblas_double_complex,
        lda: i64,
        x: *mut rocblas_double_complex,
        incx: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_stbsv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        k: rocblas_int,
        A: *const *const f32,
        lda: rocblas_int,
        x: *const *mut f32,
        incx: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtbsv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        k: rocblas_int,
        A: *const *const f64,
        lda: rocblas_int,
        x: *const *mut f64,
        incx: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctbsv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        k: rocblas_int,
        A: *const *const rocblas_float_complex,
        lda: rocblas_int,
        x: *const *mut rocblas_float_complex,
        incx: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztbsv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        k: rocblas_int,
        A: *const *const rocblas_double_complex,
        lda: rocblas_int,
        x: *const *mut rocblas_double_complex,
        incx: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_stbsv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        k: i64,
        A: *const *const f32,
        lda: i64,
        x: *const *mut f32,
        incx: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtbsv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        k: i64,
        A: *const *const f64,
        lda: i64,
        x: *const *mut f64,
        incx: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctbsv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        k: i64,
        A: *const *const rocblas_float_complex,
        lda: i64,
        x: *const *mut rocblas_float_complex,
        incx: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztbsv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        k: i64,
        A: *const *const rocblas_double_complex,
        lda: i64,
        x: *const *mut rocblas_double_complex,
        incx: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_stbsv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        k: rocblas_int,
        A: *const f32,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        x: *mut f32,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtbsv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        k: rocblas_int,
        A: *const f64,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        x: *mut f64,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctbsv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        k: rocblas_int,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        x: *mut rocblas_float_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztbsv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        k: rocblas_int,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        x: *mut rocblas_double_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_stbsv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        k: i64,
        A: *const f32,
        lda: i64,
        stride_A: rocblas_stride,
        x: *mut f32,
        incx: i64,
        stride_x: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtbsv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        k: i64,
        A: *const f64,
        lda: i64,
        stride_A: rocblas_stride,
        x: *mut f64,
        incx: i64,
        stride_x: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctbsv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        k: i64,
        A: *const rocblas_float_complex,
        lda: i64,
        stride_A: rocblas_stride,
        x: *mut rocblas_float_complex,
        incx: i64,
        stride_x: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztbsv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        k: i64,
        A: *const rocblas_double_complex,
        lda: i64,
        stride_A: rocblas_stride,
        x: *mut rocblas_double_complex,
        incx: i64,
        stride_x: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_strsv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const f32,
        lda: rocblas_int,
        x: *mut f32,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtrsv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const f64,
        lda: rocblas_int,
        x: *mut f64,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctrsv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        x: *mut rocblas_float_complex,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztrsv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        x: *mut rocblas_double_complex,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_strsv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const f32,
        lda: i64,
        x: *mut f32,
        incx: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtrsv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const f64,
        lda: i64,
        x: *mut f64,
        incx: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctrsv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const rocblas_float_complex,
        lda: i64,
        x: *mut rocblas_float_complex,
        incx: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztrsv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const rocblas_double_complex,
        lda: i64,
        x: *mut rocblas_double_complex,
        incx: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_strsv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const *const f32,
        lda: rocblas_int,
        x: *const *mut f32,
        incx: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtrsv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const *const f64,
        lda: rocblas_int,
        x: *const *mut f64,
        incx: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctrsv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const *const rocblas_float_complex,
        lda: rocblas_int,
        x: *const *mut rocblas_float_complex,
        incx: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztrsv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const *const rocblas_double_complex,
        lda: rocblas_int,
        x: *const *mut rocblas_double_complex,
        incx: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_strsv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const *const f32,
        lda: i64,
        x: *const *mut f32,
        incx: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtrsv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const *const f64,
        lda: i64,
        x: *const *mut f64,
        incx: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctrsv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const *const rocblas_float_complex,
        lda: i64,
        x: *const *mut rocblas_float_complex,
        incx: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztrsv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const *const rocblas_double_complex,
        lda: i64,
        x: *const *mut rocblas_double_complex,
        incx: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_strsv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const f32,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        x: *mut f32,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtrsv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const f64,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        x: *mut f64,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctrsv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        x: *mut rocblas_float_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztrsv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        x: *mut rocblas_double_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_strsv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const f32,
        lda: i64,
        stride_A: rocblas_stride,
        x: *mut f32,
        incx: i64,
        stride_x: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtrsv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const f64,
        lda: i64,
        stride_A: rocblas_stride,
        x: *mut f64,
        incx: i64,
        stride_x: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctrsv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const rocblas_float_complex,
        lda: i64,
        stride_A: rocblas_stride,
        x: *mut rocblas_float_complex,
        incx: i64,
        stride_x: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztrsv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        A: *const rocblas_double_complex,
        lda: i64,
        stride_A: rocblas_stride,
        x: *mut rocblas_double_complex,
        incx: i64,
        stride_x: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_stpsv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        AP: *const f32,
        x: *mut f32,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtpsv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        AP: *const f64,
        x: *mut f64,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctpsv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        AP: *const rocblas_float_complex,
        x: *mut rocblas_float_complex,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztpsv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        AP: *const rocblas_double_complex,
        x: *mut rocblas_double_complex,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_stpsv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        AP: *const f32,
        x: *mut f32,
        incx: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtpsv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        AP: *const f64,
        x: *mut f64,
        incx: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctpsv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        AP: *const rocblas_float_complex,
        x: *mut rocblas_float_complex,
        incx: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztpsv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        AP: *const rocblas_double_complex,
        x: *mut rocblas_double_complex,
        incx: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_stpsv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        AP: *const *const f32,
        x: *const *mut f32,
        incx: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtpsv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        AP: *const *const f64,
        x: *const *mut f64,
        incx: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctpsv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        AP: *const *const rocblas_float_complex,
        x: *const *mut rocblas_float_complex,
        incx: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztpsv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        AP: *const *const rocblas_double_complex,
        x: *const *mut rocblas_double_complex,
        incx: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_stpsv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        AP: *const *const f32,
        x: *const *mut f32,
        incx: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtpsv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        AP: *const *const f64,
        x: *const *mut f64,
        incx: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctpsv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        AP: *const *const rocblas_float_complex,
        x: *const *mut rocblas_float_complex,
        incx: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztpsv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        AP: *const *const rocblas_double_complex,
        x: *const *mut rocblas_double_complex,
        incx: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_stpsv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        AP: *const f32,
        stride_A: rocblas_stride,
        x: *mut f32,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtpsv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        AP: *const f64,
        stride_A: rocblas_stride,
        x: *mut f64,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctpsv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        AP: *const rocblas_float_complex,
        stride_A: rocblas_stride,
        x: *mut rocblas_float_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztpsv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: rocblas_int,
        AP: *const rocblas_double_complex,
        stride_A: rocblas_stride,
        x: *mut rocblas_double_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_stpsv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        AP: *const f32,
        stride_A: rocblas_stride,
        x: *mut f32,
        incx: i64,
        stride_x: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtpsv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        AP: *const f64,
        stride_A: rocblas_stride,
        x: *mut f64,
        incx: i64,
        stride_x: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctpsv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        AP: *const rocblas_float_complex,
        stride_A: rocblas_stride,
        x: *mut rocblas_float_complex,
        incx: i64,
        stride_x: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztpsv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        n: i64,
        AP: *const rocblas_double_complex,
        stride_A: rocblas_stride,
        x: *mut rocblas_double_complex,
        incx: i64,
        stride_x: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssymv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f32,
        A: *const f32,
        lda: rocblas_int,
        x: *const f32,
        incx: rocblas_int,
        beta: *const f32,
        y: *mut f32,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsymv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f64,
        A: *const f64,
        lda: rocblas_int,
        x: *const f64,
        incx: rocblas_int,
        beta: *const f64,
        y: *mut f64,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csymv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        beta: *const rocblas_float_complex,
        y: *mut rocblas_float_complex,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsymv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        beta: *const rocblas_double_complex,
        y: *mut rocblas_double_complex,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssymv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f32,
        A: *const f32,
        lda: i64,
        x: *const f32,
        incx: i64,
        beta: *const f32,
        y: *mut f32,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsymv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f64,
        A: *const f64,
        lda: i64,
        x: *const f64,
        incx: i64,
        beta: *const f64,
        y: *mut f64,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csymv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: i64,
        x: *const rocblas_float_complex,
        incx: i64,
        beta: *const rocblas_float_complex,
        y: *mut rocblas_float_complex,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsymv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: i64,
        x: *const rocblas_double_complex,
        incx: i64,
        beta: *const rocblas_double_complex,
        y: *mut rocblas_double_complex,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssymv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f32,
        A: *const *const f32,
        lda: rocblas_int,
        x: *const *const f32,
        incx: rocblas_int,
        beta: *const f32,
        y: *const *mut f32,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsymv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f64,
        A: *const *const f64,
        lda: rocblas_int,
        x: *const *const f64,
        incx: rocblas_int,
        beta: *const f64,
        y: *const *mut f64,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csymv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const *const rocblas_float_complex,
        lda: rocblas_int,
        x: *const *const rocblas_float_complex,
        incx: rocblas_int,
        beta: *const rocblas_float_complex,
        y: *const *mut rocblas_float_complex,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsymv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const *const rocblas_double_complex,
        lda: rocblas_int,
        x: *const *const rocblas_double_complex,
        incx: rocblas_int,
        beta: *const rocblas_double_complex,
        y: *const *mut rocblas_double_complex,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssymv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f32,
        A: *const *const f32,
        lda: i64,
        x: *const *const f32,
        incx: i64,
        beta: *const f32,
        y: *const *mut f32,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsymv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f64,
        A: *const *const f64,
        lda: i64,
        x: *const *const f64,
        incx: i64,
        beta: *const f64,
        y: *const *mut f64,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csymv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_float_complex,
        A: *const *const rocblas_float_complex,
        lda: i64,
        x: *const *const rocblas_float_complex,
        incx: i64,
        beta: *const rocblas_float_complex,
        y: *const *mut rocblas_float_complex,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsymv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_double_complex,
        A: *const *const rocblas_double_complex,
        lda: i64,
        x: *const *const rocblas_double_complex,
        incx: i64,
        beta: *const rocblas_double_complex,
        y: *const *mut rocblas_double_complex,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssymv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f32,
        A: *const f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        x: *const f32,
        incx: rocblas_int,
        stridex: rocblas_stride,
        beta: *const f32,
        y: *mut f32,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsymv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f64,
        A: *const f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        x: *const f64,
        incx: rocblas_int,
        stridex: rocblas_stride,
        beta: *const f64,
        y: *mut f64,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csymv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        stridex: rocblas_stride,
        beta: *const rocblas_float_complex,
        y: *mut rocblas_float_complex,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsymv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        stridex: rocblas_stride,
        beta: *const rocblas_double_complex,
        y: *mut rocblas_double_complex,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssymv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f32,
        A: *const f32,
        lda: i64,
        strideA: rocblas_stride,
        x: *const f32,
        incx: i64,
        stridex: rocblas_stride,
        beta: *const f32,
        y: *mut f32,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsymv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f64,
        A: *const f64,
        lda: i64,
        strideA: rocblas_stride,
        x: *const f64,
        incx: i64,
        stridex: rocblas_stride,
        beta: *const f64,
        y: *mut f64,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csymv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: i64,
        strideA: rocblas_stride,
        x: *const rocblas_float_complex,
        incx: i64,
        stridex: rocblas_stride,
        beta: *const rocblas_float_complex,
        y: *mut rocblas_float_complex,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsymv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: i64,
        strideA: rocblas_stride,
        x: *const rocblas_double_complex,
        incx: i64,
        stridex: rocblas_stride,
        beta: *const rocblas_double_complex,
        y: *mut rocblas_double_complex,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sspmv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f32,
        A: *const f32,
        x: *const f32,
        incx: rocblas_int,
        beta: *const f32,
        y: *mut f32,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dspmv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f64,
        A: *const f64,
        x: *const f64,
        incx: rocblas_int,
        beta: *const f64,
        y: *mut f64,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sspmv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f32,
        A: *const f32,
        x: *const f32,
        incx: i64,
        beta: *const f32,
        y: *mut f32,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dspmv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f64,
        A: *const f64,
        x: *const f64,
        incx: i64,
        beta: *const f64,
        y: *mut f64,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sspmv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f32,
        A: *const *const f32,
        x: *const *const f32,
        incx: rocblas_int,
        beta: *const f32,
        y: *const *mut f32,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dspmv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f64,
        A: *const *const f64,
        x: *const *const f64,
        incx: rocblas_int,
        beta: *const f64,
        y: *const *mut f64,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sspmv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f32,
        A: *const *const f32,
        x: *const *const f32,
        incx: i64,
        beta: *const f32,
        y: *const *mut f32,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dspmv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f64,
        A: *const *const f64,
        x: *const *const f64,
        incx: i64,
        beta: *const f64,
        y: *const *mut f64,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sspmv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f32,
        A: *const f32,
        strideA: rocblas_stride,
        x: *const f32,
        incx: rocblas_int,
        stridex: rocblas_stride,
        beta: *const f32,
        y: *mut f32,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dspmv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f64,
        A: *const f64,
        strideA: rocblas_stride,
        x: *const f64,
        incx: rocblas_int,
        stridex: rocblas_stride,
        beta: *const f64,
        y: *mut f64,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sspmv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f32,
        A: *const f32,
        strideA: rocblas_stride,
        x: *const f32,
        incx: i64,
        stridex: rocblas_stride,
        beta: *const f32,
        y: *mut f32,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dspmv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f64,
        A: *const f64,
        strideA: rocblas_stride,
        x: *const f64,
        incx: i64,
        stridex: rocblas_stride,
        beta: *const f64,
        y: *mut f64,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssbmv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f32,
        A: *const f32,
        lda: rocblas_int,
        x: *const f32,
        incx: rocblas_int,
        beta: *const f32,
        y: *mut f32,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsbmv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f64,
        A: *const f64,
        lda: rocblas_int,
        x: *const f64,
        incx: rocblas_int,
        beta: *const f64,
        y: *mut f64,
        incy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssbmv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        k: i64,
        alpha: *const f32,
        A: *const f32,
        lda: i64,
        x: *const f32,
        incx: i64,
        beta: *const f32,
        y: *mut f32,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsbmv_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        k: i64,
        alpha: *const f64,
        A: *const f64,
        lda: i64,
        x: *const f64,
        incx: i64,
        beta: *const f64,
        y: *mut f64,
        incy: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssbmv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f32,
        A: *const *const f32,
        lda: rocblas_int,
        x: *const *const f32,
        incx: rocblas_int,
        beta: *const f32,
        y: *const *mut f32,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsbmv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f64,
        A: *const *const f64,
        lda: rocblas_int,
        x: *const *const f64,
        incx: rocblas_int,
        beta: *const f64,
        y: *const *mut f64,
        incy: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssbmv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        k: i64,
        alpha: *const f32,
        A: *const *const f32,
        lda: i64,
        x: *const *const f32,
        incx: i64,
        beta: *const f32,
        y: *const *mut f32,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsbmv_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        k: i64,
        alpha: *const f64,
        A: *const *const f64,
        lda: i64,
        x: *const *const f64,
        incx: i64,
        beta: *const f64,
        y: *const *mut f64,
        incy: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssbmv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f32,
        A: *const f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        x: *const f32,
        incx: rocblas_int,
        stridex: rocblas_stride,
        beta: *const f32,
        y: *mut f32,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsbmv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f64,
        A: *const f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        x: *const f64,
        incx: rocblas_int,
        stridex: rocblas_stride,
        beta: *const f64,
        y: *mut f64,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssbmv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        k: i64,
        alpha: *const f32,
        A: *const f32,
        lda: i64,
        strideA: rocblas_stride,
        x: *const f32,
        incx: i64,
        stridex: rocblas_stride,
        beta: *const f32,
        y: *mut f32,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsbmv_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        k: i64,
        alpha: *const f64,
        A: *const f64,
        lda: i64,
        strideA: rocblas_stride,
        x: *const f64,
        incx: i64,
        stridex: rocblas_stride,
        beta: *const f64,
        y: *mut f64,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sger(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f32,
        x: *const f32,
        incx: rocblas_int,
        y: *const f32,
        incy: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dger(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f64,
        x: *const f64,
        incx: rocblas_int,
        y: *const f64,
        incy: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgeru(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        y: *const rocblas_float_complex,
        incy: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgeru(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        y: *const rocblas_double_complex,
        incy: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgerc(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        y: *const rocblas_float_complex,
        incy: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgerc(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        y: *const rocblas_double_complex,
        incy: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sger_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        alpha: *const f32,
        x: *const f32,
        incx: i64,
        y: *const f32,
        incy: i64,
        A: *mut f32,
        lda: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dger_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        alpha: *const f64,
        x: *const f64,
        incx: i64,
        y: *const f64,
        incy: i64,
        A: *mut f64,
        lda: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgeru_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        alpha: *const rocblas_float_complex,
        x: *const rocblas_float_complex,
        incx: i64,
        y: *const rocblas_float_complex,
        incy: i64,
        A: *mut rocblas_float_complex,
        lda: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgeru_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        alpha: *const rocblas_double_complex,
        x: *const rocblas_double_complex,
        incx: i64,
        y: *const rocblas_double_complex,
        incy: i64,
        A: *mut rocblas_double_complex,
        lda: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgerc_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        alpha: *const rocblas_float_complex,
        x: *const rocblas_float_complex,
        incx: i64,
        y: *const rocblas_float_complex,
        incy: i64,
        A: *mut rocblas_float_complex,
        lda: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgerc_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        alpha: *const rocblas_double_complex,
        x: *const rocblas_double_complex,
        incx: i64,
        y: *const rocblas_double_complex,
        incy: i64,
        A: *mut rocblas_double_complex,
        lda: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sger_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f32,
        x: *const *const f32,
        incx: rocblas_int,
        y: *const *const f32,
        incy: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dger_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f64,
        x: *const *const f64,
        incx: rocblas_int,
        y: *const *const f64,
        incy: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgeru_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        x: *const *const rocblas_float_complex,
        incx: rocblas_int,
        y: *const *const rocblas_float_complex,
        incy: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgeru_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        x: *const *const rocblas_double_complex,
        incx: rocblas_int,
        y: *const *const rocblas_double_complex,
        incy: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgerc_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        x: *const *const rocblas_float_complex,
        incx: rocblas_int,
        y: *const *const rocblas_float_complex,
        incy: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgerc_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        x: *const *const rocblas_double_complex,
        incx: rocblas_int,
        y: *const *const rocblas_double_complex,
        incy: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sger_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        alpha: *const f32,
        x: *const *const f32,
        incx: i64,
        y: *const *const f32,
        incy: i64,
        A: *const *mut f32,
        lda: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dger_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        alpha: *const f64,
        x: *const *const f64,
        incx: i64,
        y: *const *const f64,
        incy: i64,
        A: *const *mut f64,
        lda: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgeru_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        alpha: *const rocblas_float_complex,
        x: *const *const rocblas_float_complex,
        incx: i64,
        y: *const *const rocblas_float_complex,
        incy: i64,
        A: *const *mut rocblas_float_complex,
        lda: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgeru_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        alpha: *const rocblas_double_complex,
        x: *const *const rocblas_double_complex,
        incx: i64,
        y: *const *const rocblas_double_complex,
        incy: i64,
        A: *const *mut rocblas_double_complex,
        lda: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgerc_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        alpha: *const rocblas_float_complex,
        x: *const *const rocblas_float_complex,
        incx: i64,
        y: *const *const rocblas_float_complex,
        incy: i64,
        A: *const *mut rocblas_float_complex,
        lda: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgerc_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        alpha: *const rocblas_double_complex,
        x: *const *const rocblas_double_complex,
        incx: i64,
        y: *const *const rocblas_double_complex,
        incy: i64,
        A: *const *mut rocblas_double_complex,
        lda: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sger_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f32,
        x: *const f32,
        incx: rocblas_int,
        stridex: rocblas_stride,
        y: *const f32,
        incy: rocblas_int,
        stridey: rocblas_stride,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dger_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f64,
        x: *const f64,
        incx: rocblas_int,
        stridex: rocblas_stride,
        y: *const f64,
        incy: rocblas_int,
        stridey: rocblas_stride,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgeru_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        stridex: rocblas_stride,
        y: *const rocblas_float_complex,
        incy: rocblas_int,
        stridey: rocblas_stride,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgeru_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        stridex: rocblas_stride,
        y: *const rocblas_double_complex,
        incy: rocblas_int,
        stridey: rocblas_stride,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgerc_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        stridex: rocblas_stride,
        y: *const rocblas_float_complex,
        incy: rocblas_int,
        stridey: rocblas_stride,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgerc_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        stridex: rocblas_stride,
        y: *const rocblas_double_complex,
        incy: rocblas_int,
        stridey: rocblas_stride,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sger_strided_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        alpha: *const f32,
        x: *const f32,
        incx: i64,
        stridex: rocblas_stride,
        y: *const f32,
        incy: i64,
        stridey: rocblas_stride,
        A: *mut f32,
        lda: i64,
        strideA: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dger_strided_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        alpha: *const f64,
        x: *const f64,
        incx: i64,
        stridex: rocblas_stride,
        y: *const f64,
        incy: i64,
        stridey: rocblas_stride,
        A: *mut f64,
        lda: i64,
        strideA: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgeru_strided_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        alpha: *const rocblas_float_complex,
        x: *const rocblas_float_complex,
        incx: i64,
        stridex: rocblas_stride,
        y: *const rocblas_float_complex,
        incy: i64,
        stridey: rocblas_stride,
        A: *mut rocblas_float_complex,
        lda: i64,
        strideA: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgeru_strided_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        alpha: *const rocblas_double_complex,
        x: *const rocblas_double_complex,
        incx: i64,
        stridex: rocblas_stride,
        y: *const rocblas_double_complex,
        incy: i64,
        stridey: rocblas_stride,
        A: *mut rocblas_double_complex,
        lda: i64,
        strideA: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgerc_strided_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        alpha: *const rocblas_float_complex,
        x: *const rocblas_float_complex,
        incx: i64,
        stridex: rocblas_stride,
        y: *const rocblas_float_complex,
        incy: i64,
        stridey: rocblas_stride,
        A: *mut rocblas_float_complex,
        lda: i64,
        strideA: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgerc_strided_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        alpha: *const rocblas_double_complex,
        x: *const rocblas_double_complex,
        incx: i64,
        stridex: rocblas_stride,
        y: *const rocblas_double_complex,
        incy: i64,
        stridey: rocblas_stride,
        A: *mut rocblas_double_complex,
        lda: i64,
        strideA: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sspr(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f32,
        x: *const f32,
        incx: rocblas_int,
        AP: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dspr(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f64,
        x: *const f64,
        incx: rocblas_int,
        AP: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cspr(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        AP: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zspr(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        AP: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sspr_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f32,
        x: *const f32,
        incx: i64,
        AP: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dspr_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f64,
        x: *const f64,
        incx: i64,
        AP: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cspr_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_float_complex,
        x: *const rocblas_float_complex,
        incx: i64,
        AP: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zspr_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_double_complex,
        x: *const rocblas_double_complex,
        incx: i64,
        AP: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sspr_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f32,
        x: *const *const f32,
        incx: rocblas_int,
        AP: *const *mut f32,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dspr_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f64,
        x: *const *const f64,
        incx: rocblas_int,
        AP: *const *mut f64,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cspr_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        x: *const *const rocblas_float_complex,
        incx: rocblas_int,
        AP: *const *mut rocblas_float_complex,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zspr_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        x: *const *const rocblas_double_complex,
        incx: rocblas_int,
        AP: *const *mut rocblas_double_complex,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sspr_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f32,
        x: *const *const f32,
        incx: i64,
        AP: *const *mut f32,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dspr_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f64,
        x: *const *const f64,
        incx: i64,
        AP: *const *mut f64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cspr_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_float_complex,
        x: *const *const rocblas_float_complex,
        incx: i64,
        AP: *const *mut rocblas_float_complex,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zspr_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_double_complex,
        x: *const *const rocblas_double_complex,
        incx: i64,
        AP: *const *mut rocblas_double_complex,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sspr_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f32,
        x: *const f32,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        AP: *mut f32,
        stride_A: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dspr_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f64,
        x: *const f64,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        AP: *mut f64,
        stride_A: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cspr_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        AP: *mut rocblas_float_complex,
        stride_A: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zspr_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        AP: *mut rocblas_double_complex,
        stride_A: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sspr_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f32,
        x: *const f32,
        incx: i64,
        stride_x: rocblas_stride,
        AP: *mut f32,
        stride_A: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dspr_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f64,
        x: *const f64,
        incx: i64,
        stride_x: rocblas_stride,
        AP: *mut f64,
        stride_A: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cspr_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_float_complex,
        x: *const rocblas_float_complex,
        incx: i64,
        stride_x: rocblas_stride,
        AP: *mut rocblas_float_complex,
        stride_A: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zspr_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_double_complex,
        x: *const rocblas_double_complex,
        incx: i64,
        stride_x: rocblas_stride,
        AP: *mut rocblas_double_complex,
        stride_A: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sspr2(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f32,
        x: *const f32,
        incx: rocblas_int,
        y: *const f32,
        incy: rocblas_int,
        AP: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dspr2(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f64,
        x: *const f64,
        incx: rocblas_int,
        y: *const f64,
        incy: rocblas_int,
        AP: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sspr2_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f32,
        x: *const f32,
        incx: i64,
        y: *const f32,
        incy: i64,
        AP: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dspr2_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f64,
        x: *const f64,
        incx: i64,
        y: *const f64,
        incy: i64,
        AP: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sspr2_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f32,
        x: *const *const f32,
        incx: rocblas_int,
        y: *const *const f32,
        incy: rocblas_int,
        AP: *const *mut f32,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dspr2_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f64,
        x: *const *const f64,
        incx: rocblas_int,
        y: *const *const f64,
        incy: rocblas_int,
        AP: *const *mut f64,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sspr2_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f32,
        x: *const *const f32,
        incx: i64,
        y: *const *const f32,
        incy: i64,
        AP: *const *mut f32,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dspr2_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f64,
        x: *const *const f64,
        incx: i64,
        y: *const *const f64,
        incy: i64,
        AP: *const *mut f64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sspr2_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f32,
        x: *const f32,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        y: *const f32,
        incy: rocblas_int,
        stride_y: rocblas_stride,
        AP: *mut f32,
        stride_A: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dspr2_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f64,
        x: *const f64,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        y: *const f64,
        incy: rocblas_int,
        stride_y: rocblas_stride,
        AP: *mut f64,
        stride_A: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sspr2_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f32,
        x: *const f32,
        incx: i64,
        stride_x: rocblas_stride,
        y: *const f32,
        incy: i64,
        stride_y: rocblas_stride,
        AP: *mut f32,
        stride_A: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dspr2_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f64,
        x: *const f64,
        incx: i64,
        stride_x: rocblas_stride,
        y: *const f64,
        incy: i64,
        stride_y: rocblas_stride,
        AP: *mut f64,
        stride_A: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssyr(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f32,
        x: *const f32,
        incx: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsyr(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f64,
        x: *const f64,
        incx: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csyr(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsyr(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssyr_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f32,
        x: *const f32,
        incx: i64,
        A: *mut f32,
        lda: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsyr_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f64,
        x: *const f64,
        incx: i64,
        A: *mut f64,
        lda: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csyr_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_float_complex,
        x: *const rocblas_float_complex,
        incx: i64,
        A: *mut rocblas_float_complex,
        lda: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsyr_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_double_complex,
        x: *const rocblas_double_complex,
        incx: i64,
        A: *mut rocblas_double_complex,
        lda: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssyr_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f32,
        x: *const *const f32,
        incx: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsyr_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f64,
        x: *const *const f64,
        incx: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csyr_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        x: *const *const rocblas_float_complex,
        incx: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsyr_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        x: *const *const rocblas_double_complex,
        incx: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssyr_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f32,
        x: *const *const f32,
        incx: i64,
        A: *const *mut f32,
        lda: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsyr_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f64,
        x: *const *const f64,
        incx: i64,
        A: *const *mut f64,
        lda: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csyr_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_float_complex,
        x: *const *const rocblas_float_complex,
        incx: i64,
        A: *const *mut rocblas_float_complex,
        lda: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsyr_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_double_complex,
        x: *const *const rocblas_double_complex,
        incx: i64,
        A: *const *mut rocblas_double_complex,
        lda: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssyr_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f32,
        x: *const f32,
        incx: rocblas_int,
        stridex: rocblas_stride,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsyr_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f64,
        x: *const f64,
        incx: rocblas_int,
        stridex: rocblas_stride,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csyr_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        stridex: rocblas_stride,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsyr_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        stridex: rocblas_stride,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssyr_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f32,
        x: *const f32,
        incx: i64,
        stridex: rocblas_stride,
        A: *mut f32,
        lda: i64,
        strideA: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsyr_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f64,
        x: *const f64,
        incx: i64,
        stridex: rocblas_stride,
        A: *mut f64,
        lda: i64,
        strideA: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csyr_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_float_complex,
        x: *const rocblas_float_complex,
        incx: i64,
        stridex: rocblas_stride,
        A: *mut rocblas_float_complex,
        lda: i64,
        strideA: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsyr_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_double_complex,
        x: *const rocblas_double_complex,
        incx: i64,
        stridex: rocblas_stride,
        A: *mut rocblas_double_complex,
        lda: i64,
        strideA: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssyr2(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f32,
        x: *const f32,
        incx: rocblas_int,
        y: *const f32,
        incy: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsyr2(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f64,
        x: *const f64,
        incx: rocblas_int,
        y: *const f64,
        incy: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csyr2(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        y: *const rocblas_float_complex,
        incy: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsyr2(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        y: *const rocblas_double_complex,
        incy: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssyr2_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f32,
        x: *const f32,
        incx: i64,
        y: *const f32,
        incy: i64,
        A: *mut f32,
        lda: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsyr2_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f64,
        x: *const f64,
        incx: i64,
        y: *const f64,
        incy: i64,
        A: *mut f64,
        lda: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csyr2_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_float_complex,
        x: *const rocblas_float_complex,
        incx: i64,
        y: *const rocblas_float_complex,
        incy: i64,
        A: *mut rocblas_float_complex,
        lda: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsyr2_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_double_complex,
        x: *const rocblas_double_complex,
        incx: i64,
        y: *const rocblas_double_complex,
        incy: i64,
        A: *mut rocblas_double_complex,
        lda: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssyr2_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f32,
        x: *const *const f32,
        incx: rocblas_int,
        y: *const *const f32,
        incy: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsyr2_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f64,
        x: *const *const f64,
        incx: rocblas_int,
        y: *const *const f64,
        incy: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csyr2_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        x: *const *const rocblas_float_complex,
        incx: rocblas_int,
        y: *const *const rocblas_float_complex,
        incy: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsyr2_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        x: *const *const rocblas_double_complex,
        incx: rocblas_int,
        y: *const *const rocblas_double_complex,
        incy: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssyr2_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f32,
        x: *const *const f32,
        incx: i64,
        y: *const *const f32,
        incy: i64,
        A: *const *mut f32,
        lda: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsyr2_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f64,
        x: *const *const f64,
        incx: i64,
        y: *const *const f64,
        incy: i64,
        A: *const *mut f64,
        lda: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csyr2_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_float_complex,
        x: *const *const rocblas_float_complex,
        incx: i64,
        y: *const *const rocblas_float_complex,
        incy: i64,
        A: *const *mut rocblas_float_complex,
        lda: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsyr2_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_double_complex,
        x: *const *const rocblas_double_complex,
        incx: i64,
        y: *const *const rocblas_double_complex,
        incy: i64,
        A: *const *mut rocblas_double_complex,
        lda: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssyr2_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f32,
        x: *const f32,
        incx: rocblas_int,
        stridex: rocblas_stride,
        y: *const f32,
        incy: rocblas_int,
        stridey: rocblas_stride,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsyr2_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const f64,
        x: *const f64,
        incx: rocblas_int,
        stridex: rocblas_stride,
        y: *const f64,
        incy: rocblas_int,
        stridey: rocblas_stride,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csyr2_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        stridex: rocblas_stride,
        y: *const rocblas_float_complex,
        incy: rocblas_int,
        stridey: rocblas_stride,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsyr2_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        stridex: rocblas_stride,
        y: *const rocblas_double_complex,
        incy: rocblas_int,
        stridey: rocblas_stride,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssyr2_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f32,
        x: *const f32,
        incx: i64,
        stridex: rocblas_stride,
        y: *const f32,
        incy: i64,
        stridey: rocblas_stride,
        A: *mut f32,
        lda: i64,
        strideA: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsyr2_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const f64,
        x: *const f64,
        incx: i64,
        stridex: rocblas_stride,
        y: *const f64,
        incy: i64,
        stridey: rocblas_stride,
        A: *mut f64,
        lda: i64,
        strideA: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csyr2_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_float_complex,
        x: *const rocblas_float_complex,
        incx: i64,
        stridex: rocblas_stride,
        y: *const rocblas_float_complex,
        incy: i64,
        stridey: rocblas_stride,
        A: *mut rocblas_float_complex,
        lda: i64,
        strideA: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsyr2_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        alpha: *const rocblas_double_complex,
        x: *const rocblas_double_complex,
        incx: i64,
        stridex: rocblas_stride,
        y: *const rocblas_double_complex,
        incy: i64,
        stridey: rocblas_stride,
        A: *mut rocblas_double_complex,
        lda: i64,
        strideA: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chemm(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        B: *const rocblas_float_complex,
        ldb: rocblas_int,
        beta: *const rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhemm(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        B: *const rocblas_double_complex,
        ldb: rocblas_int,
        beta: *const rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chemm_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: i64,
        n: i64,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: i64,
        B: *const rocblas_float_complex,
        ldb: i64,
        beta: *const rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhemm_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: i64,
        n: i64,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: i64,
        B: *const rocblas_double_complex,
        ldb: i64,
        beta: *const rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chemm_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const *const rocblas_float_complex,
        lda: rocblas_int,
        B: *const *const rocblas_float_complex,
        ldb: rocblas_int,
        beta: *const rocblas_float_complex,
        C: *const *mut rocblas_float_complex,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhemm_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const *const rocblas_double_complex,
        lda: rocblas_int,
        B: *const *const rocblas_double_complex,
        ldb: rocblas_int,
        beta: *const rocblas_double_complex,
        C: *const *mut rocblas_double_complex,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chemm_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: i64,
        n: i64,
        alpha: *const rocblas_float_complex,
        A: *const *const rocblas_float_complex,
        lda: i64,
        B: *const *const rocblas_float_complex,
        ldb: i64,
        beta: *const rocblas_float_complex,
        C: *const *mut rocblas_float_complex,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhemm_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: i64,
        n: i64,
        alpha: *const rocblas_double_complex,
        A: *const *const rocblas_double_complex,
        lda: i64,
        B: *const *const rocblas_double_complex,
        ldb: i64,
        beta: *const rocblas_double_complex,
        C: *const *mut rocblas_double_complex,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chemm_strided_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        B: *const rocblas_float_complex,
        ldb: rocblas_int,
        stride_B: rocblas_stride,
        beta: *const rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhemm_strided_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        B: *const rocblas_double_complex,
        ldb: rocblas_int,
        stride_B: rocblas_stride,
        beta: *const rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_chemm_strided_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: i64,
        n: i64,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: i64,
        stride_A: rocblas_stride,
        B: *const rocblas_float_complex,
        ldb: i64,
        stride_B: rocblas_stride,
        beta: *const rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zhemm_strided_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: i64,
        n: i64,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: i64,
        stride_A: rocblas_stride,
        B: *const rocblas_double_complex,
        ldb: i64,
        stride_B: rocblas_stride,
        beta: *const rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cherk(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f32,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        beta: *const f32,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zherk(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f64,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        beta: *const f64,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cherk_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const f32,
        A: *const rocblas_float_complex,
        lda: i64,
        beta: *const f32,
        C: *mut rocblas_float_complex,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zherk_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const f64,
        A: *const rocblas_double_complex,
        lda: i64,
        beta: *const f64,
        C: *mut rocblas_double_complex,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cherk_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f32,
        A: *const *const rocblas_float_complex,
        lda: rocblas_int,
        beta: *const f32,
        C: *const *mut rocblas_float_complex,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zherk_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f64,
        A: *const *const rocblas_double_complex,
        lda: rocblas_int,
        beta: *const f64,
        C: *const *mut rocblas_double_complex,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cherk_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const f32,
        A: *const *const rocblas_float_complex,
        lda: i64,
        beta: *const f32,
        C: *const *mut rocblas_float_complex,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zherk_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const f64,
        A: *const *const rocblas_double_complex,
        lda: i64,
        beta: *const f64,
        C: *const *mut rocblas_double_complex,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cherk_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f32,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        beta: *const f32,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zherk_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f64,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        beta: *const f64,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cherk_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const f32,
        A: *const rocblas_float_complex,
        lda: i64,
        stride_A: rocblas_stride,
        beta: *const f32,
        C: *mut rocblas_float_complex,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zherk_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const f64,
        A: *const rocblas_double_complex,
        lda: i64,
        stride_A: rocblas_stride,
        beta: *const f64,
        C: *mut rocblas_double_complex,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cher2k(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        B: *const rocblas_float_complex,
        ldb: rocblas_int,
        beta: *const f32,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zher2k(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        B: *const rocblas_double_complex,
        ldb: rocblas_int,
        beta: *const f64,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cher2k_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: i64,
        B: *const rocblas_float_complex,
        ldb: i64,
        beta: *const f32,
        C: *mut rocblas_float_complex,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zher2k_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: i64,
        B: *const rocblas_double_complex,
        ldb: i64,
        beta: *const f64,
        C: *mut rocblas_double_complex,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cher2k_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const *const rocblas_float_complex,
        lda: rocblas_int,
        B: *const *const rocblas_float_complex,
        ldb: rocblas_int,
        beta: *const f32,
        C: *const *mut rocblas_float_complex,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zher2k_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const *const rocblas_double_complex,
        lda: rocblas_int,
        B: *const *const rocblas_double_complex,
        ldb: rocblas_int,
        beta: *const f64,
        C: *const *mut rocblas_double_complex,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cher2k_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_float_complex,
        A: *const *const rocblas_float_complex,
        lda: i64,
        B: *const *const rocblas_float_complex,
        ldb: i64,
        beta: *const f32,
        C: *const *mut rocblas_float_complex,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zher2k_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_double_complex,
        A: *const *const rocblas_double_complex,
        lda: i64,
        B: *const *const rocblas_double_complex,
        ldb: i64,
        beta: *const f64,
        C: *const *mut rocblas_double_complex,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cher2k_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        B: *const rocblas_float_complex,
        ldb: rocblas_int,
        stride_B: rocblas_stride,
        beta: *const f32,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zher2k_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        B: *const rocblas_double_complex,
        ldb: rocblas_int,
        stride_B: rocblas_stride,
        beta: *const f64,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cher2k_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: i64,
        stride_A: rocblas_stride,
        B: *const rocblas_float_complex,
        ldb: i64,
        stride_B: rocblas_stride,
        beta: *const f32,
        C: *mut rocblas_float_complex,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zher2k_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: i64,
        stride_A: rocblas_stride,
        B: *const rocblas_double_complex,
        ldb: i64,
        stride_B: rocblas_stride,
        beta: *const f64,
        C: *mut rocblas_double_complex,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cherkx(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        B: *const rocblas_float_complex,
        ldb: rocblas_int,
        beta: *const f32,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zherkx(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        B: *const rocblas_double_complex,
        ldb: rocblas_int,
        beta: *const f64,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cherkx_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: i64,
        B: *const rocblas_float_complex,
        ldb: i64,
        beta: *const f32,
        C: *mut rocblas_float_complex,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zherkx_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: i64,
        B: *const rocblas_double_complex,
        ldb: i64,
        beta: *const f64,
        C: *mut rocblas_double_complex,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cherkx_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const *const rocblas_float_complex,
        lda: rocblas_int,
        B: *const *const rocblas_float_complex,
        ldb: rocblas_int,
        beta: *const f32,
        C: *const *mut rocblas_float_complex,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zherkx_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const *const rocblas_double_complex,
        lda: rocblas_int,
        B: *const *const rocblas_double_complex,
        ldb: rocblas_int,
        beta: *const f64,
        C: *const *mut rocblas_double_complex,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cherkx_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_float_complex,
        A: *const *const rocblas_float_complex,
        lda: i64,
        B: *const *const rocblas_float_complex,
        ldb: i64,
        beta: *const f32,
        C: *const *mut rocblas_float_complex,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zherkx_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_double_complex,
        A: *const *const rocblas_double_complex,
        lda: i64,
        B: *const *const rocblas_double_complex,
        ldb: i64,
        beta: *const f64,
        C: *const *mut rocblas_double_complex,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cherkx_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        B: *const rocblas_float_complex,
        ldb: rocblas_int,
        stride_B: rocblas_stride,
        beta: *const f32,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zherkx_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        B: *const rocblas_double_complex,
        ldb: rocblas_int,
        stride_B: rocblas_stride,
        beta: *const f64,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cherkx_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: i64,
        stride_A: rocblas_stride,
        B: *const rocblas_float_complex,
        ldb: i64,
        stride_B: rocblas_stride,
        beta: *const f32,
        C: *mut rocblas_float_complex,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zherkx_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: i64,
        stride_A: rocblas_stride,
        B: *const rocblas_double_complex,
        ldb: i64,
        stride_B: rocblas_stride,
        beta: *const f64,
        C: *mut rocblas_double_complex,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssymm(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f32,
        A: *const f32,
        lda: rocblas_int,
        B: *const f32,
        ldb: rocblas_int,
        beta: *const f32,
        C: *mut f32,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsymm(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f64,
        A: *const f64,
        lda: rocblas_int,
        B: *const f64,
        ldb: rocblas_int,
        beta: *const f64,
        C: *mut f64,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csymm(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        B: *const rocblas_float_complex,
        ldb: rocblas_int,
        beta: *const rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsymm(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        B: *const rocblas_double_complex,
        ldb: rocblas_int,
        beta: *const rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssymm_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: i64,
        n: i64,
        alpha: *const f32,
        A: *const f32,
        lda: i64,
        B: *const f32,
        ldb: i64,
        beta: *const f32,
        C: *mut f32,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsymm_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: i64,
        n: i64,
        alpha: *const f64,
        A: *const f64,
        lda: i64,
        B: *const f64,
        ldb: i64,
        beta: *const f64,
        C: *mut f64,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csymm_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: i64,
        n: i64,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: i64,
        B: *const rocblas_float_complex,
        ldb: i64,
        beta: *const rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsymm_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: i64,
        n: i64,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: i64,
        B: *const rocblas_double_complex,
        ldb: i64,
        beta: *const rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssymm_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f32,
        A: *const *const f32,
        lda: rocblas_int,
        B: *const *const f32,
        ldb: rocblas_int,
        beta: *const f32,
        C: *const *mut f32,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsymm_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f64,
        A: *const *const f64,
        lda: rocblas_int,
        B: *const *const f64,
        ldb: rocblas_int,
        beta: *const f64,
        C: *const *mut f64,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csymm_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const *const rocblas_float_complex,
        lda: rocblas_int,
        B: *const *const rocblas_float_complex,
        ldb: rocblas_int,
        beta: *const rocblas_float_complex,
        C: *const *mut rocblas_float_complex,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsymm_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const *const rocblas_double_complex,
        lda: rocblas_int,
        B: *const *const rocblas_double_complex,
        ldb: rocblas_int,
        beta: *const rocblas_double_complex,
        C: *const *mut rocblas_double_complex,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssymm_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: i64,
        n: i64,
        alpha: *const f32,
        A: *const *const f32,
        lda: i64,
        B: *const *const f32,
        ldb: i64,
        beta: *const f32,
        C: *const *mut f32,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsymm_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: i64,
        n: i64,
        alpha: *const f64,
        A: *const *const f64,
        lda: i64,
        B: *const *const f64,
        ldb: i64,
        beta: *const f64,
        C: *const *mut f64,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csymm_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: i64,
        n: i64,
        alpha: *const rocblas_float_complex,
        A: *const *const rocblas_float_complex,
        lda: i64,
        B: *const *const rocblas_float_complex,
        ldb: i64,
        beta: *const rocblas_float_complex,
        C: *const *mut rocblas_float_complex,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsymm_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: i64,
        n: i64,
        alpha: *const rocblas_double_complex,
        A: *const *const rocblas_double_complex,
        lda: i64,
        B: *const *const rocblas_double_complex,
        ldb: i64,
        beta: *const rocblas_double_complex,
        C: *const *mut rocblas_double_complex,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssymm_strided_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f32,
        A: *const f32,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        B: *const f32,
        ldb: rocblas_int,
        stride_B: rocblas_stride,
        beta: *const f32,
        C: *mut f32,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsymm_strided_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f64,
        A: *const f64,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        B: *const f64,
        ldb: rocblas_int,
        stride_B: rocblas_stride,
        beta: *const f64,
        C: *mut f64,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csymm_strided_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        B: *const rocblas_float_complex,
        ldb: rocblas_int,
        stride_B: rocblas_stride,
        beta: *const rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsymm_strided_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        B: *const rocblas_double_complex,
        ldb: rocblas_int,
        stride_B: rocblas_stride,
        beta: *const rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssymm_strided_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: i64,
        n: i64,
        alpha: *const f32,
        A: *const f32,
        lda: i64,
        stride_A: rocblas_stride,
        B: *const f32,
        ldb: i64,
        stride_B: rocblas_stride,
        beta: *const f32,
        C: *mut f32,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsymm_strided_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: i64,
        n: i64,
        alpha: *const f64,
        A: *const f64,
        lda: i64,
        stride_A: rocblas_stride,
        B: *const f64,
        ldb: i64,
        stride_B: rocblas_stride,
        beta: *const f64,
        C: *mut f64,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csymm_strided_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: i64,
        n: i64,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: i64,
        stride_A: rocblas_stride,
        B: *const rocblas_float_complex,
        ldb: i64,
        stride_B: rocblas_stride,
        beta: *const rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsymm_strided_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        m: i64,
        n: i64,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: i64,
        stride_A: rocblas_stride,
        B: *const rocblas_double_complex,
        ldb: i64,
        stride_B: rocblas_stride,
        beta: *const rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssyrk(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f32,
        A: *const f32,
        lda: rocblas_int,
        beta: *const f32,
        C: *mut f32,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsyrk(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f64,
        A: *const f64,
        lda: rocblas_int,
        beta: *const f64,
        C: *mut f64,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csyrk(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        beta: *const rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsyrk(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        beta: *const rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssyrk_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const f32,
        A: *const f32,
        lda: i64,
        beta: *const f32,
        C: *mut f32,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsyrk_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const f64,
        A: *const f64,
        lda: i64,
        beta: *const f64,
        C: *mut f64,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csyrk_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: i64,
        beta: *const rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsyrk_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: i64,
        beta: *const rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssyrk_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f32,
        A: *const *const f32,
        lda: rocblas_int,
        beta: *const f32,
        C: *const *mut f32,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsyrk_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f64,
        A: *const *const f64,
        lda: rocblas_int,
        beta: *const f64,
        C: *const *mut f64,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csyrk_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const *const rocblas_float_complex,
        lda: rocblas_int,
        beta: *const rocblas_float_complex,
        C: *const *mut rocblas_float_complex,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsyrk_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const *const rocblas_double_complex,
        lda: rocblas_int,
        beta: *const rocblas_double_complex,
        C: *const *mut rocblas_double_complex,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssyrk_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const f32,
        A: *const *const f32,
        lda: i64,
        beta: *const f32,
        C: *const *mut f32,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsyrk_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const f64,
        A: *const *const f64,
        lda: i64,
        beta: *const f64,
        C: *const *mut f64,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csyrk_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_float_complex,
        A: *const *const rocblas_float_complex,
        lda: i64,
        beta: *const rocblas_float_complex,
        C: *const *mut rocblas_float_complex,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsyrk_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_double_complex,
        A: *const *const rocblas_double_complex,
        lda: i64,
        beta: *const rocblas_double_complex,
        C: *const *mut rocblas_double_complex,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssyrk_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f32,
        A: *const f32,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        beta: *const f32,
        C: *mut f32,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsyrk_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f64,
        A: *const f64,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        beta: *const f64,
        C: *mut f64,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csyrk_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        beta: *const rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsyrk_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        beta: *const rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssyrk_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const f32,
        A: *const f32,
        lda: i64,
        stride_A: rocblas_stride,
        beta: *const f32,
        C: *mut f32,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsyrk_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const f64,
        A: *const f64,
        lda: i64,
        stride_A: rocblas_stride,
        beta: *const f64,
        C: *mut f64,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csyrk_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: i64,
        stride_A: rocblas_stride,
        beta: *const rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsyrk_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: i64,
        stride_A: rocblas_stride,
        beta: *const rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssyr2k(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f32,
        A: *const f32,
        lda: rocblas_int,
        B: *const f32,
        ldb: rocblas_int,
        beta: *const f32,
        C: *mut f32,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsyr2k(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f64,
        A: *const f64,
        lda: rocblas_int,
        B: *const f64,
        ldb: rocblas_int,
        beta: *const f64,
        C: *mut f64,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csyr2k(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        B: *const rocblas_float_complex,
        ldb: rocblas_int,
        beta: *const rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsyr2k(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        B: *const rocblas_double_complex,
        ldb: rocblas_int,
        beta: *const rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssyr2k_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const f32,
        A: *const f32,
        lda: i64,
        B: *const f32,
        ldb: i64,
        beta: *const f32,
        C: *mut f32,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsyr2k_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const f64,
        A: *const f64,
        lda: i64,
        B: *const f64,
        ldb: i64,
        beta: *const f64,
        C: *mut f64,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csyr2k_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: i64,
        B: *const rocblas_float_complex,
        ldb: i64,
        beta: *const rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsyr2k_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: i64,
        B: *const rocblas_double_complex,
        ldb: i64,
        beta: *const rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssyr2k_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f32,
        A: *const *const f32,
        lda: rocblas_int,
        B: *const *const f32,
        ldb: rocblas_int,
        beta: *const f32,
        C: *const *mut f32,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsyr2k_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f64,
        A: *const *const f64,
        lda: rocblas_int,
        B: *const *const f64,
        ldb: rocblas_int,
        beta: *const f64,
        C: *const *mut f64,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csyr2k_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const *const rocblas_float_complex,
        lda: rocblas_int,
        B: *const *const rocblas_float_complex,
        ldb: rocblas_int,
        beta: *const rocblas_float_complex,
        C: *const *mut rocblas_float_complex,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsyr2k_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const *const rocblas_double_complex,
        lda: rocblas_int,
        B: *const *const rocblas_double_complex,
        ldb: rocblas_int,
        beta: *const rocblas_double_complex,
        C: *const *mut rocblas_double_complex,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssyr2k_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const f32,
        A: *const *const f32,
        lda: i64,
        B: *const *const f32,
        ldb: i64,
        beta: *const f32,
        C: *const *mut f32,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsyr2k_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const f64,
        A: *const *const f64,
        lda: i64,
        B: *const *const f64,
        ldb: i64,
        beta: *const f64,
        C: *const *mut f64,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csyr2k_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_float_complex,
        A: *const *const rocblas_float_complex,
        lda: i64,
        B: *const *const rocblas_float_complex,
        ldb: i64,
        beta: *const rocblas_float_complex,
        C: *const *mut rocblas_float_complex,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsyr2k_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_double_complex,
        A: *const *const rocblas_double_complex,
        lda: i64,
        B: *const *const rocblas_double_complex,
        ldb: i64,
        beta: *const rocblas_double_complex,
        C: *const *mut rocblas_double_complex,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssyr2k_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f32,
        A: *const f32,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        B: *const f32,
        ldb: rocblas_int,
        stride_B: rocblas_stride,
        beta: *const f32,
        C: *mut f32,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsyr2k_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f64,
        A: *const f64,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        B: *const f64,
        ldb: rocblas_int,
        stride_B: rocblas_stride,
        beta: *const f64,
        C: *mut f64,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csyr2k_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        B: *const rocblas_float_complex,
        ldb: rocblas_int,
        stride_B: rocblas_stride,
        beta: *const rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsyr2k_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        B: *const rocblas_double_complex,
        ldb: rocblas_int,
        stride_B: rocblas_stride,
        beta: *const rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssyr2k_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const f32,
        A: *const f32,
        lda: i64,
        stride_A: rocblas_stride,
        B: *const f32,
        ldb: i64,
        stride_B: rocblas_stride,
        beta: *const f32,
        C: *mut f32,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsyr2k_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const f64,
        A: *const f64,
        lda: i64,
        stride_A: rocblas_stride,
        B: *const f64,
        ldb: i64,
        stride_B: rocblas_stride,
        beta: *const f64,
        C: *mut f64,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csyr2k_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: i64,
        stride_A: rocblas_stride,
        B: *const rocblas_float_complex,
        ldb: i64,
        stride_B: rocblas_stride,
        beta: *const rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsyr2k_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: i64,
        stride_A: rocblas_stride,
        B: *const rocblas_double_complex,
        ldb: i64,
        stride_B: rocblas_stride,
        beta: *const rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssyrkx(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f32,
        A: *const f32,
        lda: rocblas_int,
        B: *const f32,
        ldb: rocblas_int,
        beta: *const f32,
        C: *mut f32,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsyrkx(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f64,
        A: *const f64,
        lda: rocblas_int,
        B: *const f64,
        ldb: rocblas_int,
        beta: *const f64,
        C: *mut f64,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csyrkx(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        B: *const rocblas_float_complex,
        ldb: rocblas_int,
        beta: *const rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsyrkx(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        B: *const rocblas_double_complex,
        ldb: rocblas_int,
        beta: *const rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssyrkx_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const f32,
        A: *const f32,
        lda: i64,
        B: *const f32,
        ldb: i64,
        beta: *const f32,
        C: *mut f32,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsyrkx_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const f64,
        A: *const f64,
        lda: i64,
        B: *const f64,
        ldb: i64,
        beta: *const f64,
        C: *mut f64,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csyrkx_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: i64,
        B: *const rocblas_float_complex,
        ldb: i64,
        beta: *const rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsyrkx_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: i64,
        B: *const rocblas_double_complex,
        ldb: i64,
        beta: *const rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssyrkx_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f32,
        A: *const *const f32,
        lda: rocblas_int,
        B: *const *const f32,
        ldb: rocblas_int,
        beta: *const f32,
        C: *const *mut f32,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsyrkx_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f64,
        A: *const *const f64,
        lda: rocblas_int,
        B: *const *const f64,
        ldb: rocblas_int,
        beta: *const f64,
        C: *const *mut f64,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csyrkx_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const *const rocblas_float_complex,
        lda: rocblas_int,
        B: *const *const rocblas_float_complex,
        ldb: rocblas_int,
        beta: *const rocblas_float_complex,
        C: *const *mut rocblas_float_complex,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsyrkx_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const *const rocblas_double_complex,
        lda: rocblas_int,
        B: *const *const rocblas_double_complex,
        ldb: rocblas_int,
        beta: *const rocblas_double_complex,
        C: *const *mut rocblas_double_complex,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssyrkx_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const f32,
        A: *const *const f32,
        lda: i64,
        B: *const *const f32,
        ldb: i64,
        beta: *const f32,
        C: *const *mut f32,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsyrkx_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const f64,
        A: *const *const f64,
        lda: i64,
        B: *const *const f64,
        ldb: i64,
        beta: *const f64,
        C: *const *mut f64,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csyrkx_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_float_complex,
        A: *const *const rocblas_float_complex,
        lda: i64,
        B: *const *const rocblas_float_complex,
        ldb: i64,
        beta: *const rocblas_float_complex,
        C: *const *mut rocblas_float_complex,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsyrkx_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_double_complex,
        A: *const *const rocblas_double_complex,
        lda: i64,
        B: *const *const rocblas_double_complex,
        ldb: i64,
        beta: *const rocblas_double_complex,
        C: *const *mut rocblas_double_complex,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssyrkx_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f32,
        A: *const f32,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        B: *const f32,
        ldb: rocblas_int,
        stride_B: rocblas_stride,
        beta: *const f32,
        C: *mut f32,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsyrkx_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f64,
        A: *const f64,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        B: *const f64,
        ldb: rocblas_int,
        stride_B: rocblas_stride,
        beta: *const f64,
        C: *mut f64,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csyrkx_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        B: *const rocblas_float_complex,
        ldb: rocblas_int,
        stride_B: rocblas_stride,
        beta: *const rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsyrkx_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        B: *const rocblas_double_complex,
        ldb: rocblas_int,
        stride_B: rocblas_stride,
        beta: *const rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ssyrkx_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const f32,
        A: *const f32,
        lda: i64,
        stride_A: rocblas_stride,
        B: *const f32,
        ldb: i64,
        stride_B: rocblas_stride,
        beta: *const f32,
        C: *mut f32,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dsyrkx_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const f64,
        A: *const f64,
        lda: i64,
        stride_A: rocblas_stride,
        B: *const f64,
        ldb: i64,
        stride_B: rocblas_stride,
        beta: *const f64,
        C: *mut f64,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_csyrkx_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: i64,
        stride_A: rocblas_stride,
        B: *const rocblas_float_complex,
        ldb: i64,
        stride_B: rocblas_stride,
        beta: *const rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zsyrkx_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: i64,
        stride_A: rocblas_stride,
        B: *const rocblas_double_complex,
        ldb: i64,
        stride_B: rocblas_stride,
        beta: *const rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_strmm(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f32,
        A: *const f32,
        lda: rocblas_int,
        B: *const f32,
        ldb: rocblas_int,
        C: *mut f32,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtrmm(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f64,
        A: *const f64,
        lda: rocblas_int,
        B: *const f64,
        ldb: rocblas_int,
        C: *mut f64,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctrmm(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        B: *const rocblas_float_complex,
        ldb: rocblas_int,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztrmm(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        B: *const rocblas_double_complex,
        ldb: rocblas_int,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_strmm_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: i64,
        n: i64,
        alpha: *const f32,
        A: *const f32,
        lda: i64,
        B: *const f32,
        ldb: i64,
        C: *mut f32,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtrmm_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: i64,
        n: i64,
        alpha: *const f64,
        A: *const f64,
        lda: i64,
        B: *const f64,
        ldb: i64,
        C: *mut f64,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctrmm_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: i64,
        n: i64,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: i64,
        B: *const rocblas_float_complex,
        ldb: i64,
        C: *mut rocblas_float_complex,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztrmm_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: i64,
        n: i64,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: i64,
        B: *const rocblas_double_complex,
        ldb: i64,
        C: *mut rocblas_double_complex,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_strmm_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f32,
        A: *const *const f32,
        lda: rocblas_int,
        B: *const *const f32,
        ldb: rocblas_int,
        C: *const *mut f32,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtrmm_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f64,
        A: *const *const f64,
        lda: rocblas_int,
        B: *const *const f64,
        ldb: rocblas_int,
        C: *const *mut f64,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctrmm_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const *const rocblas_float_complex,
        lda: rocblas_int,
        B: *const *const rocblas_float_complex,
        ldb: rocblas_int,
        C: *const *mut rocblas_float_complex,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztrmm_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const *const rocblas_double_complex,
        lda: rocblas_int,
        B: *const *const rocblas_double_complex,
        ldb: rocblas_int,
        C: *const *mut rocblas_double_complex,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_strmm_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: i64,
        n: i64,
        alpha: *const f32,
        A: *const *const f32,
        lda: i64,
        B: *const *const f32,
        ldb: i64,
        C: *const *mut f32,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtrmm_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: i64,
        n: i64,
        alpha: *const f64,
        A: *const *const f64,
        lda: i64,
        B: *const *const f64,
        ldb: i64,
        C: *const *mut f64,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctrmm_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: i64,
        n: i64,
        alpha: *const rocblas_float_complex,
        A: *const *const rocblas_float_complex,
        lda: i64,
        B: *const *const rocblas_float_complex,
        ldb: i64,
        C: *const *mut rocblas_float_complex,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztrmm_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: i64,
        n: i64,
        alpha: *const rocblas_double_complex,
        A: *const *const rocblas_double_complex,
        lda: i64,
        B: *const *const rocblas_double_complex,
        ldb: i64,
        C: *const *mut rocblas_double_complex,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_strmm_strided_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f32,
        A: *const f32,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        B: *const f32,
        ldb: rocblas_int,
        stride_B: rocblas_stride,
        C: *mut f32,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtrmm_strided_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f64,
        A: *const f64,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        B: *const f64,
        ldb: rocblas_int,
        stride_B: rocblas_stride,
        C: *mut f64,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctrmm_strided_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        B: *const rocblas_float_complex,
        ldb: rocblas_int,
        stride_B: rocblas_stride,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztrmm_strided_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        B: *const rocblas_double_complex,
        ldb: rocblas_int,
        stride_B: rocblas_stride,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_strmm_strided_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: i64,
        n: i64,
        alpha: *const f32,
        A: *const f32,
        lda: i64,
        stride_A: rocblas_stride,
        B: *const f32,
        ldb: i64,
        stride_B: rocblas_stride,
        C: *mut f32,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtrmm_strided_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: i64,
        n: i64,
        alpha: *const f64,
        A: *const f64,
        lda: i64,
        stride_A: rocblas_stride,
        B: *const f64,
        ldb: i64,
        stride_B: rocblas_stride,
        C: *mut f64,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctrmm_strided_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: i64,
        n: i64,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: i64,
        stride_A: rocblas_stride,
        B: *const rocblas_float_complex,
        ldb: i64,
        stride_B: rocblas_stride,
        C: *mut rocblas_float_complex,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztrmm_strided_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: i64,
        n: i64,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: i64,
        stride_A: rocblas_stride,
        B: *const rocblas_double_complex,
        ldb: i64,
        stride_B: rocblas_stride,
        C: *mut rocblas_double_complex,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_strtri(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const f32,
        lda: rocblas_int,
        invA: *mut f32,
        ldinvA: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtrtri(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const f64,
        lda: rocblas_int,
        invA: *mut f64,
        ldinvA: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctrtri(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        invA: *mut rocblas_float_complex,
        ldinvA: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztrtri(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        invA: *mut rocblas_double_complex,
        ldinvA: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_strtri_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const *const f32,
        lda: rocblas_int,
        invA: *const *mut f32,
        ldinvA: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtrtri_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const *const f64,
        lda: rocblas_int,
        invA: *const *mut f64,
        ldinvA: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctrtri_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const *const rocblas_float_complex,
        lda: rocblas_int,
        invA: *const *mut rocblas_float_complex,
        ldinvA: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztrtri_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const *const rocblas_double_complex,
        lda: rocblas_int,
        invA: *const *mut rocblas_double_complex,
        ldinvA: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_strtri_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const f32,
        lda: rocblas_int,
        stride_a: rocblas_stride,
        invA: *mut f32,
        ldinvA: rocblas_int,
        stride_invA: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtrtri_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const f64,
        lda: rocblas_int,
        stride_a: rocblas_stride,
        invA: *mut f64,
        ldinvA: rocblas_int,
        stride_invA: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctrtri_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        stride_a: rocblas_stride,
        invA: *mut rocblas_float_complex,
        ldinvA: rocblas_int,
        stride_invA: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztrtri_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        stride_a: rocblas_stride,
        invA: *mut rocblas_double_complex,
        ldinvA: rocblas_int,
        stride_invA: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_strsm(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f32,
        A: *const f32,
        lda: rocblas_int,
        B: *mut f32,
        ldb: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtrsm(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f64,
        A: *const f64,
        lda: rocblas_int,
        B: *mut f64,
        ldb: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctrsm(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        B: *mut rocblas_float_complex,
        ldb: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztrsm(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        B: *mut rocblas_double_complex,
        ldb: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_strsm_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: i64,
        n: i64,
        alpha: *const f32,
        A: *const f32,
        lda: i64,
        B: *mut f32,
        ldb: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtrsm_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: i64,
        n: i64,
        alpha: *const f64,
        A: *const f64,
        lda: i64,
        B: *mut f64,
        ldb: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctrsm_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: i64,
        n: i64,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: i64,
        B: *mut rocblas_float_complex,
        ldb: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztrsm_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: i64,
        n: i64,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: i64,
        B: *mut rocblas_double_complex,
        ldb: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_strsm_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f32,
        A: *const *const f32,
        lda: rocblas_int,
        B: *const *mut f32,
        ldb: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtrsm_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f64,
        A: *const *const f64,
        lda: rocblas_int,
        B: *const *mut f64,
        ldb: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctrsm_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const *const rocblas_float_complex,
        lda: rocblas_int,
        B: *const *mut rocblas_float_complex,
        ldb: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztrsm_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const *const rocblas_double_complex,
        lda: rocblas_int,
        B: *const *mut rocblas_double_complex,
        ldb: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_strsm_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: i64,
        n: i64,
        alpha: *const f32,
        A: *const *const f32,
        lda: i64,
        B: *const *mut f32,
        ldb: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtrsm_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: i64,
        n: i64,
        alpha: *const f64,
        A: *const *const f64,
        lda: i64,
        B: *const *mut f64,
        ldb: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctrsm_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: i64,
        n: i64,
        alpha: *const rocblas_float_complex,
        A: *const *const rocblas_float_complex,
        lda: i64,
        B: *const *mut rocblas_float_complex,
        ldb: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztrsm_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: i64,
        n: i64,
        alpha: *const rocblas_double_complex,
        A: *const *const rocblas_double_complex,
        lda: i64,
        B: *const *mut rocblas_double_complex,
        ldb: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_strsm_strided_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f32,
        A: *const f32,
        lda: rocblas_int,
        stride_a: rocblas_stride,
        B: *mut f32,
        ldb: rocblas_int,
        stride_b: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtrsm_strided_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f64,
        A: *const f64,
        lda: rocblas_int,
        stride_a: rocblas_stride,
        B: *mut f64,
        ldb: rocblas_int,
        stride_b: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctrsm_strided_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        stride_a: rocblas_stride,
        B: *mut rocblas_float_complex,
        ldb: rocblas_int,
        stride_b: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztrsm_strided_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        stride_a: rocblas_stride,
        B: *mut rocblas_double_complex,
        ldb: rocblas_int,
        stride_b: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_strsm_strided_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: i64,
        n: i64,
        alpha: *const f32,
        A: *const f32,
        lda: i64,
        stride_a: rocblas_stride,
        B: *mut f32,
        ldb: i64,
        stride_b: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dtrsm_strided_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: i64,
        n: i64,
        alpha: *const f64,
        A: *const f64,
        lda: i64,
        stride_a: rocblas_stride,
        B: *mut f64,
        ldb: i64,
        stride_b: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ctrsm_strided_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: i64,
        n: i64,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: i64,
        stride_a: rocblas_stride,
        B: *mut rocblas_float_complex,
        ldb: i64,
        stride_b: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ztrsm_strided_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: i64,
        n: i64,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: i64,
        stride_a: rocblas_stride,
        B: *mut rocblas_double_complex,
        ldb: i64,
        stride_b: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_hgemm_kernel_name(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_half,
        A: *const rocblas_half,
        lda: rocblas_int,
        stride_a: rocblas_stride,
        B: *const rocblas_half,
        ldb: rocblas_int,
        stride_b: rocblas_stride,
        beta: *const rocblas_half,
        C: *mut rocblas_half,
        ldc: rocblas_int,
        stride_c: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sgemm_kernel_name(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f32,
        A: *const f32,
        lda: rocblas_int,
        stride_a: rocblas_stride,
        B: *const f32,
        ldb: rocblas_int,
        stride_b: rocblas_stride,
        beta: *const f32,
        C: *mut f32,
        ldc: rocblas_int,
        stride_c: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dgemm_kernel_name(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f64,
        A: *const f64,
        lda: rocblas_int,
        stride_a: rocblas_stride,
        B: *const f64,
        ldb: rocblas_int,
        stride_b: rocblas_stride,
        beta: *const f64,
        C: *mut f64,
        ldc: rocblas_int,
        stride_c: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sgemm(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f32,
        A: *const f32,
        lda: rocblas_int,
        B: *const f32,
        ldb: rocblas_int,
        beta: *const f32,
        C: *mut f32,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dgemm(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f64,
        A: *const f64,
        lda: rocblas_int,
        B: *const f64,
        ldb: rocblas_int,
        beta: *const f64,
        C: *mut f64,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_hgemm(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_half,
        A: *const rocblas_half,
        lda: rocblas_int,
        B: *const rocblas_half,
        ldb: rocblas_int,
        beta: *const rocblas_half,
        C: *mut rocblas_half,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgemm(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        B: *const rocblas_float_complex,
        ldb: rocblas_int,
        beta: *const rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgemm(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        B: *const rocblas_double_complex,
        ldb: rocblas_int,
        beta: *const rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sgemm_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: i64,
        n: i64,
        k: i64,
        alpha: *const f32,
        A: *const f32,
        lda: i64,
        B: *const f32,
        ldb: i64,
        beta: *const f32,
        C: *mut f32,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dgemm_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: i64,
        n: i64,
        k: i64,
        alpha: *const f64,
        A: *const f64,
        lda: i64,
        B: *const f64,
        ldb: i64,
        beta: *const f64,
        C: *mut f64,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_hgemm_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: i64,
        n: i64,
        k: i64,
        alpha: *const rocblas_half,
        A: *const rocblas_half,
        lda: i64,
        B: *const rocblas_half,
        ldb: i64,
        beta: *const rocblas_half,
        C: *mut rocblas_half,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgemm_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: i64,
        n: i64,
        k: i64,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: i64,
        B: *const rocblas_float_complex,
        ldb: i64,
        beta: *const rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgemm_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: i64,
        n: i64,
        k: i64,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: i64,
        B: *const rocblas_double_complex,
        ldb: i64,
        beta: *const rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sgemm_batched(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f32,
        A: *const *const f32,
        lda: rocblas_int,
        B: *const *const f32,
        ldb: rocblas_int,
        beta: *const f32,
        C: *const *mut f32,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dgemm_batched(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f64,
        A: *const *const f64,
        lda: rocblas_int,
        B: *const *const f64,
        ldb: rocblas_int,
        beta: *const f64,
        C: *const *mut f64,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_hgemm_batched(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_half,
        A: *const *const rocblas_half,
        lda: rocblas_int,
        B: *const *const rocblas_half,
        ldb: rocblas_int,
        beta: *const rocblas_half,
        C: *const *mut rocblas_half,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgemm_batched(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const *const rocblas_float_complex,
        lda: rocblas_int,
        B: *const *const rocblas_float_complex,
        ldb: rocblas_int,
        beta: *const rocblas_float_complex,
        C: *const *mut rocblas_float_complex,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgemm_batched(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const *const rocblas_double_complex,
        lda: rocblas_int,
        B: *const *const rocblas_double_complex,
        ldb: rocblas_int,
        beta: *const rocblas_double_complex,
        C: *const *mut rocblas_double_complex,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sgemm_batched_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: i64,
        n: i64,
        k: i64,
        alpha: *const f32,
        A: *const *const f32,
        lda: i64,
        B: *const *const f32,
        ldb: i64,
        beta: *const f32,
        C: *const *mut f32,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dgemm_batched_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: i64,
        n: i64,
        k: i64,
        alpha: *const f64,
        A: *const *const f64,
        lda: i64,
        B: *const *const f64,
        ldb: i64,
        beta: *const f64,
        C: *const *mut f64,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_hgemm_batched_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: i64,
        n: i64,
        k: i64,
        alpha: *const rocblas_half,
        A: *const *const rocblas_half,
        lda: i64,
        B: *const *const rocblas_half,
        ldb: i64,
        beta: *const rocblas_half,
        C: *const *mut rocblas_half,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgemm_batched_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: i64,
        n: i64,
        k: i64,
        alpha: *const rocblas_float_complex,
        A: *const *const rocblas_float_complex,
        lda: i64,
        B: *const *const rocblas_float_complex,
        ldb: i64,
        beta: *const rocblas_float_complex,
        C: *const *mut rocblas_float_complex,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgemm_batched_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: i64,
        n: i64,
        k: i64,
        alpha: *const rocblas_double_complex,
        A: *const *const rocblas_double_complex,
        lda: i64,
        B: *const *const rocblas_double_complex,
        ldb: i64,
        beta: *const rocblas_double_complex,
        C: *const *mut rocblas_double_complex,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sgemm_strided_batched(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f32,
        A: *const f32,
        lda: rocblas_int,
        stride_a: rocblas_stride,
        B: *const f32,
        ldb: rocblas_int,
        stride_b: rocblas_stride,
        beta: *const f32,
        C: *mut f32,
        ldc: rocblas_int,
        stride_c: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dgemm_strided_batched(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f64,
        A: *const f64,
        lda: rocblas_int,
        stride_a: rocblas_stride,
        B: *const f64,
        ldb: rocblas_int,
        stride_b: rocblas_stride,
        beta: *const f64,
        C: *mut f64,
        ldc: rocblas_int,
        stride_c: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_hgemm_strided_batched(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_half,
        A: *const rocblas_half,
        lda: rocblas_int,
        stride_a: rocblas_stride,
        B: *const rocblas_half,
        ldb: rocblas_int,
        stride_b: rocblas_stride,
        beta: *const rocblas_half,
        C: *mut rocblas_half,
        ldc: rocblas_int,
        stride_c: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgemm_strided_batched(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        stride_a: rocblas_stride,
        B: *const rocblas_float_complex,
        ldb: rocblas_int,
        stride_b: rocblas_stride,
        beta: *const rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
        stride_c: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgemm_strided_batched(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        stride_a: rocblas_stride,
        B: *const rocblas_double_complex,
        ldb: rocblas_int,
        stride_b: rocblas_stride,
        beta: *const rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
        stride_c: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sgemm_strided_batched_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: i64,
        n: i64,
        k: i64,
        alpha: *const f32,
        A: *const f32,
        lda: i64,
        stride_a: rocblas_stride,
        B: *const f32,
        ldb: i64,
        stride_b: rocblas_stride,
        beta: *const f32,
        C: *mut f32,
        ldc: i64,
        stride_c: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dgemm_strided_batched_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: i64,
        n: i64,
        k: i64,
        alpha: *const f64,
        A: *const f64,
        lda: i64,
        stride_a: rocblas_stride,
        B: *const f64,
        ldb: i64,
        stride_b: rocblas_stride,
        beta: *const f64,
        C: *mut f64,
        ldc: i64,
        stride_c: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_hgemm_strided_batched_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: i64,
        n: i64,
        k: i64,
        alpha: *const rocblas_half,
        A: *const rocblas_half,
        lda: i64,
        stride_a: rocblas_stride,
        B: *const rocblas_half,
        ldb: i64,
        stride_b: rocblas_stride,
        beta: *const rocblas_half,
        C: *mut rocblas_half,
        ldc: i64,
        stride_c: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgemm_strided_batched_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: i64,
        n: i64,
        k: i64,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: i64,
        stride_a: rocblas_stride,
        B: *const rocblas_float_complex,
        ldb: i64,
        stride_b: rocblas_stride,
        beta: *const rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: i64,
        stride_c: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgemm_strided_batched_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: i64,
        n: i64,
        k: i64,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: i64,
        stride_a: rocblas_stride,
        B: *const rocblas_double_complex,
        ldb: i64,
        stride_b: rocblas_stride,
        beta: *const rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: i64,
        stride_c: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sdgmm(
        handle: rocblas_handle,
        side: rocblas_side,
        m: rocblas_int,
        n: rocblas_int,
        A: *const f32,
        lda: rocblas_int,
        x: *const f32,
        incx: rocblas_int,
        C: *mut f32,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ddgmm(
        handle: rocblas_handle,
        side: rocblas_side,
        m: rocblas_int,
        n: rocblas_int,
        A: *const f64,
        lda: rocblas_int,
        x: *const f64,
        incx: rocblas_int,
        C: *mut f64,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cdgmm(
        handle: rocblas_handle,
        side: rocblas_side,
        m: rocblas_int,
        n: rocblas_int,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zdgmm(
        handle: rocblas_handle,
        side: rocblas_side,
        m: rocblas_int,
        n: rocblas_int,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sdgmm_64(
        handle: rocblas_handle,
        side: rocblas_side,
        m: i64,
        n: i64,
        A: *const f32,
        lda: i64,
        x: *const f32,
        incx: i64,
        C: *mut f32,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ddgmm_64(
        handle: rocblas_handle,
        side: rocblas_side,
        m: i64,
        n: i64,
        A: *const f64,
        lda: i64,
        x: *const f64,
        incx: i64,
        C: *mut f64,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cdgmm_64(
        handle: rocblas_handle,
        side: rocblas_side,
        m: i64,
        n: i64,
        A: *const rocblas_float_complex,
        lda: i64,
        x: *const rocblas_float_complex,
        incx: i64,
        C: *mut rocblas_float_complex,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zdgmm_64(
        handle: rocblas_handle,
        side: rocblas_side,
        m: i64,
        n: i64,
        A: *const rocblas_double_complex,
        lda: i64,
        x: *const rocblas_double_complex,
        incx: i64,
        C: *mut rocblas_double_complex,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sdgmm_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *const f32,
        lda: rocblas_int,
        x: *const *const f32,
        incx: rocblas_int,
        C: *const *mut f32,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ddgmm_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *const f64,
        lda: rocblas_int,
        x: *const *const f64,
        incx: rocblas_int,
        C: *const *mut f64,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cdgmm_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *const rocblas_float_complex,
        lda: rocblas_int,
        x: *const *const rocblas_float_complex,
        incx: rocblas_int,
        C: *const *mut rocblas_float_complex,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zdgmm_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *const rocblas_double_complex,
        lda: rocblas_int,
        x: *const *const rocblas_double_complex,
        incx: rocblas_int,
        C: *const *mut rocblas_double_complex,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sdgmm_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        m: i64,
        n: i64,
        A: *const *const f32,
        lda: i64,
        x: *const *const f32,
        incx: i64,
        C: *const *mut f32,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ddgmm_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        m: i64,
        n: i64,
        A: *const *const f64,
        lda: i64,
        x: *const *const f64,
        incx: i64,
        C: *const *mut f64,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cdgmm_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        m: i64,
        n: i64,
        A: *const *const rocblas_float_complex,
        lda: i64,
        x: *const *const rocblas_float_complex,
        incx: i64,
        C: *const *mut rocblas_float_complex,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zdgmm_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        m: i64,
        n: i64,
        A: *const *const rocblas_double_complex,
        lda: i64,
        x: *const *const rocblas_double_complex,
        incx: i64,
        C: *const *mut rocblas_double_complex,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sdgmm_strided_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        m: rocblas_int,
        n: rocblas_int,
        A: *const f32,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        x: *const f32,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        C: *mut f32,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ddgmm_strided_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        m: rocblas_int,
        n: rocblas_int,
        A: *const f64,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        x: *const f64,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        C: *mut f64,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cdgmm_strided_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        m: rocblas_int,
        n: rocblas_int,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        x: *const rocblas_float_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zdgmm_strided_batched(
        handle: rocblas_handle,
        side: rocblas_side,
        m: rocblas_int,
        n: rocblas_int,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        x: *const rocblas_double_complex,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sdgmm_strided_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        m: i64,
        n: i64,
        A: *const f32,
        lda: i64,
        stride_A: rocblas_stride,
        x: *const f32,
        incx: i64,
        stride_x: rocblas_stride,
        C: *mut f32,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_ddgmm_strided_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        m: i64,
        n: i64,
        A: *const f64,
        lda: i64,
        stride_A: rocblas_stride,
        x: *const f64,
        incx: i64,
        stride_x: rocblas_stride,
        C: *mut f64,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cdgmm_strided_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        m: i64,
        n: i64,
        A: *const rocblas_float_complex,
        lda: i64,
        stride_A: rocblas_stride,
        x: *const rocblas_float_complex,
        incx: i64,
        stride_x: rocblas_stride,
        C: *mut rocblas_float_complex,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zdgmm_strided_batched_64(
        handle: rocblas_handle,
        side: rocblas_side,
        m: i64,
        n: i64,
        A: *const rocblas_double_complex,
        lda: i64,
        stride_A: rocblas_stride,
        x: *const rocblas_double_complex,
        incx: i64,
        stride_x: rocblas_stride,
        C: *mut rocblas_double_complex,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sgeam(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f32,
        A: *const f32,
        lda: rocblas_int,
        beta: *const f32,
        B: *const f32,
        ldb: rocblas_int,
        C: *mut f32,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dgeam(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f64,
        A: *const f64,
        lda: rocblas_int,
        beta: *const f64,
        B: *const f64,
        ldb: rocblas_int,
        C: *mut f64,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgeam(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        beta: *const rocblas_float_complex,
        B: *const rocblas_float_complex,
        ldb: rocblas_int,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgeam(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        beta: *const rocblas_double_complex,
        B: *const rocblas_double_complex,
        ldb: rocblas_int,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sgeam_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: i64,
        n: i64,
        alpha: *const f32,
        A: *const f32,
        lda: i64,
        beta: *const f32,
        B: *const f32,
        ldb: i64,
        C: *mut f32,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dgeam_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: i64,
        n: i64,
        alpha: *const f64,
        A: *const f64,
        lda: i64,
        beta: *const f64,
        B: *const f64,
        ldb: i64,
        C: *mut f64,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgeam_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: i64,
        n: i64,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: i64,
        beta: *const rocblas_float_complex,
        B: *const rocblas_float_complex,
        ldb: i64,
        C: *mut rocblas_float_complex,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgeam_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: i64,
        n: i64,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: i64,
        beta: *const rocblas_double_complex,
        B: *const rocblas_double_complex,
        ldb: i64,
        C: *mut rocblas_double_complex,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sgeam_batched(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f32,
        A: *const *const f32,
        lda: rocblas_int,
        beta: *const f32,
        B: *const *const f32,
        ldb: rocblas_int,
        C: *const *mut f32,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dgeam_batched(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f64,
        A: *const *const f64,
        lda: rocblas_int,
        beta: *const f64,
        B: *const *const f64,
        ldb: rocblas_int,
        C: *const *mut f64,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgeam_batched(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const *const rocblas_float_complex,
        lda: rocblas_int,
        beta: *const rocblas_float_complex,
        B: *const *const rocblas_float_complex,
        ldb: rocblas_int,
        C: *const *mut rocblas_float_complex,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgeam_batched(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const *const rocblas_double_complex,
        lda: rocblas_int,
        beta: *const rocblas_double_complex,
        B: *const *const rocblas_double_complex,
        ldb: rocblas_int,
        C: *const *mut rocblas_double_complex,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sgeam_batched_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: i64,
        n: i64,
        alpha: *const f32,
        A: *const *const f32,
        lda: i64,
        beta: *const f32,
        B: *const *const f32,
        ldb: i64,
        C: *const *mut f32,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dgeam_batched_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: i64,
        n: i64,
        alpha: *const f64,
        A: *const *const f64,
        lda: i64,
        beta: *const f64,
        B: *const *const f64,
        ldb: i64,
        C: *const *mut f64,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgeam_batched_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: i64,
        n: i64,
        alpha: *const rocblas_float_complex,
        A: *const *const rocblas_float_complex,
        lda: i64,
        beta: *const rocblas_float_complex,
        B: *const *const rocblas_float_complex,
        ldb: i64,
        C: *const *mut rocblas_float_complex,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgeam_batched_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: i64,
        n: i64,
        alpha: *const rocblas_double_complex,
        A: *const *const rocblas_double_complex,
        lda: i64,
        beta: *const rocblas_double_complex,
        B: *const *const rocblas_double_complex,
        ldb: i64,
        C: *const *mut rocblas_double_complex,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sgeam_strided_batched(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f32,
        A: *const f32,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        beta: *const f32,
        B: *const f32,
        ldb: rocblas_int,
        stride_B: rocblas_stride,
        C: *mut f32,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dgeam_strided_batched(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const f64,
        A: *const f64,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        beta: *const f64,
        B: *const f64,
        ldb: rocblas_int,
        stride_B: rocblas_stride,
        C: *mut f64,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgeam_strided_batched(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        beta: *const rocblas_float_complex,
        B: *const rocblas_float_complex,
        ldb: rocblas_int,
        stride_B: rocblas_stride,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgeam_strided_batched(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        beta: *const rocblas_double_complex,
        B: *const rocblas_double_complex,
        ldb: rocblas_int,
        stride_B: rocblas_stride,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
        stride_C: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sgeam_strided_batched_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: i64,
        n: i64,
        alpha: *const f32,
        A: *const f32,
        lda: i64,
        stride_A: rocblas_stride,
        beta: *const f32,
        B: *const f32,
        ldb: i64,
        stride_B: rocblas_stride,
        C: *mut f32,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dgeam_strided_batched_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: i64,
        n: i64,
        alpha: *const f64,
        A: *const f64,
        lda: i64,
        stride_A: rocblas_stride,
        beta: *const f64,
        B: *const f64,
        ldb: i64,
        stride_B: rocblas_stride,
        C: *mut f64,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgeam_strided_batched_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: i64,
        n: i64,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: i64,
        stride_A: rocblas_stride,
        beta: *const rocblas_float_complex,
        B: *const rocblas_float_complex,
        ldb: i64,
        stride_B: rocblas_stride,
        C: *mut rocblas_float_complex,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgeam_strided_batched_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: i64,
        n: i64,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: i64,
        stride_A: rocblas_stride,
        beta: *const rocblas_double_complex,
        B: *const rocblas_double_complex,
        ldb: i64,
        stride_B: rocblas_stride,
        C: *mut rocblas_double_complex,
        ldc: i64,
        stride_C: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_gemm_ex(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const ::std::os::raw::c_void,
        a: *const ::std::os::raw::c_void,
        a_type: rocblas_datatype,
        lda: rocblas_int,
        b: *const ::std::os::raw::c_void,
        b_type: rocblas_datatype,
        ldb: rocblas_int,
        beta: *const ::std::os::raw::c_void,
        c: *const ::std::os::raw::c_void,
        c_type: rocblas_datatype,
        ldc: rocblas_int,
        d: *mut ::std::os::raw::c_void,
        d_type: rocblas_datatype,
        ldd: rocblas_int,
        compute_type: rocblas_datatype,
        algo: rocblas_gemm_algo,
        solution_index: i32,
        flags: u32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_gemm_ex_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: i64,
        n: i64,
        k: i64,
        alpha: *const ::std::os::raw::c_void,
        a: *const ::std::os::raw::c_void,
        a_type: rocblas_datatype,
        lda: i64,
        b: *const ::std::os::raw::c_void,
        b_type: rocblas_datatype,
        ldb: i64,
        beta: *const ::std::os::raw::c_void,
        c: *const ::std::os::raw::c_void,
        c_type: rocblas_datatype,
        ldc: i64,
        d: *mut ::std::os::raw::c_void,
        d_type: rocblas_datatype,
        ldd: i64,
        compute_type: rocblas_datatype,
        algo: rocblas_gemm_algo,
        solution_index: i32,
        flags: u32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_gemm_batched_ex(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const ::std::os::raw::c_void,
        a: *const ::std::os::raw::c_void,
        a_type: rocblas_datatype,
        lda: rocblas_int,
        b: *const ::std::os::raw::c_void,
        b_type: rocblas_datatype,
        ldb: rocblas_int,
        beta: *const ::std::os::raw::c_void,
        c: *const ::std::os::raw::c_void,
        c_type: rocblas_datatype,
        ldc: rocblas_int,
        d: *mut ::std::os::raw::c_void,
        d_type: rocblas_datatype,
        ldd: rocblas_int,
        batch_count: rocblas_int,
        compute_type: rocblas_datatype,
        algo: rocblas_gemm_algo,
        solution_index: i32,
        flags: u32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_gemm_batched_ex_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: i64,
        n: i64,
        k: i64,
        alpha: *const ::std::os::raw::c_void,
        a: *const ::std::os::raw::c_void,
        a_type: rocblas_datatype,
        lda: i64,
        b: *const ::std::os::raw::c_void,
        b_type: rocblas_datatype,
        ldb: i64,
        beta: *const ::std::os::raw::c_void,
        c: *const ::std::os::raw::c_void,
        c_type: rocblas_datatype,
        ldc: i64,
        d: *mut ::std::os::raw::c_void,
        d_type: rocblas_datatype,
        ldd: i64,
        batch_count: i64,
        compute_type: rocblas_datatype,
        algo: rocblas_gemm_algo,
        solution_index: i32,
        flags: u32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_gemm_strided_batched_ex(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const ::std::os::raw::c_void,
        a: *const ::std::os::raw::c_void,
        a_type: rocblas_datatype,
        lda: rocblas_int,
        stride_a: rocblas_stride,
        b: *const ::std::os::raw::c_void,
        b_type: rocblas_datatype,
        ldb: rocblas_int,
        stride_b: rocblas_stride,
        beta: *const ::std::os::raw::c_void,
        c: *const ::std::os::raw::c_void,
        c_type: rocblas_datatype,
        ldc: rocblas_int,
        stride_c: rocblas_stride,
        d: *mut ::std::os::raw::c_void,
        d_type: rocblas_datatype,
        ldd: rocblas_int,
        stride_d: rocblas_stride,
        batch_count: rocblas_int,
        compute_type: rocblas_datatype,
        algo: rocblas_gemm_algo,
        solution_index: i32,
        flags: u32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_gemm_strided_batched_ex_64(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: i64,
        n: i64,
        k: i64,
        alpha: *const ::std::os::raw::c_void,
        a: *const ::std::os::raw::c_void,
        a_type: rocblas_datatype,
        lda: i64,
        stride_a: rocblas_stride,
        b: *const ::std::os::raw::c_void,
        b_type: rocblas_datatype,
        ldb: i64,
        stride_b: rocblas_stride,
        beta: *const ::std::os::raw::c_void,
        c: *const ::std::os::raw::c_void,
        c_type: rocblas_datatype,
        ldc: i64,
        stride_c: rocblas_stride,
        d: *mut ::std::os::raw::c_void,
        d_type: rocblas_datatype,
        ldd: i64,
        stride_d: rocblas_stride,
        batch_count: i64,
        compute_type: rocblas_datatype,
        algo: rocblas_gemm_algo,
        solution_index: i32,
        flags: u32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sgemmt(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        transB: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f32,
        A: *const f32,
        lda: rocblas_int,
        B: *const f32,
        ldb: rocblas_int,
        beta: *const f32,
        C: *mut f32,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dgemmt(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        transB: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f64,
        A: *const f64,
        lda: rocblas_int,
        B: *const f64,
        ldb: rocblas_int,
        beta: *const f64,
        C: *mut f64,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgemmt(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        transB: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        B: *const rocblas_float_complex,
        ldb: rocblas_int,
        beta: *const rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgemmt(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        transB: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        B: *const rocblas_double_complex,
        ldb: rocblas_int,
        beta: *const rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sgemmt_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        transB: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const f32,
        A: *const f32,
        lda: i64,
        B: *const f32,
        ldb: i64,
        beta: *const f32,
        C: *mut f32,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dgemmt_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        transB: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const f64,
        A: *const f64,
        lda: i64,
        B: *const f64,
        ldb: i64,
        beta: *const f64,
        C: *mut f64,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgemmt_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        transB: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: i64,
        B: *const rocblas_float_complex,
        ldb: i64,
        beta: *const rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgemmt_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        transB: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: i64,
        B: *const rocblas_double_complex,
        ldb: i64,
        beta: *const rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sgemmt_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        transB: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f32,
        A: *const *const f32,
        lda: rocblas_int,
        B: *const *const f32,
        ldb: rocblas_int,
        beta: *const f32,
        C: *const *mut f32,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dgemmt_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        transB: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f64,
        A: *const *const f64,
        lda: rocblas_int,
        B: *const *const f64,
        ldb: rocblas_int,
        beta: *const f64,
        C: *const *mut f64,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgemmt_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        transB: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const *const rocblas_float_complex,
        lda: rocblas_int,
        B: *const *const rocblas_float_complex,
        ldb: rocblas_int,
        beta: *const rocblas_float_complex,
        C: *const *mut rocblas_float_complex,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgemmt_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        transB: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const *const rocblas_double_complex,
        lda: rocblas_int,
        B: *const *const rocblas_double_complex,
        ldb: rocblas_int,
        beta: *const rocblas_double_complex,
        C: *const *mut rocblas_double_complex,
        ldc: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sgemmt_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        transB: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const f32,
        A: *const *const f32,
        lda: i64,
        B: *const *const f32,
        ldb: i64,
        beta: *const f32,
        C: *const *mut f32,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dgemmt_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        transB: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const f64,
        A: *const *const f64,
        lda: i64,
        B: *const *const f64,
        ldb: i64,
        beta: *const f64,
        C: *const *mut f64,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgemmt_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        transB: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_float_complex,
        A: *const *const rocblas_float_complex,
        lda: i64,
        B: *const *const rocblas_float_complex,
        ldb: i64,
        beta: *const rocblas_float_complex,
        C: *const *mut rocblas_float_complex,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgemmt_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        transB: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_double_complex,
        A: *const *const rocblas_double_complex,
        lda: i64,
        B: *const *const rocblas_double_complex,
        ldb: i64,
        beta: *const rocblas_double_complex,
        C: *const *mut rocblas_double_complex,
        ldc: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sgemmt_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        transB: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f32,
        A: *const f32,
        lda: rocblas_int,
        stride_a: rocblas_stride,
        B: *const f32,
        ldb: rocblas_int,
        stride_b: rocblas_stride,
        beta: *const f32,
        C: *mut f32,
        ldc: rocblas_int,
        stride_c: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dgemmt_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        transB: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const f64,
        A: *const f64,
        lda: rocblas_int,
        stride_a: rocblas_stride,
        B: *const f64,
        ldb: rocblas_int,
        stride_b: rocblas_stride,
        beta: *const f64,
        C: *mut f64,
        ldc: rocblas_int,
        stride_c: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgemmt_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        transB: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: rocblas_int,
        stride_a: rocblas_stride,
        B: *const rocblas_float_complex,
        ldb: rocblas_int,
        stride_b: rocblas_stride,
        beta: *const rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
        stride_c: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgemmt_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        transB: rocblas_operation,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: rocblas_int,
        stride_a: rocblas_stride,
        B: *const rocblas_double_complex,
        ldb: rocblas_int,
        stride_b: rocblas_stride,
        beta: *const rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
        stride_c: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_sgemmt_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        transB: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const f32,
        A: *const f32,
        lda: i64,
        stride_a: rocblas_stride,
        B: *const f32,
        ldb: i64,
        stride_b: rocblas_stride,
        beta: *const f32,
        C: *mut f32,
        ldc: i64,
        stride_c: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dgemmt_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        transB: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const f64,
        A: *const f64,
        lda: i64,
        stride_a: rocblas_stride,
        B: *const f64,
        ldb: i64,
        stride_b: rocblas_stride,
        beta: *const f64,
        C: *mut f64,
        ldc: i64,
        stride_c: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_cgemmt_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        transB: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_float_complex,
        A: *const rocblas_float_complex,
        lda: i64,
        stride_a: rocblas_stride,
        B: *const rocblas_float_complex,
        ldb: i64,
        stride_b: rocblas_stride,
        beta: *const rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: i64,
        stride_c: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_zgemmt_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        transB: rocblas_operation,
        n: i64,
        k: i64,
        alpha: *const rocblas_double_complex,
        A: *const rocblas_double_complex,
        lda: i64,
        stride_a: rocblas_stride,
        B: *const rocblas_double_complex,
        ldb: i64,
        stride_b: rocblas_stride,
        beta: *const rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: i64,
        stride_c: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_geam_ex(
        handle: rocblas_handle,
        transA: rocblas_operation,
        transB: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        a_type: rocblas_datatype,
        lda: rocblas_int,
        B: *const ::std::os::raw::c_void,
        b_type: rocblas_datatype,
        ldb: rocblas_int,
        beta: *const ::std::os::raw::c_void,
        C: *const ::std::os::raw::c_void,
        c_type: rocblas_datatype,
        ldc: rocblas_int,
        D: *mut ::std::os::raw::c_void,
        d_type: rocblas_datatype,
        ldd: rocblas_int,
        compute_type: rocblas_datatype,
        geam_ex_op: rocblas_geam_ex_operation,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_trsm_ex(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: rocblas_int,
        B: *mut ::std::os::raw::c_void,
        ldb: rocblas_int,
        invA: *const ::std::os::raw::c_void,
        invA_size: rocblas_int,
        compute_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_trsm_batched_ex(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: rocblas_int,
        B: *mut ::std::os::raw::c_void,
        ldb: rocblas_int,
        batch_count: rocblas_int,
        invA: *const ::std::os::raw::c_void,
        invA_size: rocblas_int,
        compute_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_trsm_strided_batched_ex(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        transA: rocblas_operation,
        diag: rocblas_diagonal,
        m: rocblas_int,
        n: rocblas_int,
        alpha: *const ::std::os::raw::c_void,
        A: *const ::std::os::raw::c_void,
        lda: rocblas_int,
        stride_A: rocblas_stride,
        B: *mut ::std::os::raw::c_void,
        ldb: rocblas_int,
        stride_B: rocblas_stride,
        batch_count: rocblas_int,
        invA: *const ::std::os::raw::c_void,
        invA_size: rocblas_int,
        stride_invA: rocblas_stride,
        compute_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_axpy_ex(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const ::std::os::raw::c_void,
        alpha_type: rocblas_datatype,
        x: *const ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: rocblas_int,
        y: *mut ::std::os::raw::c_void,
        y_type: rocblas_datatype,
        incy: rocblas_int,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_axpy_ex_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const ::std::os::raw::c_void,
        alpha_type: rocblas_datatype,
        x: *const ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: i64,
        y: *mut ::std::os::raw::c_void,
        y_type: rocblas_datatype,
        incy: i64,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_axpy_batched_ex(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const ::std::os::raw::c_void,
        alpha_type: rocblas_datatype,
        x: *const ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: rocblas_int,
        y: *mut ::std::os::raw::c_void,
        y_type: rocblas_datatype,
        incy: rocblas_int,
        batch_count: rocblas_int,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_axpy_batched_ex_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const ::std::os::raw::c_void,
        alpha_type: rocblas_datatype,
        x: *const ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: i64,
        y: *mut ::std::os::raw::c_void,
        y_type: rocblas_datatype,
        incy: i64,
        batch_count: i64,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_axpy_strided_batched_ex(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const ::std::os::raw::c_void,
        alpha_type: rocblas_datatype,
        x: *const ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: rocblas_int,
        stridex: rocblas_stride,
        y: *mut ::std::os::raw::c_void,
        y_type: rocblas_datatype,
        incy: rocblas_int,
        stridey: rocblas_stride,
        batch_count: rocblas_int,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_axpy_strided_batched_ex_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const ::std::os::raw::c_void,
        alpha_type: rocblas_datatype,
        x: *const ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: i64,
        stridex: rocblas_stride,
        y: *mut ::std::os::raw::c_void,
        y_type: rocblas_datatype,
        incy: i64,
        stridey: rocblas_stride,
        batch_count: i64,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dot_ex(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: rocblas_int,
        y: *const ::std::os::raw::c_void,
        y_type: rocblas_datatype,
        incy: rocblas_int,
        result: *mut ::std::os::raw::c_void,
        result_type: rocblas_datatype,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dotc_ex(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: rocblas_int,
        y: *const ::std::os::raw::c_void,
        y_type: rocblas_datatype,
        incy: rocblas_int,
        result: *mut ::std::os::raw::c_void,
        result_type: rocblas_datatype,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dot_ex_64(
        handle: rocblas_handle,
        n: i64,
        x: *const ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: i64,
        y: *const ::std::os::raw::c_void,
        y_type: rocblas_datatype,
        incy: i64,
        result: *mut ::std::os::raw::c_void,
        result_type: rocblas_datatype,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dotc_ex_64(
        handle: rocblas_handle,
        n: i64,
        x: *const ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: i64,
        y: *const ::std::os::raw::c_void,
        y_type: rocblas_datatype,
        incy: i64,
        result: *mut ::std::os::raw::c_void,
        result_type: rocblas_datatype,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dot_batched_ex(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: rocblas_int,
        y: *const ::std::os::raw::c_void,
        y_type: rocblas_datatype,
        incy: rocblas_int,
        batch_count: rocblas_int,
        result: *mut ::std::os::raw::c_void,
        result_type: rocblas_datatype,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dotc_batched_ex(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: rocblas_int,
        y: *const ::std::os::raw::c_void,
        y_type: rocblas_datatype,
        incy: rocblas_int,
        batch_count: rocblas_int,
        result: *mut ::std::os::raw::c_void,
        result_type: rocblas_datatype,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dot_batched_ex_64(
        handle: rocblas_handle,
        n: i64,
        x: *const ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: i64,
        y: *const ::std::os::raw::c_void,
        y_type: rocblas_datatype,
        incy: i64,
        batch_count: i64,
        result: *mut ::std::os::raw::c_void,
        result_type: rocblas_datatype,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dotc_batched_ex_64(
        handle: rocblas_handle,
        n: i64,
        x: *const ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: i64,
        y: *const ::std::os::raw::c_void,
        y_type: rocblas_datatype,
        incy: i64,
        batch_count: i64,
        result: *mut ::std::os::raw::c_void,
        result_type: rocblas_datatype,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dot_strided_batched_ex(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        y: *const ::std::os::raw::c_void,
        y_type: rocblas_datatype,
        incy: rocblas_int,
        stride_y: rocblas_stride,
        batch_count: rocblas_int,
        result: *mut ::std::os::raw::c_void,
        result_type: rocblas_datatype,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dotc_strided_batched_ex(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        y: *const ::std::os::raw::c_void,
        y_type: rocblas_datatype,
        incy: rocblas_int,
        stride_y: rocblas_stride,
        batch_count: rocblas_int,
        result: *mut ::std::os::raw::c_void,
        result_type: rocblas_datatype,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dot_strided_batched_ex_64(
        handle: rocblas_handle,
        n: i64,
        x: *const ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: i64,
        stride_x: rocblas_stride,
        y: *const ::std::os::raw::c_void,
        y_type: rocblas_datatype,
        incy: i64,
        stride_y: rocblas_stride,
        batch_count: i64,
        result: *mut ::std::os::raw::c_void,
        result_type: rocblas_datatype,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_dotc_strided_batched_ex_64(
        handle: rocblas_handle,
        n: i64,
        x: *const ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: i64,
        stride_x: rocblas_stride,
        y: *const ::std::os::raw::c_void,
        y_type: rocblas_datatype,
        incy: i64,
        stride_y: rocblas_stride,
        batch_count: i64,
        result: *mut ::std::os::raw::c_void,
        result_type: rocblas_datatype,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_nrm2_ex(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: rocblas_int,
        results: *mut ::std::os::raw::c_void,
        result_type: rocblas_datatype,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_nrm2_ex_64(
        handle: rocblas_handle,
        n: i64,
        x: *const ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: i64,
        results: *mut ::std::os::raw::c_void,
        result_type: rocblas_datatype,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_nrm2_batched_ex(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: rocblas_int,
        batch_count: rocblas_int,
        results: *mut ::std::os::raw::c_void,
        result_type: rocblas_datatype,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_nrm2_batched_ex_64(
        handle: rocblas_handle,
        n: i64,
        x: *const ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: i64,
        batch_count: i64,
        results: *mut ::std::os::raw::c_void,
        result_type: rocblas_datatype,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_nrm2_strided_batched_ex(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *const ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        batch_count: rocblas_int,
        results: *mut ::std::os::raw::c_void,
        result_type: rocblas_datatype,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_nrm2_strided_batched_ex_64(
        handle: rocblas_handle,
        n: i64,
        x: *const ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: i64,
        stride_x: rocblas_stride,
        batch_count: i64,
        results: *mut ::std::os::raw::c_void,
        result_type: rocblas_datatype,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_rot_ex(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *mut ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: rocblas_int,
        y: *mut ::std::os::raw::c_void,
        y_type: rocblas_datatype,
        incy: rocblas_int,
        c: *const ::std::os::raw::c_void,
        s: *const ::std::os::raw::c_void,
        cs_type: rocblas_datatype,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_rot_ex_64(
        handle: rocblas_handle,
        n: i64,
        x: *mut ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: i64,
        y: *mut ::std::os::raw::c_void,
        y_type: rocblas_datatype,
        incy: i64,
        c: *const ::std::os::raw::c_void,
        s: *const ::std::os::raw::c_void,
        cs_type: rocblas_datatype,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_rot_batched_ex(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *mut ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: rocblas_int,
        y: *mut ::std::os::raw::c_void,
        y_type: rocblas_datatype,
        incy: rocblas_int,
        c: *const ::std::os::raw::c_void,
        s: *const ::std::os::raw::c_void,
        cs_type: rocblas_datatype,
        batch_count: rocblas_int,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_rot_batched_ex_64(
        handle: rocblas_handle,
        n: i64,
        x: *mut ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: i64,
        y: *mut ::std::os::raw::c_void,
        y_type: rocblas_datatype,
        incy: i64,
        c: *const ::std::os::raw::c_void,
        s: *const ::std::os::raw::c_void,
        cs_type: rocblas_datatype,
        batch_count: i64,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_rot_strided_batched_ex(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *mut ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: rocblas_int,
        stride_x: rocblas_stride,
        y: *mut ::std::os::raw::c_void,
        y_type: rocblas_datatype,
        incy: rocblas_int,
        stride_y: rocblas_stride,
        c: *const ::std::os::raw::c_void,
        s: *const ::std::os::raw::c_void,
        cs_type: rocblas_datatype,
        batch_count: rocblas_int,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_rot_strided_batched_ex_64(
        handle: rocblas_handle,
        n: i64,
        x: *mut ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: i64,
        stride_x: rocblas_stride,
        y: *mut ::std::os::raw::c_void,
        y_type: rocblas_datatype,
        incy: i64,
        stride_y: rocblas_stride,
        c: *const ::std::os::raw::c_void,
        s: *const ::std::os::raw::c_void,
        cs_type: rocblas_datatype,
        batch_count: i64,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_scal_ex(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const ::std::os::raw::c_void,
        alpha_type: rocblas_datatype,
        x: *mut ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: rocblas_int,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_scal_ex_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const ::std::os::raw::c_void,
        alpha_type: rocblas_datatype,
        x: *mut ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: i64,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_scal_batched_ex(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const ::std::os::raw::c_void,
        alpha_type: rocblas_datatype,
        x: *mut ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: rocblas_int,
        batch_count: rocblas_int,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_scal_batched_ex_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const ::std::os::raw::c_void,
        alpha_type: rocblas_datatype,
        x: *mut ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: i64,
        batch_count: i64,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_scal_strided_batched_ex(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *const ::std::os::raw::c_void,
        alpha_type: rocblas_datatype,
        x: *mut ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: rocblas_int,
        stridex: rocblas_stride,
        batch_count: rocblas_int,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_scal_strided_batched_ex_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *const ::std::os::raw::c_void,
        alpha_type: rocblas_datatype,
        x: *mut ::std::os::raw::c_void,
        x_type: rocblas_datatype,
        incx: i64,
        stridex: rocblas_stride,
        batch_count: i64,
        execution_type: rocblas_datatype,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_status_to_string(status: rocblas_status) -> *const ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn rocblas_initialize();
}
unsafe extern "C" {
    pub fn rocblas_get_version_string(
        buf: *mut ::std::os::raw::c_char,
        len: usize,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_get_version_string_size(len: *mut usize) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_start_device_memory_size_query(handle: rocblas_handle) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_stop_device_memory_size_query(
        handle: rocblas_handle,
        size: *mut usize,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_is_device_memory_size_query(handle: rocblas_handle) -> bool;
}
unsafe extern "C" {
    pub fn rocblas_set_optimal_device_memory_size_impl(
        handle: rocblas_handle,
        count: usize,
        ...
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_device_malloc_alloc(
        handle: rocblas_handle,
        res: *mut *mut rocblas_device_malloc_base,
        count: usize,
        ...
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_device_malloc_success(ptr: *mut rocblas_device_malloc_base) -> bool;
}
unsafe extern "C" {
    pub fn rocblas_device_malloc_ptr(
        ptr: *mut rocblas_device_malloc_base,
        res: *mut *mut ::std::os::raw::c_void,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_device_malloc_get(
        ptr: *mut rocblas_device_malloc_base,
        index: usize,
        res: *mut *mut ::std::os::raw::c_void,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_device_malloc_free(ptr: *mut rocblas_device_malloc_base) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_device_malloc_set_default_memory_size(size: usize);
}
unsafe extern "C" {
    pub fn rocblas_get_device_memory_size(
        handle: rocblas_handle,
        size: *mut usize,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_set_device_memory_size(handle: rocblas_handle, size: usize) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_set_workspace(
        handle: rocblas_handle,
        addr: *mut ::std::os::raw::c_void,
        size: usize,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocblas_is_managing_device_memory(handle: rocblas_handle) -> bool;
}
unsafe extern "C" {
    pub fn rocblas_is_user_managing_device_memory(handle: rocblas_handle) -> bool;
}
unsafe extern "C" {
    pub fn rocblas_abort() -> !;
}
