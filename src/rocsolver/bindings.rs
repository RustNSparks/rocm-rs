/* automatically generated by rust-bindgen 0.71.1 */

pub type rocblas_layer_mode_flags = u32;
pub const rocblas_direct__rocblas_forward_direction: rocblas_direct_ = 171;
pub const rocblas_direct__rocblas_backward_direction: rocblas_direct_ = 172;
pub type rocblas_direct_ = ::std::os::raw::c_uint;
pub use self::rocblas_direct_ as rocblas_direct;
pub const rocblas_storev__rocblas_column_wise: rocblas_storev_ = 181;
pub const rocblas_storev__rocblas_row_wise: rocblas_storev_ = 182;
pub type rocblas_storev_ = ::std::os::raw::c_uint;
pub use self::rocblas_storev_ as rocblas_storev;
pub const rocblas_svect__rocblas_svect_all: rocblas_svect_ = 191;
pub const rocblas_svect__rocblas_svect_singular: rocblas_svect_ = 192;
pub const rocblas_svect__rocblas_svect_overwrite: rocblas_svect_ = 193;
pub const rocblas_svect__rocblas_svect_none: rocblas_svect_ = 194;
pub type rocblas_svect_ = ::std::os::raw::c_uint;
pub use self::rocblas_svect_ as rocblas_svect;
pub const rocblas_workmode__rocblas_outofplace: rocblas_workmode_ = 201;
pub const rocblas_workmode__rocblas_inplace: rocblas_workmode_ = 202;
pub type rocblas_workmode_ = ::std::os::raw::c_uint;
pub use self::rocblas_workmode_ as rocblas_workmode;
pub const rocblas_evect__rocblas_evect_original: rocblas_evect_ = 211;
pub const rocblas_evect__rocblas_evect_tridiagonal: rocblas_evect_ = 212;
pub const rocblas_evect__rocblas_evect_none: rocblas_evect_ = 213;
pub type rocblas_evect_ = ::std::os::raw::c_uint;
pub use self::rocblas_evect_ as rocblas_evect;
pub const rocblas_eform__rocblas_eform_ax: rocblas_eform_ = 221;
pub const rocblas_eform__rocblas_eform_abx: rocblas_eform_ = 222;
pub const rocblas_eform__rocblas_eform_bax: rocblas_eform_ = 223;
pub type rocblas_eform_ = ::std::os::raw::c_uint;
pub use self::rocblas_eform_ as rocblas_eform;
pub const rocblas_erange__rocblas_erange_all: rocblas_erange_ = 231;
pub const rocblas_erange__rocblas_erange_value: rocblas_erange_ = 232;
pub const rocblas_erange__rocblas_erange_index: rocblas_erange_ = 233;
pub type rocblas_erange_ = ::std::os::raw::c_uint;
pub use self::rocblas_erange_ as rocblas_erange;
pub const rocblas_eorder__rocblas_eorder_blocks: rocblas_eorder_ = 241;
pub const rocblas_eorder__rocblas_eorder_entire: rocblas_eorder_ = 242;
pub type rocblas_eorder_ = ::std::os::raw::c_uint;
pub use self::rocblas_eorder_ as rocblas_eorder;
pub const rocblas_esort__rocblas_esort_none: rocblas_esort_ = 251;
pub const rocblas_esort__rocblas_esort_ascending: rocblas_esort_ = 252;
pub type rocblas_esort_ = ::std::os::raw::c_uint;
pub use self::rocblas_esort_ as rocblas_esort;
pub const rocblas_srange__rocblas_srange_all: rocblas_srange_ = 261;
pub const rocblas_srange__rocblas_srange_value: rocblas_srange_ = 262;
pub const rocblas_srange__rocblas_srange_index: rocblas_srange_ = 263;
pub type rocblas_srange_ = ::std::os::raw::c_uint;
pub use self::rocblas_srange_ as rocblas_srange;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rocsolver_rfinfo_ {
    _unused: [u8; 0],
}
pub type rocsolver_rfinfo = *mut rocsolver_rfinfo_;
pub const rocsolver_rfinfo_mode__rocsolver_rfinfo_mode_lu: rocsolver_rfinfo_mode_ = 271;
pub const rocsolver_rfinfo_mode__rocsolver_rfinfo_mode_cholesky: rocsolver_rfinfo_mode_ = 272;
pub type rocsolver_rfinfo_mode_ = ::std::os::raw::c_uint;
pub use self::rocsolver_rfinfo_mode_ as rocsolver_rfinfo_mode;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _rocblas_handle {
    _unused: [u8; 0],
}
pub type rocblas_handle = *mut _rocblas_handle;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct ihipStream_t {
    _unused: [u8; 0],
}
pub type hipStream_t = *mut ihipStream_t;
pub type rocblas_int = i32;
pub type rocblas_stride = i64;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rocblas_half {
    pub data: u16,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rocblas_float_complex {
    pub x: f32,
    pub y: f32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct rocblas_double_complex {
    pub x: f64,
    pub y: f64,
}
pub const rocblas_operation__rocblas_operation_none: rocblas_operation_ = 111;
pub const rocblas_operation__rocblas_operation_transpose: rocblas_operation_ = 112;
pub const rocblas_operation__rocblas_operation_conjugate_transpose: rocblas_operation_ = 113;
pub type rocblas_operation_ = ::std::os::raw::c_uint;
pub use self::rocblas_operation_ as rocblas_operation;
pub const rocblas_fill__rocblas_fill_upper: rocblas_fill_ = 121;
pub const rocblas_fill__rocblas_fill_lower: rocblas_fill_ = 122;
pub const rocblas_fill__rocblas_fill_full: rocblas_fill_ = 123;
pub type rocblas_fill_ = ::std::os::raw::c_uint;
pub use self::rocblas_fill_ as rocblas_fill;
pub const rocblas_diagonal__rocblas_diagonal_non_unit: rocblas_diagonal_ = 131;
pub const rocblas_diagonal__rocblas_diagonal_unit: rocblas_diagonal_ = 132;
pub type rocblas_diagonal_ = ::std::os::raw::c_uint;
pub use self::rocblas_diagonal_ as rocblas_diagonal;
pub const rocblas_side__rocblas_side_left: rocblas_side_ = 141;
pub const rocblas_side__rocblas_side_right: rocblas_side_ = 142;
pub const rocblas_side__rocblas_side_both: rocblas_side_ = 143;
pub type rocblas_side_ = ::std::os::raw::c_uint;
pub use self::rocblas_side_ as rocblas_side;
pub const rocblas_status__rocblas_status_success: rocblas_status_ = 0;
pub const rocblas_status__rocblas_status_invalid_handle: rocblas_status_ = 1;
pub const rocblas_status__rocblas_status_not_implemented: rocblas_status_ = 2;
pub const rocblas_status__rocblas_status_invalid_pointer: rocblas_status_ = 3;
pub const rocblas_status__rocblas_status_invalid_size: rocblas_status_ = 4;
pub const rocblas_status__rocblas_status_memory_error: rocblas_status_ = 5;
pub const rocblas_status__rocblas_status_internal_error: rocblas_status_ = 6;
pub const rocblas_status__rocblas_status_perf_degraded: rocblas_status_ = 7;
pub const rocblas_status__rocblas_status_size_query_mismatch: rocblas_status_ = 8;
pub const rocblas_status__rocblas_status_size_increased: rocblas_status_ = 9;
pub const rocblas_status__rocblas_status_size_unchanged: rocblas_status_ = 10;
pub const rocblas_status__rocblas_status_invalid_value: rocblas_status_ = 11;
pub const rocblas_status__rocblas_status_continue: rocblas_status_ = 12;
pub const rocblas_status__rocblas_status_check_numerics_fail: rocblas_status_ = 13;
pub const rocblas_status__rocblas_status_excluded_from_build: rocblas_status_ = 14;
pub const rocblas_status__rocblas_status_arch_mismatch: rocblas_status_ = 15;
pub type rocblas_status_ = ::std::os::raw::c_uint;
pub use self::rocblas_status_ as rocblas_status;
pub const rocblas_layer_mode__rocblas_layer_mode_none: rocblas_layer_mode_ = 0;
pub const rocblas_layer_mode__rocblas_layer_mode_log_trace: rocblas_layer_mode_ = 1;
pub const rocblas_layer_mode__rocblas_layer_mode_log_bench: rocblas_layer_mode_ = 2;
pub const rocblas_layer_mode__rocblas_layer_mode_log_profile: rocblas_layer_mode_ = 4;
pub type rocblas_layer_mode_ = ::std::os::raw::c_uint;
pub use self::rocblas_layer_mode_ as rocblas_layer_mode;
pub type rocsolver_int = rocblas_int;
pub type rocsolver_stride = rocblas_stride;
pub type rocsolver_float_complex = rocblas_float_complex;
pub type rocsolver_double_complex = rocblas_double_complex;
pub type rocsolver_half = rocblas_half;
pub type rocsolver_handle = rocblas_handle;
pub use self::rocblas_diagonal as rocsolver_diagonal;
pub use self::rocblas_direct as rocsolver_direction;
pub use self::rocblas_fill as rocsolver_fill;
pub use self::rocblas_layer_mode as rocsolver_layer_mode;
pub use self::rocblas_operation as rocsolver_operation;
pub use self::rocblas_side as rocsolver_side;
pub use self::rocblas_status as rocsolver_status;
pub use self::rocblas_storev as rocsolver_storev;
unsafe extern "C" {
    pub fn rocsolver_create_handle(handle: *mut rocsolver_handle) -> rocsolver_status;
}
unsafe extern "C" {
    pub fn rocsolver_destroy_handle(handle: rocsolver_handle) -> rocsolver_status;
}
unsafe extern "C" {
    pub fn rocsolver_set_stream(handle: rocsolver_handle, stream: hipStream_t) -> rocsolver_status;
}
unsafe extern "C" {
    pub fn rocsolver_get_stream(
        handle: rocsolver_handle,
        stream: *mut hipStream_t,
    ) -> rocsolver_status;
}
unsafe extern "C" {
    pub fn rocsolver_set_vector(
        n: rocsolver_int,
        elem_size: rocsolver_int,
        x: *const ::std::os::raw::c_void,
        incx: rocsolver_int,
        y: *mut ::std::os::raw::c_void,
        incy: rocsolver_int,
    ) -> rocsolver_status;
}
unsafe extern "C" {
    pub fn rocsolver_get_vector(
        n: rocsolver_int,
        elem_size: rocsolver_int,
        x: *const ::std::os::raw::c_void,
        incx: rocsolver_int,
        y: *mut ::std::os::raw::c_void,
        incy: rocsolver_int,
    ) -> rocsolver_status;
}
unsafe extern "C" {
    pub fn rocsolver_set_matrix(
        rows: rocsolver_int,
        cols: rocsolver_int,
        elem_size: rocsolver_int,
        a: *const ::std::os::raw::c_void,
        lda: rocsolver_int,
        b: *mut ::std::os::raw::c_void,
        ldb: rocsolver_int,
    ) -> rocsolver_status;
}
unsafe extern "C" {
    pub fn rocsolver_get_matrix(
        rows: rocsolver_int,
        cols: rocsolver_int,
        elem_size: rocsolver_int,
        a: *const ::std::os::raw::c_void,
        lda: rocsolver_int,
        b: *mut ::std::os::raw::c_void,
        ldb: rocsolver_int,
    ) -> rocsolver_status;
}
unsafe extern "C" {
    pub fn rocsolver_get_version_string(
        buf: *mut ::std::os::raw::c_char,
        len: usize,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_get_version_string_size(len: *mut usize) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_log_begin() -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_log_end() -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_log_set_layer_mode(layer_mode: rocblas_layer_mode_flags) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_log_set_max_levels(max_levels: rocblas_int) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_log_restore_defaults() -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_log_write_profile() -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_log_flush_profile() -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_clacgv(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *mut rocblas_float_complex,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zlacgv(
        handle: rocblas_handle,
        n: rocblas_int,
        x: *mut rocblas_double_complex,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_clacgv_64(
        handle: rocblas_handle,
        n: i64,
        x: *mut rocblas_float_complex,
        incx: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zlacgv_64(
        handle: rocblas_handle,
        n: i64,
        x: *mut rocblas_double_complex,
        incx: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_slaswp(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        k1: rocblas_int,
        k2: rocblas_int,
        ipiv: *const rocblas_int,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dlaswp(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        k1: rocblas_int,
        k2: rocblas_int,
        ipiv: *const rocblas_int,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_claswp(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        k1: rocblas_int,
        k2: rocblas_int,
        ipiv: *const rocblas_int,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zlaswp(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        k1: rocblas_int,
        k2: rocblas_int,
        ipiv: *const rocblas_int,
        incx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_slarfg(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *mut f32,
        x: *mut f32,
        incx: rocblas_int,
        tau: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dlarfg(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *mut f64,
        x: *mut f64,
        incx: rocblas_int,
        tau: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_clarfg(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *mut rocblas_float_complex,
        x: *mut rocblas_float_complex,
        incx: rocblas_int,
        tau: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zlarfg(
        handle: rocblas_handle,
        n: rocblas_int,
        alpha: *mut rocblas_double_complex,
        x: *mut rocblas_double_complex,
        incx: rocblas_int,
        tau: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_slarfg_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *mut f32,
        x: *mut f32,
        incx: i64,
        tau: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dlarfg_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *mut f64,
        x: *mut f64,
        incx: i64,
        tau: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_clarfg_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *mut rocblas_float_complex,
        x: *mut rocblas_float_complex,
        incx: i64,
        tau: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zlarfg_64(
        handle: rocblas_handle,
        n: i64,
        alpha: *mut rocblas_double_complex,
        x: *mut rocblas_double_complex,
        incx: i64,
        tau: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_slarft(
        handle: rocblas_handle,
        direct: rocblas_direct,
        storev: rocblas_storev,
        n: rocblas_int,
        k: rocblas_int,
        V: *mut f32,
        ldv: rocblas_int,
        tau: *mut f32,
        T: *mut f32,
        ldt: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dlarft(
        handle: rocblas_handle,
        direct: rocblas_direct,
        storev: rocblas_storev,
        n: rocblas_int,
        k: rocblas_int,
        V: *mut f64,
        ldv: rocblas_int,
        tau: *mut f64,
        T: *mut f64,
        ldt: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_clarft(
        handle: rocblas_handle,
        direct: rocblas_direct,
        storev: rocblas_storev,
        n: rocblas_int,
        k: rocblas_int,
        V: *mut rocblas_float_complex,
        ldv: rocblas_int,
        tau: *mut rocblas_float_complex,
        T: *mut rocblas_float_complex,
        ldt: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zlarft(
        handle: rocblas_handle,
        direct: rocblas_direct,
        storev: rocblas_storev,
        n: rocblas_int,
        k: rocblas_int,
        V: *mut rocblas_double_complex,
        ldv: rocblas_int,
        tau: *mut rocblas_double_complex,
        T: *mut rocblas_double_complex,
        ldt: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_slarf(
        handle: rocblas_handle,
        side: rocblas_side,
        m: rocblas_int,
        n: rocblas_int,
        x: *mut f32,
        incx: rocblas_int,
        alpha: *const f32,
        A: *mut f32,
        lda: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dlarf(
        handle: rocblas_handle,
        side: rocblas_side,
        m: rocblas_int,
        n: rocblas_int,
        x: *mut f64,
        incx: rocblas_int,
        alpha: *const f64,
        A: *mut f64,
        lda: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_clarf(
        handle: rocblas_handle,
        side: rocblas_side,
        m: rocblas_int,
        n: rocblas_int,
        x: *mut rocblas_float_complex,
        incx: rocblas_int,
        alpha: *const rocblas_float_complex,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zlarf(
        handle: rocblas_handle,
        side: rocblas_side,
        m: rocblas_int,
        n: rocblas_int,
        x: *mut rocblas_double_complex,
        incx: rocblas_int,
        alpha: *const rocblas_double_complex,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_slarf_64(
        handle: rocblas_handle,
        side: rocblas_side,
        m: i64,
        n: i64,
        x: *mut f32,
        incx: i64,
        alpha: *const f32,
        A: *mut f32,
        lda: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dlarf_64(
        handle: rocblas_handle,
        side: rocblas_side,
        m: i64,
        n: i64,
        x: *mut f64,
        incx: i64,
        alpha: *const f64,
        A: *mut f64,
        lda: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_clarf_64(
        handle: rocblas_handle,
        side: rocblas_side,
        m: i64,
        n: i64,
        x: *mut rocblas_float_complex,
        incx: i64,
        alpha: *const rocblas_float_complex,
        A: *mut rocblas_float_complex,
        lda: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zlarf_64(
        handle: rocblas_handle,
        side: rocblas_side,
        m: i64,
        n: i64,
        x: *mut rocblas_double_complex,
        incx: i64,
        alpha: *const rocblas_double_complex,
        A: *mut rocblas_double_complex,
        lda: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_slarfb(
        handle: rocblas_handle,
        side: rocblas_side,
        trans: rocblas_operation,
        direct: rocblas_direct,
        storev: rocblas_storev,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        V: *mut f32,
        ldv: rocblas_int,
        T: *mut f32,
        ldt: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dlarfb(
        handle: rocblas_handle,
        side: rocblas_side,
        trans: rocblas_operation,
        direct: rocblas_direct,
        storev: rocblas_storev,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        V: *mut f64,
        ldv: rocblas_int,
        T: *mut f64,
        ldt: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_clarfb(
        handle: rocblas_handle,
        side: rocblas_side,
        trans: rocblas_operation,
        direct: rocblas_direct,
        storev: rocblas_storev,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        V: *mut rocblas_float_complex,
        ldv: rocblas_int,
        T: *mut rocblas_float_complex,
        ldt: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zlarfb(
        handle: rocblas_handle,
        side: rocblas_side,
        trans: rocblas_operation,
        direct: rocblas_direct,
        storev: rocblas_storev,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        V: *mut rocblas_double_complex,
        ldv: rocblas_int,
        T: *mut rocblas_double_complex,
        ldt: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_slabrd(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        D: *mut f32,
        E: *mut f32,
        tauq: *mut f32,
        taup: *mut f32,
        X: *mut f32,
        ldx: rocblas_int,
        Y: *mut f32,
        ldy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dlabrd(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        D: *mut f64,
        E: *mut f64,
        tauq: *mut f64,
        taup: *mut f64,
        X: *mut f64,
        ldx: rocblas_int,
        Y: *mut f64,
        ldy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_clabrd(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        D: *mut f32,
        E: *mut f32,
        tauq: *mut rocblas_float_complex,
        taup: *mut rocblas_float_complex,
        X: *mut rocblas_float_complex,
        ldx: rocblas_int,
        Y: *mut rocblas_float_complex,
        ldy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zlabrd(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        D: *mut f64,
        E: *mut f64,
        tauq: *mut rocblas_double_complex,
        taup: *mut rocblas_double_complex,
        X: *mut rocblas_double_complex,
        ldx: rocblas_int,
        Y: *mut rocblas_double_complex,
        ldy: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_slatrd(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        E: *mut f32,
        tau: *mut f32,
        W: *mut f32,
        ldw: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dlatrd(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        E: *mut f64,
        tau: *mut f64,
        W: *mut f64,
        ldw: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_clatrd(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        E: *mut f32,
        tau: *mut rocblas_float_complex,
        W: *mut rocblas_float_complex,
        ldw: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zlatrd(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        E: *mut f64,
        tau: *mut rocblas_double_complex,
        W: *mut rocblas_double_complex,
        ldw: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_slasyf(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        nb: rocblas_int,
        kb: *mut rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dlasyf(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        nb: rocblas_int,
        kb: *mut rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_clasyf(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        nb: rocblas_int,
        kb: *mut rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zlasyf(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        nb: rocblas_int,
        kb: *mut rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_slauum(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dlauum(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_clauum(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zlauum(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sorg2r(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        ipiv: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dorg2r(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        ipiv: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cung2r(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zung2r(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sorgqr(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        ipiv: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dorgqr(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        ipiv: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cungqr(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zungqr(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sorgl2(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        ipiv: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dorgl2(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        ipiv: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cungl2(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zungl2(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sorglq(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        ipiv: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dorglq(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        ipiv: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cunglq(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zunglq(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sorg2l(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        ipiv: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dorg2l(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        ipiv: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cung2l(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zung2l(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sorgql(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        ipiv: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dorgql(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        ipiv: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cungql(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zungql(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sorgbr(
        handle: rocblas_handle,
        storev: rocblas_storev,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        ipiv: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dorgbr(
        handle: rocblas_handle,
        storev: rocblas_storev,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        ipiv: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cungbr(
        handle: rocblas_handle,
        storev: rocblas_storev,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zungbr(
        handle: rocblas_handle,
        storev: rocblas_storev,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sorgtr(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        ipiv: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dorgtr(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        ipiv: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cungtr(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zungtr(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sorm2r(
        handle: rocblas_handle,
        side: rocblas_side,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        ipiv: *mut f32,
        C: *mut f32,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dorm2r(
        handle: rocblas_handle,
        side: rocblas_side,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        ipiv: *mut f64,
        C: *mut f64,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cunm2r(
        handle: rocblas_handle,
        side: rocblas_side,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zunm2r(
        handle: rocblas_handle,
        side: rocblas_side,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sormqr(
        handle: rocblas_handle,
        side: rocblas_side,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        ipiv: *mut f32,
        C: *mut f32,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dormqr(
        handle: rocblas_handle,
        side: rocblas_side,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        ipiv: *mut f64,
        C: *mut f64,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cunmqr(
        handle: rocblas_handle,
        side: rocblas_side,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zunmqr(
        handle: rocblas_handle,
        side: rocblas_side,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sorml2(
        handle: rocblas_handle,
        side: rocblas_side,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        ipiv: *mut f32,
        C: *mut f32,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dorml2(
        handle: rocblas_handle,
        side: rocblas_side,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        ipiv: *mut f64,
        C: *mut f64,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cunml2(
        handle: rocblas_handle,
        side: rocblas_side,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zunml2(
        handle: rocblas_handle,
        side: rocblas_side,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sormlq(
        handle: rocblas_handle,
        side: rocblas_side,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        ipiv: *mut f32,
        C: *mut f32,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dormlq(
        handle: rocblas_handle,
        side: rocblas_side,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        ipiv: *mut f64,
        C: *mut f64,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cunmlq(
        handle: rocblas_handle,
        side: rocblas_side,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zunmlq(
        handle: rocblas_handle,
        side: rocblas_side,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sorm2l(
        handle: rocblas_handle,
        side: rocblas_side,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        ipiv: *mut f32,
        C: *mut f32,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dorm2l(
        handle: rocblas_handle,
        side: rocblas_side,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        ipiv: *mut f64,
        C: *mut f64,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cunm2l(
        handle: rocblas_handle,
        side: rocblas_side,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zunm2l(
        handle: rocblas_handle,
        side: rocblas_side,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sormql(
        handle: rocblas_handle,
        side: rocblas_side,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        ipiv: *mut f32,
        C: *mut f32,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dormql(
        handle: rocblas_handle,
        side: rocblas_side,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        ipiv: *mut f64,
        C: *mut f64,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cunmql(
        handle: rocblas_handle,
        side: rocblas_side,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zunmql(
        handle: rocblas_handle,
        side: rocblas_side,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sormbr(
        handle: rocblas_handle,
        storev: rocblas_storev,
        side: rocblas_side,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        ipiv: *mut f32,
        C: *mut f32,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dormbr(
        handle: rocblas_handle,
        storev: rocblas_storev,
        side: rocblas_side,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        ipiv: *mut f64,
        C: *mut f64,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cunmbr(
        handle: rocblas_handle,
        storev: rocblas_storev,
        side: rocblas_side,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zunmbr(
        handle: rocblas_handle,
        storev: rocblas_storev,
        side: rocblas_side,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        k: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sormtr(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        ipiv: *mut f32,
        C: *mut f32,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dormtr(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        ipiv: *mut f64,
        C: *mut f64,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cunmtr(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_float_complex,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zunmtr(
        handle: rocblas_handle,
        side: rocblas_side,
        uplo: rocblas_fill,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_double_complex,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sbdsqr(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        nv: rocblas_int,
        nu: rocblas_int,
        nc: rocblas_int,
        D: *mut f32,
        E: *mut f32,
        V: *mut f32,
        ldv: rocblas_int,
        U: *mut f32,
        ldu: rocblas_int,
        C: *mut f32,
        ldc: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dbdsqr(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        nv: rocblas_int,
        nu: rocblas_int,
        nc: rocblas_int,
        D: *mut f64,
        E: *mut f64,
        V: *mut f64,
        ldv: rocblas_int,
        U: *mut f64,
        ldu: rocblas_int,
        C: *mut f64,
        ldc: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cbdsqr(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        nv: rocblas_int,
        nu: rocblas_int,
        nc: rocblas_int,
        D: *mut f32,
        E: *mut f32,
        V: *mut rocblas_float_complex,
        ldv: rocblas_int,
        U: *mut rocblas_float_complex,
        ldu: rocblas_int,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zbdsqr(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        nv: rocblas_int,
        nu: rocblas_int,
        nc: rocblas_int,
        D: *mut f64,
        E: *mut f64,
        V: *mut rocblas_double_complex,
        ldv: rocblas_int,
        U: *mut rocblas_double_complex,
        ldu: rocblas_int,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssterf(
        handle: rocblas_handle,
        n: rocblas_int,
        D: *mut f32,
        E: *mut f32,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsterf(
        handle: rocblas_handle,
        n: rocblas_int,
        D: *mut f64,
        E: *mut f64,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssteqr(
        handle: rocblas_handle,
        evect: rocblas_evect,
        n: rocblas_int,
        D: *mut f32,
        E: *mut f32,
        C: *mut f32,
        ldc: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsteqr(
        handle: rocblas_handle,
        evect: rocblas_evect,
        n: rocblas_int,
        D: *mut f64,
        E: *mut f64,
        C: *mut f64,
        ldc: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_csteqr(
        handle: rocblas_handle,
        evect: rocblas_evect,
        n: rocblas_int,
        D: *mut f32,
        E: *mut f32,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zsteqr(
        handle: rocblas_handle,
        evect: rocblas_evect,
        n: rocblas_int,
        D: *mut f64,
        E: *mut f64,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sstedc(
        handle: rocblas_handle,
        evect: rocblas_evect,
        n: rocblas_int,
        D: *mut f32,
        E: *mut f32,
        C: *mut f32,
        ldc: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dstedc(
        handle: rocblas_handle,
        evect: rocblas_evect,
        n: rocblas_int,
        D: *mut f64,
        E: *mut f64,
        C: *mut f64,
        ldc: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cstedc(
        handle: rocblas_handle,
        evect: rocblas_evect,
        n: rocblas_int,
        D: *mut f32,
        E: *mut f32,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zstedc(
        handle: rocblas_handle,
        evect: rocblas_evect,
        n: rocblas_int,
        D: *mut f64,
        E: *mut f64,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sstebz(
        handle: rocblas_handle,
        erange: rocblas_erange,
        eorder: rocblas_eorder,
        n: rocblas_int,
        vl: f32,
        vu: f32,
        il: rocblas_int,
        iu: rocblas_int,
        abstol: f32,
        D: *mut f32,
        E: *mut f32,
        nev: *mut rocblas_int,
        nsplit: *mut rocblas_int,
        W: *mut f32,
        iblock: *mut rocblas_int,
        isplit: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dstebz(
        handle: rocblas_handle,
        erange: rocblas_erange,
        eorder: rocblas_eorder,
        n: rocblas_int,
        vl: f64,
        vu: f64,
        il: rocblas_int,
        iu: rocblas_int,
        abstol: f64,
        D: *mut f64,
        E: *mut f64,
        nev: *mut rocblas_int,
        nsplit: *mut rocblas_int,
        W: *mut f64,
        iblock: *mut rocblas_int,
        isplit: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sstein(
        handle: rocblas_handle,
        n: rocblas_int,
        D: *mut f32,
        E: *mut f32,
        nev: *mut rocblas_int,
        W: *mut f32,
        iblock: *mut rocblas_int,
        isplit: *mut rocblas_int,
        Z: *mut f32,
        ldz: rocblas_int,
        ifail: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dstein(
        handle: rocblas_handle,
        n: rocblas_int,
        D: *mut f64,
        E: *mut f64,
        nev: *mut rocblas_int,
        W: *mut f64,
        iblock: *mut rocblas_int,
        isplit: *mut rocblas_int,
        Z: *mut f64,
        ldz: rocblas_int,
        ifail: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cstein(
        handle: rocblas_handle,
        n: rocblas_int,
        D: *mut f32,
        E: *mut f32,
        nev: *mut rocblas_int,
        W: *mut f32,
        iblock: *mut rocblas_int,
        isplit: *mut rocblas_int,
        Z: *mut rocblas_float_complex,
        ldz: rocblas_int,
        ifail: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zstein(
        handle: rocblas_handle,
        n: rocblas_int,
        D: *mut f64,
        E: *mut f64,
        nev: *mut rocblas_int,
        W: *mut f64,
        iblock: *mut rocblas_int,
        isplit: *mut rocblas_int,
        Z: *mut rocblas_double_complex,
        ldz: rocblas_int,
        ifail: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sbdsvdx(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        svect: rocblas_svect,
        srange: rocblas_srange,
        n: rocblas_int,
        D: *mut f32,
        E: *mut f32,
        vl: f32,
        vu: f32,
        il: rocblas_int,
        iu: rocblas_int,
        nsv: *mut rocblas_int,
        S: *mut f32,
        Z: *mut f32,
        ldz: rocblas_int,
        ifail: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dbdsvdx(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        svect: rocblas_svect,
        srange: rocblas_srange,
        n: rocblas_int,
        D: *mut f64,
        E: *mut f64,
        vl: f64,
        vu: f64,
        il: rocblas_int,
        iu: rocblas_int,
        nsv: *mut rocblas_int,
        S: *mut f64,
        Z: *mut f64,
        ldz: rocblas_int,
        ifail: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetf2_npvt(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetf2_npvt(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetf2_npvt(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetf2_npvt(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetf2_npvt_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut f32,
        lda: i64,
        info: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetf2_npvt_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut f64,
        lda: i64,
        info: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetf2_npvt_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut rocblas_float_complex,
        lda: i64,
        info: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetf2_npvt_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut rocblas_double_complex,
        lda: i64,
        info: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetf2_npvt_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetf2_npvt_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetf2_npvt_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetf2_npvt_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetf2_npvt_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *const *mut f32,
        lda: i64,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetf2_npvt_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *const *mut f64,
        lda: i64,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetf2_npvt_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *const *mut rocblas_float_complex,
        lda: i64,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetf2_npvt_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *const *mut rocblas_double_complex,
        lda: i64,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetf2_npvt_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetf2_npvt_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetf2_npvt_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetf2_npvt_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetf2_npvt_strided_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut f32,
        lda: i64,
        strideA: rocblas_stride,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetf2_npvt_strided_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut f64,
        lda: i64,
        strideA: rocblas_stride,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetf2_npvt_strided_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut rocblas_float_complex,
        lda: i64,
        strideA: rocblas_stride,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetf2_npvt_strided_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut rocblas_double_complex,
        lda: i64,
        strideA: rocblas_stride,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetrf_npvt(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetrf_npvt(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetrf_npvt(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetrf_npvt(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetrf_npvt_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut f32,
        lda: i64,
        info: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetrf_npvt_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut f64,
        lda: i64,
        info: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetrf_npvt_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut rocblas_float_complex,
        lda: i64,
        info: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetrf_npvt_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut rocblas_double_complex,
        lda: i64,
        info: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetrf_npvt_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetrf_npvt_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetrf_npvt_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetrf_npvt_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetrf_npvt_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *const *mut f32,
        lda: i64,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetrf_npvt_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *const *mut f64,
        lda: i64,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetrf_npvt_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *const *mut rocblas_float_complex,
        lda: i64,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetrf_npvt_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *const *mut rocblas_double_complex,
        lda: i64,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetrf_npvt_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetrf_npvt_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetrf_npvt_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetrf_npvt_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetrf_npvt_strided_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut f32,
        lda: i64,
        strideA: rocblas_stride,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetrf_npvt_strided_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut f64,
        lda: i64,
        strideA: rocblas_stride,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetrf_npvt_strided_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut rocblas_float_complex,
        lda: i64,
        strideA: rocblas_stride,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetrf_npvt_strided_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut rocblas_double_complex,
        lda: i64,
        strideA: rocblas_stride,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetf2(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetf2(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetf2(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetf2(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetf2_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut f32,
        lda: i64,
        ipiv: *mut i64,
        info: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetf2_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut f64,
        lda: i64,
        ipiv: *mut i64,
        info: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetf2_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut rocblas_float_complex,
        lda: i64,
        ipiv: *mut i64,
        info: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetf2_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut rocblas_double_complex,
        lda: i64,
        ipiv: *mut i64,
        info: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetf2_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetf2_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetf2_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetf2_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetf2_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *const *mut f32,
        lda: i64,
        ipiv: *mut i64,
        strideP: rocblas_stride,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetf2_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *const *mut f64,
        lda: i64,
        ipiv: *mut i64,
        strideP: rocblas_stride,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetf2_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *const *mut rocblas_float_complex,
        lda: i64,
        ipiv: *mut i64,
        strideP: rocblas_stride,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetf2_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *const *mut rocblas_double_complex,
        lda: i64,
        ipiv: *mut i64,
        strideP: rocblas_stride,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetf2_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetf2_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetf2_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetf2_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetf2_strided_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut f32,
        lda: i64,
        strideA: rocblas_stride,
        ipiv: *mut i64,
        strideP: rocblas_stride,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetf2_strided_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut f64,
        lda: i64,
        strideA: rocblas_stride,
        ipiv: *mut i64,
        strideP: rocblas_stride,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetf2_strided_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut rocblas_float_complex,
        lda: i64,
        strideA: rocblas_stride,
        ipiv: *mut i64,
        strideP: rocblas_stride,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetf2_strided_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut rocblas_double_complex,
        lda: i64,
        strideA: rocblas_stride,
        ipiv: *mut i64,
        strideP: rocblas_stride,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetrf(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetrf(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetrf(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetrf(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetrf_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut f32,
        lda: i64,
        ipiv: *mut i64,
        info: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetrf_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut f64,
        lda: i64,
        ipiv: *mut i64,
        info: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetrf_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut rocblas_float_complex,
        lda: i64,
        ipiv: *mut i64,
        info: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetrf_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut rocblas_double_complex,
        lda: i64,
        ipiv: *mut i64,
        info: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetrf_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetrf_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetrf_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetrf_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetrf_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *const *mut f32,
        lda: i64,
        ipiv: *mut i64,
        strideP: rocblas_stride,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetrf_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *const *mut f64,
        lda: i64,
        ipiv: *mut i64,
        strideP: rocblas_stride,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetrf_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *const *mut rocblas_float_complex,
        lda: i64,
        ipiv: *mut i64,
        strideP: rocblas_stride,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetrf_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *const *mut rocblas_double_complex,
        lda: i64,
        ipiv: *mut i64,
        strideP: rocblas_stride,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetrf_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetrf_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetrf_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetrf_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetrf_strided_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut f32,
        lda: i64,
        strideA: rocblas_stride,
        ipiv: *mut i64,
        strideP: rocblas_stride,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetrf_strided_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut f64,
        lda: i64,
        strideA: rocblas_stride,
        ipiv: *mut i64,
        strideP: rocblas_stride,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetrf_strided_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut rocblas_float_complex,
        lda: i64,
        strideA: rocblas_stride,
        ipiv: *mut i64,
        strideP: rocblas_stride,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetrf_strided_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut rocblas_double_complex,
        lda: i64,
        strideA: rocblas_stride,
        ipiv: *mut i64,
        strideP: rocblas_stride,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgeqr2(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        ipiv: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgeqr2(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        ipiv: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgeqr2(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgeqr2(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgeqr2_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut f32,
        lda: i64,
        ipiv: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgeqr2_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut f64,
        lda: i64,
        ipiv: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgeqr2_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut rocblas_float_complex,
        lda: i64,
        ipiv: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgeqr2_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut rocblas_double_complex,
        lda: i64,
        ipiv: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgeqr2_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        ipiv: *mut f32,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgeqr2_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        ipiv: *mut f64,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgeqr2_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_float_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgeqr2_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_double_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgeqr2_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *const *mut f32,
        lda: i64,
        ipiv: *mut f32,
        strideP: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgeqr2_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *const *mut f64,
        lda: i64,
        ipiv: *mut f64,
        strideP: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgeqr2_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *const *mut rocblas_float_complex,
        lda: i64,
        ipiv: *mut rocblas_float_complex,
        strideP: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgeqr2_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *const *mut rocblas_double_complex,
        lda: i64,
        ipiv: *mut rocblas_double_complex,
        strideP: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgeqr2_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut f32,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgeqr2_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut f64,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgeqr2_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_float_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgeqr2_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_double_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgeqr2_strided_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut f32,
        lda: i64,
        strideA: rocblas_stride,
        ipiv: *mut f32,
        strideP: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgeqr2_strided_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut f64,
        lda: i64,
        strideA: rocblas_stride,
        ipiv: *mut f64,
        strideP: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgeqr2_strided_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut rocblas_float_complex,
        lda: i64,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_float_complex,
        strideP: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgeqr2_strided_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut rocblas_double_complex,
        lda: i64,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_double_complex,
        strideP: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgerq2(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        ipiv: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgerq2(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        ipiv: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgerq2(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgerq2(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgerq2_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        ipiv: *mut f32,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgerq2_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        ipiv: *mut f64,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgerq2_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_float_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgerq2_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_double_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgerq2_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut f32,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgerq2_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut f64,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgerq2_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_float_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgerq2_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_double_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgeql2(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        ipiv: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgeql2(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        ipiv: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgeql2(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgeql2(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgeql2_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        ipiv: *mut f32,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgeql2_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        ipiv: *mut f64,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgeql2_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_float_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgeql2_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_double_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgeql2_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut f32,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgeql2_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut f64,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgeql2_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_float_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgeql2_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_double_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgelq2(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        ipiv: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgelq2(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        ipiv: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgelq2(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgelq2(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgelq2_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        ipiv: *mut f32,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgelq2_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        ipiv: *mut f64,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgelq2_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_float_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgelq2_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_double_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgelq2_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut f32,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgelq2_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut f64,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgelq2_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_float_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgelq2_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_double_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgeqrf(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        ipiv: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgeqrf(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        ipiv: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgeqrf(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgeqrf(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgeqrf_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut f32,
        lda: i64,
        ipiv: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgeqrf_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut f64,
        lda: i64,
        ipiv: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgeqrf_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut rocblas_float_complex,
        lda: i64,
        ipiv: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgeqrf_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut rocblas_double_complex,
        lda: i64,
        ipiv: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgeqrf_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        ipiv: *mut f32,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgeqrf_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        ipiv: *mut f64,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgeqrf_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_float_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgeqrf_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_double_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgeqrf_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *const *mut f32,
        lda: i64,
        ipiv: *mut f32,
        strideP: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgeqrf_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *const *mut f64,
        lda: i64,
        ipiv: *mut f64,
        strideP: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgeqrf_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *const *mut rocblas_float_complex,
        lda: i64,
        ipiv: *mut rocblas_float_complex,
        strideP: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgeqrf_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *const *mut rocblas_double_complex,
        lda: i64,
        ipiv: *mut rocblas_double_complex,
        strideP: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgeqrf_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut f32,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgeqrf_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut f64,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgeqrf_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_float_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgeqrf_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_double_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgeqrf_strided_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut f32,
        lda: i64,
        strideA: rocblas_stride,
        ipiv: *mut f32,
        strideP: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgeqrf_strided_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut f64,
        lda: i64,
        strideA: rocblas_stride,
        ipiv: *mut f64,
        strideP: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgeqrf_strided_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut rocblas_float_complex,
        lda: i64,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_float_complex,
        strideP: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgeqrf_strided_batched_64(
        handle: rocblas_handle,
        m: i64,
        n: i64,
        A: *mut rocblas_double_complex,
        lda: i64,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_double_complex,
        strideP: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgerqf(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        ipiv: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgerqf(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        ipiv: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgerqf(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgerqf(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgerqf_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        ipiv: *mut f32,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgerqf_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        ipiv: *mut f64,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgerqf_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_float_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgerqf_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_double_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgerqf_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut f32,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgerqf_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut f64,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgerqf_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_float_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgerqf_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_double_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgeqlf(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        ipiv: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgeqlf(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        ipiv: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgeqlf(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgeqlf(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgeqlf_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        ipiv: *mut f32,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgeqlf_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        ipiv: *mut f64,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgeqlf_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_float_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgeqlf_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_double_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgeqlf_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut f32,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgeqlf_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut f64,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgeqlf_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_float_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgeqlf_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_double_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgelqf(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        ipiv: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgelqf(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        ipiv: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgelqf(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgelqf(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgelqf_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        ipiv: *mut f32,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgelqf_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        ipiv: *mut f64,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgelqf_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_float_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgelqf_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_double_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgelqf_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut f32,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgelqf_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut f64,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgelqf_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_float_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgelqf_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_double_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgebd2(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        D: *mut f32,
        E: *mut f32,
        tauq: *mut f32,
        taup: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgebd2(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        D: *mut f64,
        E: *mut f64,
        tauq: *mut f64,
        taup: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgebd2(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        D: *mut f32,
        E: *mut f32,
        tauq: *mut rocblas_float_complex,
        taup: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgebd2(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        D: *mut f64,
        E: *mut f64,
        tauq: *mut rocblas_double_complex,
        taup: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgebd2_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        D: *mut f32,
        strideD: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        tauq: *mut f32,
        strideQ: rocblas_stride,
        taup: *mut f32,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgebd2_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        D: *mut f64,
        strideD: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        tauq: *mut f64,
        strideQ: rocblas_stride,
        taup: *mut f64,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgebd2_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        D: *mut f32,
        strideD: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        tauq: *mut rocblas_float_complex,
        strideQ: rocblas_stride,
        taup: *mut rocblas_float_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgebd2_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        D: *mut f64,
        strideD: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        tauq: *mut rocblas_double_complex,
        strideQ: rocblas_stride,
        taup: *mut rocblas_double_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgebd2_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        D: *mut f32,
        strideD: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        tauq: *mut f32,
        strideQ: rocblas_stride,
        taup: *mut f32,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgebd2_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        D: *mut f64,
        strideD: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        tauq: *mut f64,
        strideQ: rocblas_stride,
        taup: *mut f64,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgebd2_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        D: *mut f32,
        strideD: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        tauq: *mut rocblas_float_complex,
        strideQ: rocblas_stride,
        taup: *mut rocblas_float_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgebd2_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        D: *mut f64,
        strideD: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        tauq: *mut rocblas_double_complex,
        strideQ: rocblas_stride,
        taup: *mut rocblas_double_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgebrd(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        D: *mut f32,
        E: *mut f32,
        tauq: *mut f32,
        taup: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgebrd(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        D: *mut f64,
        E: *mut f64,
        tauq: *mut f64,
        taup: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgebrd(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        D: *mut f32,
        E: *mut f32,
        tauq: *mut rocblas_float_complex,
        taup: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgebrd(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        D: *mut f64,
        E: *mut f64,
        tauq: *mut rocblas_double_complex,
        taup: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgebrd_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        D: *mut f32,
        strideD: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        tauq: *mut f32,
        strideQ: rocblas_stride,
        taup: *mut f32,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgebrd_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        D: *mut f64,
        strideD: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        tauq: *mut f64,
        strideQ: rocblas_stride,
        taup: *mut f64,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgebrd_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        D: *mut f32,
        strideD: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        tauq: *mut rocblas_float_complex,
        strideQ: rocblas_stride,
        taup: *mut rocblas_float_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgebrd_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        D: *mut f64,
        strideD: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        tauq: *mut rocblas_double_complex,
        strideQ: rocblas_stride,
        taup: *mut rocblas_double_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgebrd_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        D: *mut f32,
        strideD: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        tauq: *mut f32,
        strideQ: rocblas_stride,
        taup: *mut f32,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgebrd_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        D: *mut f64,
        strideD: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        tauq: *mut f64,
        strideQ: rocblas_stride,
        taup: *mut f64,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgebrd_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        D: *mut f32,
        strideD: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        tauq: *mut rocblas_float_complex,
        strideQ: rocblas_stride,
        taup: *mut rocblas_float_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgebrd_strided_batched(
        handle: rocblas_handle,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        D: *mut f64,
        strideD: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        tauq: *mut rocblas_double_complex,
        strideQ: rocblas_stride,
        taup: *mut rocblas_double_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetrs(
        handle: rocblas_handle,
        trans: rocblas_operation,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        ipiv: *const rocblas_int,
        B: *mut f32,
        ldb: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetrs(
        handle: rocblas_handle,
        trans: rocblas_operation,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        ipiv: *const rocblas_int,
        B: *mut f64,
        ldb: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetrs(
        handle: rocblas_handle,
        trans: rocblas_operation,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *const rocblas_int,
        B: *mut rocblas_float_complex,
        ldb: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetrs(
        handle: rocblas_handle,
        trans: rocblas_operation,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *const rocblas_int,
        B: *mut rocblas_double_complex,
        ldb: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetrs_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        n: i64,
        nrhs: i64,
        A: *mut f32,
        lda: i64,
        ipiv: *const i64,
        B: *mut f32,
        ldb: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetrs_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        n: i64,
        nrhs: i64,
        A: *mut f64,
        lda: i64,
        ipiv: *const i64,
        B: *mut f64,
        ldb: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetrs_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        n: i64,
        nrhs: i64,
        A: *mut rocblas_float_complex,
        lda: i64,
        ipiv: *const i64,
        B: *mut rocblas_float_complex,
        ldb: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetrs_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        n: i64,
        nrhs: i64,
        A: *mut rocblas_double_complex,
        lda: i64,
        ipiv: *const i64,
        B: *mut rocblas_double_complex,
        ldb: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetrs_batched(
        handle: rocblas_handle,
        trans: rocblas_operation,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        ipiv: *const rocblas_int,
        strideP: rocblas_stride,
        B: *const *mut f32,
        ldb: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetrs_batched(
        handle: rocblas_handle,
        trans: rocblas_operation,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        ipiv: *const rocblas_int,
        strideP: rocblas_stride,
        B: *const *mut f64,
        ldb: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetrs_batched(
        handle: rocblas_handle,
        trans: rocblas_operation,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *const rocblas_int,
        strideP: rocblas_stride,
        B: *const *mut rocblas_float_complex,
        ldb: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetrs_batched(
        handle: rocblas_handle,
        trans: rocblas_operation,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *const rocblas_int,
        strideP: rocblas_stride,
        B: *const *mut rocblas_double_complex,
        ldb: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetrs_batched_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        n: i64,
        nrhs: i64,
        A: *const *mut f32,
        lda: i64,
        ipiv: *const i64,
        strideP: rocblas_stride,
        B: *const *mut f32,
        ldb: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetrs_batched_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        n: i64,
        nrhs: i64,
        A: *const *mut f64,
        lda: i64,
        ipiv: *const i64,
        strideP: rocblas_stride,
        B: *const *mut f64,
        ldb: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetrs_batched_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        n: i64,
        nrhs: i64,
        A: *const *mut rocblas_float_complex,
        lda: i64,
        ipiv: *const i64,
        strideP: rocblas_stride,
        B: *const *mut rocblas_float_complex,
        ldb: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetrs_batched_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        n: i64,
        nrhs: i64,
        A: *const *mut rocblas_double_complex,
        lda: i64,
        ipiv: *const i64,
        strideP: rocblas_stride,
        B: *const *mut rocblas_double_complex,
        ldb: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetrs_strided_batched(
        handle: rocblas_handle,
        trans: rocblas_operation,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *const rocblas_int,
        strideP: rocblas_stride,
        B: *mut f32,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetrs_strided_batched(
        handle: rocblas_handle,
        trans: rocblas_operation,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *const rocblas_int,
        strideP: rocblas_stride,
        B: *mut f64,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetrs_strided_batched(
        handle: rocblas_handle,
        trans: rocblas_operation,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *const rocblas_int,
        strideP: rocblas_stride,
        B: *mut rocblas_float_complex,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetrs_strided_batched(
        handle: rocblas_handle,
        trans: rocblas_operation,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *const rocblas_int,
        strideP: rocblas_stride,
        B: *mut rocblas_double_complex,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetrs_strided_batched_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        n: i64,
        nrhs: i64,
        A: *mut f32,
        lda: i64,
        strideA: rocblas_stride,
        ipiv: *const i64,
        strideP: rocblas_stride,
        B: *mut f32,
        ldb: i64,
        strideB: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetrs_strided_batched_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        n: i64,
        nrhs: i64,
        A: *mut f64,
        lda: i64,
        strideA: rocblas_stride,
        ipiv: *const i64,
        strideP: rocblas_stride,
        B: *mut f64,
        ldb: i64,
        strideB: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetrs_strided_batched_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        n: i64,
        nrhs: i64,
        A: *mut rocblas_float_complex,
        lda: i64,
        strideA: rocblas_stride,
        ipiv: *const i64,
        strideP: rocblas_stride,
        B: *mut rocblas_float_complex,
        ldb: i64,
        strideB: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetrs_strided_batched_64(
        handle: rocblas_handle,
        trans: rocblas_operation,
        n: i64,
        nrhs: i64,
        A: *mut rocblas_double_complex,
        lda: i64,
        strideA: rocblas_stride,
        ipiv: *const i64,
        strideP: rocblas_stride,
        B: *mut rocblas_double_complex,
        ldb: i64,
        strideB: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgesv(
        handle: rocblas_handle,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        B: *mut f32,
        ldb: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgesv(
        handle: rocblas_handle,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        B: *mut f64,
        ldb: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgesv(
        handle: rocblas_handle,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        B: *mut rocblas_float_complex,
        ldb: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgesv(
        handle: rocblas_handle,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        B: *mut rocblas_double_complex,
        ldb: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgesv_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        B: *const *mut f32,
        ldb: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgesv_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        B: *const *mut f64,
        ldb: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgesv_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        B: *const *mut rocblas_float_complex,
        ldb: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgesv_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        B: *const *mut rocblas_double_complex,
        ldb: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgesv_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        B: *mut f32,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgesv_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        B: *mut f64,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgesv_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        B: *mut rocblas_float_complex,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgesv_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        B: *mut rocblas_double_complex,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetri(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetri(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetri(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetri(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetri_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetri_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetri_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetri_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetri_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetri_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetri_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetri_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetri_npvt(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetri_npvt(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetri_npvt(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetri_npvt(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetri_npvt_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetri_npvt_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetri_npvt_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetri_npvt_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetri_npvt_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetri_npvt_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetri_npvt_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetri_npvt_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgels(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        B: *mut f32,
        ldb: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgels(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        B: *mut f64,
        ldb: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgels(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        B: *mut rocblas_float_complex,
        ldb: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgels(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        B: *mut rocblas_double_complex,
        ldb: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgels_batched(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        B: *const *mut f32,
        ldb: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgels_batched(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        B: *const *mut f64,
        ldb: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgels_batched(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        B: *const *mut rocblas_float_complex,
        ldb: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgels_batched(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        B: *const *mut rocblas_double_complex,
        ldb: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgels_strided_batched(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut f32,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgels_strided_batched(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut f64,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgels_strided_batched(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut rocblas_float_complex,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgels_strided_batched(
        handle: rocblas_handle,
        trans: rocblas_operation,
        m: rocblas_int,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut rocblas_double_complex,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_spotf2(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dpotf2(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cpotf2(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zpotf2(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_spotf2_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        A: *mut f32,
        lda: i64,
        info: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dpotf2_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        A: *mut f64,
        lda: i64,
        info: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cpotf2_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        A: *mut rocblas_float_complex,
        lda: i64,
        info: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zpotf2_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        A: *mut rocblas_double_complex,
        lda: i64,
        info: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_spotf2_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dpotf2_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cpotf2_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zpotf2_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_spotf2_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        A: *const *mut f32,
        lda: i64,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dpotf2_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        A: *const *mut f64,
        lda: i64,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cpotf2_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        A: *const *mut rocblas_float_complex,
        lda: i64,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zpotf2_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        A: *const *mut rocblas_double_complex,
        lda: i64,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_spotf2_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dpotf2_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cpotf2_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zpotf2_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_spotf2_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        A: *mut f32,
        lda: i64,
        strideA: rocblas_stride,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dpotf2_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        A: *mut f64,
        lda: i64,
        strideA: rocblas_stride,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cpotf2_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        A: *mut rocblas_float_complex,
        lda: i64,
        strideA: rocblas_stride,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zpotf2_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        A: *mut rocblas_double_complex,
        lda: i64,
        strideA: rocblas_stride,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_spotrf(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dpotrf(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cpotrf(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zpotrf(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_spotrf_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        A: *mut f32,
        lda: i64,
        info: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dpotrf_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        A: *mut f64,
        lda: i64,
        info: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cpotrf_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        A: *mut rocblas_float_complex,
        lda: i64,
        info: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zpotrf_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        A: *mut rocblas_double_complex,
        lda: i64,
        info: *mut i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_spotrf_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dpotrf_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cpotrf_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zpotrf_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_spotrf_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        A: *const *mut f32,
        lda: i64,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dpotrf_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        A: *const *mut f64,
        lda: i64,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cpotrf_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        A: *const *mut rocblas_float_complex,
        lda: i64,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zpotrf_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        A: *const *mut rocblas_double_complex,
        lda: i64,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_spotrf_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dpotrf_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cpotrf_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zpotrf_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_spotrf_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        A: *mut f32,
        lda: i64,
        strideA: rocblas_stride,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dpotrf_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        A: *mut f64,
        lda: i64,
        strideA: rocblas_stride,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cpotrf_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        A: *mut rocblas_float_complex,
        lda: i64,
        strideA: rocblas_stride,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zpotrf_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        A: *mut rocblas_double_complex,
        lda: i64,
        strideA: rocblas_stride,
        info: *mut i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_spotrs(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        B: *mut f32,
        ldb: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dpotrs(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        B: *mut f64,
        ldb: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cpotrs(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        B: *mut rocblas_float_complex,
        ldb: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zpotrs(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        B: *mut rocblas_double_complex,
        ldb: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_spotrs_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        nrhs: i64,
        A: *mut f32,
        lda: i64,
        B: *mut f32,
        ldb: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dpotrs_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        nrhs: i64,
        A: *mut f64,
        lda: i64,
        B: *mut f64,
        ldb: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cpotrs_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        nrhs: i64,
        A: *mut rocblas_float_complex,
        lda: i64,
        B: *mut rocblas_float_complex,
        ldb: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zpotrs_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        nrhs: i64,
        A: *mut rocblas_double_complex,
        lda: i64,
        B: *mut rocblas_double_complex,
        ldb: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_spotrs_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        B: *const *mut f32,
        ldb: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dpotrs_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        B: *const *mut f64,
        ldb: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cpotrs_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        B: *const *mut rocblas_float_complex,
        ldb: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zpotrs_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        B: *const *mut rocblas_double_complex,
        ldb: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_spotrs_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        nrhs: i64,
        A: *const *mut f32,
        lda: i64,
        B: *const *mut f32,
        ldb: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dpotrs_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        nrhs: i64,
        A: *const *mut f64,
        lda: i64,
        B: *const *mut f64,
        ldb: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cpotrs_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        nrhs: i64,
        A: *const *mut rocblas_float_complex,
        lda: i64,
        B: *const *mut rocblas_float_complex,
        ldb: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zpotrs_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        nrhs: i64,
        A: *const *mut rocblas_double_complex,
        lda: i64,
        B: *const *mut rocblas_double_complex,
        ldb: i64,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_spotrs_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut f32,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dpotrs_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut f64,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cpotrs_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut rocblas_float_complex,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zpotrs_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut rocblas_double_complex,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_spotrs_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        nrhs: i64,
        A: *mut f32,
        lda: i64,
        strideA: rocblas_stride,
        B: *mut f32,
        ldb: i64,
        strideB: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dpotrs_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        nrhs: i64,
        A: *mut f64,
        lda: i64,
        strideA: rocblas_stride,
        B: *mut f64,
        ldb: i64,
        strideB: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cpotrs_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        nrhs: i64,
        A: *mut rocblas_float_complex,
        lda: i64,
        strideA: rocblas_stride,
        B: *mut rocblas_float_complex,
        ldb: i64,
        strideB: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zpotrs_strided_batched_64(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: i64,
        nrhs: i64,
        A: *mut rocblas_double_complex,
        lda: i64,
        strideA: rocblas_stride,
        B: *mut rocblas_double_complex,
        ldb: i64,
        strideB: rocblas_stride,
        batch_count: i64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sposv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        B: *mut f32,
        ldb: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dposv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        B: *mut f64,
        ldb: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cposv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        B: *mut rocblas_float_complex,
        ldb: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zposv(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        B: *mut rocblas_double_complex,
        ldb: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sposv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        B: *const *mut f32,
        ldb: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dposv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        B: *const *mut f64,
        ldb: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cposv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        B: *const *mut rocblas_float_complex,
        ldb: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zposv_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        B: *const *mut rocblas_double_complex,
        ldb: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sposv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut f32,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dposv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut f64,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cposv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut rocblas_float_complex,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zposv_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        nrhs: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut rocblas_double_complex,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_spotri(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dpotri(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cpotri(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zpotri(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_spotri_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dpotri_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cpotri_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zpotri_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_spotri_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dpotri_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cpotri_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zpotri_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgesvd(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        S: *mut f32,
        U: *mut f32,
        ldu: rocblas_int,
        V: *mut f32,
        ldv: rocblas_int,
        E: *mut f32,
        fast_alg: rocblas_workmode,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgesvd(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        S: *mut f64,
        U: *mut f64,
        ldu: rocblas_int,
        V: *mut f64,
        ldv: rocblas_int,
        E: *mut f64,
        fast_alg: rocblas_workmode,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgesvd(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        S: *mut f32,
        U: *mut rocblas_float_complex,
        ldu: rocblas_int,
        V: *mut rocblas_float_complex,
        ldv: rocblas_int,
        E: *mut f32,
        fast_alg: rocblas_workmode,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgesvd(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        S: *mut f64,
        U: *mut rocblas_double_complex,
        ldu: rocblas_int,
        V: *mut rocblas_double_complex,
        ldv: rocblas_int,
        E: *mut f64,
        fast_alg: rocblas_workmode,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgesvd_batched(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        S: *mut f32,
        strideS: rocblas_stride,
        U: *mut f32,
        ldu: rocblas_int,
        strideU: rocblas_stride,
        V: *mut f32,
        ldv: rocblas_int,
        strideV: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        fast_alg: rocblas_workmode,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgesvd_batched(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        S: *mut f64,
        strideS: rocblas_stride,
        U: *mut f64,
        ldu: rocblas_int,
        strideU: rocblas_stride,
        V: *mut f64,
        ldv: rocblas_int,
        strideV: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        fast_alg: rocblas_workmode,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgesvd_batched(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        S: *mut f32,
        strideS: rocblas_stride,
        U: *mut rocblas_float_complex,
        ldu: rocblas_int,
        strideU: rocblas_stride,
        V: *mut rocblas_float_complex,
        ldv: rocblas_int,
        strideV: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        fast_alg: rocblas_workmode,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgesvd_batched(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        S: *mut f64,
        strideS: rocblas_stride,
        U: *mut rocblas_double_complex,
        ldu: rocblas_int,
        strideU: rocblas_stride,
        V: *mut rocblas_double_complex,
        ldv: rocblas_int,
        strideV: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        fast_alg: rocblas_workmode,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgesvd_strided_batched(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        S: *mut f32,
        strideS: rocblas_stride,
        U: *mut f32,
        ldu: rocblas_int,
        strideU: rocblas_stride,
        V: *mut f32,
        ldv: rocblas_int,
        strideV: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        fast_alg: rocblas_workmode,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgesvd_strided_batched(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        S: *mut f64,
        strideS: rocblas_stride,
        U: *mut f64,
        ldu: rocblas_int,
        strideU: rocblas_stride,
        V: *mut f64,
        ldv: rocblas_int,
        strideV: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        fast_alg: rocblas_workmode,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgesvd_strided_batched(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        S: *mut f32,
        strideS: rocblas_stride,
        U: *mut rocblas_float_complex,
        ldu: rocblas_int,
        strideU: rocblas_stride,
        V: *mut rocblas_float_complex,
        ldv: rocblas_int,
        strideV: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        fast_alg: rocblas_workmode,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgesvd_strided_batched(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        S: *mut f64,
        strideS: rocblas_stride,
        U: *mut rocblas_double_complex,
        ldu: rocblas_int,
        strideU: rocblas_stride,
        V: *mut rocblas_double_complex,
        ldv: rocblas_int,
        strideV: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        fast_alg: rocblas_workmode,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgesvdj(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        abstol: f32,
        residual: *mut f32,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        S: *mut f32,
        U: *mut f32,
        ldu: rocblas_int,
        V: *mut f32,
        ldv: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgesvdj(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        abstol: f64,
        residual: *mut f64,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        S: *mut f64,
        U: *mut f64,
        ldu: rocblas_int,
        V: *mut f64,
        ldv: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgesvdj(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        abstol: f32,
        residual: *mut f32,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        S: *mut f32,
        U: *mut rocblas_float_complex,
        ldu: rocblas_int,
        V: *mut rocblas_float_complex,
        ldv: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgesvdj(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        abstol: f64,
        residual: *mut f64,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        S: *mut f64,
        U: *mut rocblas_double_complex,
        ldu: rocblas_int,
        V: *mut rocblas_double_complex,
        ldv: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgesvdj_batched(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        abstol: f32,
        residual: *mut f32,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        S: *mut f32,
        strideS: rocblas_stride,
        U: *mut f32,
        ldu: rocblas_int,
        strideU: rocblas_stride,
        V: *mut f32,
        ldv: rocblas_int,
        strideV: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgesvdj_batched(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        abstol: f64,
        residual: *mut f64,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        S: *mut f64,
        strideS: rocblas_stride,
        U: *mut f64,
        ldu: rocblas_int,
        strideU: rocblas_stride,
        V: *mut f64,
        ldv: rocblas_int,
        strideV: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgesvdj_batched(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        abstol: f32,
        residual: *mut f32,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        S: *mut f32,
        strideS: rocblas_stride,
        U: *mut rocblas_float_complex,
        ldu: rocblas_int,
        strideU: rocblas_stride,
        V: *mut rocblas_float_complex,
        ldv: rocblas_int,
        strideV: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgesvdj_batched(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        abstol: f64,
        residual: *mut f64,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        S: *mut f64,
        strideS: rocblas_stride,
        U: *mut rocblas_double_complex,
        ldu: rocblas_int,
        strideU: rocblas_stride,
        V: *mut rocblas_double_complex,
        ldv: rocblas_int,
        strideV: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgesvdj_strided_batched(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        abstol: f32,
        residual: *mut f32,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        S: *mut f32,
        strideS: rocblas_stride,
        U: *mut f32,
        ldu: rocblas_int,
        strideU: rocblas_stride,
        V: *mut f32,
        ldv: rocblas_int,
        strideV: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgesvdj_strided_batched(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        abstol: f64,
        residual: *mut f64,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        S: *mut f64,
        strideS: rocblas_stride,
        U: *mut f64,
        ldu: rocblas_int,
        strideU: rocblas_stride,
        V: *mut f64,
        ldv: rocblas_int,
        strideV: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgesvdj_strided_batched(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        abstol: f32,
        residual: *mut f32,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        S: *mut f32,
        strideS: rocblas_stride,
        U: *mut rocblas_float_complex,
        ldu: rocblas_int,
        strideU: rocblas_stride,
        V: *mut rocblas_float_complex,
        ldv: rocblas_int,
        strideV: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgesvdj_strided_batched(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        abstol: f64,
        residual: *mut f64,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        S: *mut f64,
        strideS: rocblas_stride,
        U: *mut rocblas_double_complex,
        ldu: rocblas_int,
        strideU: rocblas_stride,
        V: *mut rocblas_double_complex,
        ldv: rocblas_int,
        strideV: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgesvdx(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        srange: rocblas_srange,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        vl: f32,
        vu: f32,
        il: rocblas_int,
        iu: rocblas_int,
        nsv: *mut rocblas_int,
        S: *mut f32,
        U: *mut f32,
        ldu: rocblas_int,
        V: *mut f32,
        ldv: rocblas_int,
        ifail: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgesvdx(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        srange: rocblas_srange,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        vl: f64,
        vu: f64,
        il: rocblas_int,
        iu: rocblas_int,
        nsv: *mut rocblas_int,
        S: *mut f64,
        U: *mut f64,
        ldu: rocblas_int,
        V: *mut f64,
        ldv: rocblas_int,
        ifail: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgesvdx(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        srange: rocblas_srange,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        vl: f32,
        vu: f32,
        il: rocblas_int,
        iu: rocblas_int,
        nsv: *mut rocblas_int,
        S: *mut f32,
        U: *mut rocblas_float_complex,
        ldu: rocblas_int,
        V: *mut rocblas_float_complex,
        ldv: rocblas_int,
        ifail: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgesvdx(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        srange: rocblas_srange,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        vl: f64,
        vu: f64,
        il: rocblas_int,
        iu: rocblas_int,
        nsv: *mut rocblas_int,
        S: *mut f64,
        U: *mut rocblas_double_complex,
        ldu: rocblas_int,
        V: *mut rocblas_double_complex,
        ldv: rocblas_int,
        ifail: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgesvdx_batched(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        srange: rocblas_srange,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        vl: f32,
        vu: f32,
        il: rocblas_int,
        iu: rocblas_int,
        nsv: *mut rocblas_int,
        S: *mut f32,
        strideS: rocblas_stride,
        U: *mut f32,
        ldu: rocblas_int,
        strideU: rocblas_stride,
        V: *mut f32,
        ldv: rocblas_int,
        strideV: rocblas_stride,
        ifail: *mut rocblas_int,
        strideF: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgesvdx_batched(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        srange: rocblas_srange,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        vl: f64,
        vu: f64,
        il: rocblas_int,
        iu: rocblas_int,
        nsv: *mut rocblas_int,
        S: *mut f64,
        strideS: rocblas_stride,
        U: *mut f64,
        ldu: rocblas_int,
        strideU: rocblas_stride,
        V: *mut f64,
        ldv: rocblas_int,
        strideV: rocblas_stride,
        ifail: *mut rocblas_int,
        strideF: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgesvdx_batched(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        srange: rocblas_srange,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        vl: f32,
        vu: f32,
        il: rocblas_int,
        iu: rocblas_int,
        nsv: *mut rocblas_int,
        S: *mut f32,
        strideS: rocblas_stride,
        U: *mut rocblas_float_complex,
        ldu: rocblas_int,
        strideU: rocblas_stride,
        V: *mut rocblas_float_complex,
        ldv: rocblas_int,
        strideV: rocblas_stride,
        ifail: *mut rocblas_int,
        strideF: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgesvdx_batched(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        srange: rocblas_srange,
        m: rocblas_int,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        vl: f64,
        vu: f64,
        il: rocblas_int,
        iu: rocblas_int,
        nsv: *mut rocblas_int,
        S: *mut f64,
        strideS: rocblas_stride,
        U: *mut rocblas_double_complex,
        ldu: rocblas_int,
        strideU: rocblas_stride,
        V: *mut rocblas_double_complex,
        ldv: rocblas_int,
        strideV: rocblas_stride,
        ifail: *mut rocblas_int,
        strideF: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgesvdx_strided_batched(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        srange: rocblas_srange,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        vl: f32,
        vu: f32,
        il: rocblas_int,
        iu: rocblas_int,
        nsv: *mut rocblas_int,
        S: *mut f32,
        strideS: rocblas_stride,
        U: *mut f32,
        ldu: rocblas_int,
        strideU: rocblas_stride,
        V: *mut f32,
        ldv: rocblas_int,
        strideV: rocblas_stride,
        ifail: *mut rocblas_int,
        strideF: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgesvdx_strided_batched(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        srange: rocblas_srange,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        vl: f64,
        vu: f64,
        il: rocblas_int,
        iu: rocblas_int,
        nsv: *mut rocblas_int,
        S: *mut f64,
        strideS: rocblas_stride,
        U: *mut f64,
        ldu: rocblas_int,
        strideU: rocblas_stride,
        V: *mut f64,
        ldv: rocblas_int,
        strideV: rocblas_stride,
        ifail: *mut rocblas_int,
        strideF: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgesvdx_strided_batched(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        srange: rocblas_srange,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        vl: f32,
        vu: f32,
        il: rocblas_int,
        iu: rocblas_int,
        nsv: *mut rocblas_int,
        S: *mut f32,
        strideS: rocblas_stride,
        U: *mut rocblas_float_complex,
        ldu: rocblas_int,
        strideU: rocblas_stride,
        V: *mut rocblas_float_complex,
        ldv: rocblas_int,
        strideV: rocblas_stride,
        ifail: *mut rocblas_int,
        strideF: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgesvdx_strided_batched(
        handle: rocblas_handle,
        left_svect: rocblas_svect,
        right_svect: rocblas_svect,
        srange: rocblas_srange,
        m: rocblas_int,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        vl: f64,
        vu: f64,
        il: rocblas_int,
        iu: rocblas_int,
        nsv: *mut rocblas_int,
        S: *mut f64,
        strideS: rocblas_stride,
        U: *mut rocblas_double_complex,
        ldu: rocblas_int,
        strideU: rocblas_stride,
        V: *mut rocblas_double_complex,
        ldv: rocblas_int,
        strideV: rocblas_stride,
        ifail: *mut rocblas_int,
        strideF: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssytd2(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        D: *mut f32,
        E: *mut f32,
        tau: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsytd2(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        D: *mut f64,
        E: *mut f64,
        tau: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_chetd2(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        D: *mut f32,
        E: *mut f32,
        tau: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zhetd2(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        D: *mut f64,
        E: *mut f64,
        tau: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssytd2_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        D: *mut f32,
        strideD: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        tau: *mut f32,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsytd2_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        D: *mut f64,
        strideD: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        tau: *mut f64,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_chetd2_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        D: *mut f32,
        strideD: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        tau: *mut rocblas_float_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zhetd2_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        D: *mut f64,
        strideD: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        tau: *mut rocblas_double_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssytd2_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        D: *mut f32,
        strideD: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        tau: *mut f32,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsytd2_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        D: *mut f64,
        strideD: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        tau: *mut f64,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_chetd2_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        D: *mut f32,
        strideD: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        tau: *mut rocblas_float_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zhetd2_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        D: *mut f64,
        strideD: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        tau: *mut rocblas_double_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssytrd(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        D: *mut f32,
        E: *mut f32,
        tau: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsytrd(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        D: *mut f64,
        E: *mut f64,
        tau: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_chetrd(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        D: *mut f32,
        E: *mut f32,
        tau: *mut rocblas_float_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zhetrd(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        D: *mut f64,
        E: *mut f64,
        tau: *mut rocblas_double_complex,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssytrd_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        D: *mut f32,
        strideD: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        tau: *mut f32,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsytrd_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        D: *mut f64,
        strideD: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        tau: *mut f64,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_chetrd_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        D: *mut f32,
        strideD: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        tau: *mut rocblas_float_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zhetrd_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        D: *mut f64,
        strideD: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        tau: *mut rocblas_double_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssytrd_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        D: *mut f32,
        strideD: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        tau: *mut f32,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsytrd_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        D: *mut f64,
        strideD: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        tau: *mut f64,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_chetrd_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        D: *mut f32,
        strideD: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        tau: *mut rocblas_float_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zhetrd_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        D: *mut f64,
        strideD: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        tau: *mut rocblas_double_complex,
        strideP: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssygs2(
        handle: rocblas_handle,
        itype: rocblas_eform,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        B: *mut f32,
        ldb: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsygs2(
        handle: rocblas_handle,
        itype: rocblas_eform,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        B: *mut f64,
        ldb: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_chegs2(
        handle: rocblas_handle,
        itype: rocblas_eform,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        B: *mut rocblas_float_complex,
        ldb: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zhegs2(
        handle: rocblas_handle,
        itype: rocblas_eform,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        B: *mut rocblas_double_complex,
        ldb: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssygs2_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        B: *const *mut f32,
        ldb: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsygs2_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        B: *const *mut f64,
        ldb: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_chegs2_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        B: *const *mut rocblas_float_complex,
        ldb: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zhegs2_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        B: *const *mut rocblas_double_complex,
        ldb: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssygs2_strided_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut f32,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsygs2_strided_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut f64,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_chegs2_strided_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut rocblas_float_complex,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zhegs2_strided_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut rocblas_double_complex,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssygst(
        handle: rocblas_handle,
        itype: rocblas_eform,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        B: *mut f32,
        ldb: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsygst(
        handle: rocblas_handle,
        itype: rocblas_eform,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        B: *mut f64,
        ldb: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_chegst(
        handle: rocblas_handle,
        itype: rocblas_eform,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        B: *mut rocblas_float_complex,
        ldb: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zhegst(
        handle: rocblas_handle,
        itype: rocblas_eform,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        B: *mut rocblas_double_complex,
        ldb: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssygst_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        B: *const *mut f32,
        ldb: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsygst_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        B: *const *mut f64,
        ldb: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_chegst_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        B: *const *mut rocblas_float_complex,
        ldb: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zhegst_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        B: *const *mut rocblas_double_complex,
        ldb: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssygst_strided_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut f32,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsygst_strided_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut f64,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_chegst_strided_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut rocblas_float_complex,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zhegst_strided_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut rocblas_double_complex,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssyev(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        D: *mut f32,
        E: *mut f32,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsyev(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        D: *mut f64,
        E: *mut f64,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cheev(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        D: *mut f32,
        E: *mut f32,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zheev(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        D: *mut f64,
        E: *mut f64,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssyev_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        D: *mut f32,
        strideD: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsyev_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        D: *mut f64,
        strideD: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cheev_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        D: *mut f32,
        strideD: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zheev_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        D: *mut f64,
        strideD: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssyev_strided_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        D: *mut f32,
        strideD: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsyev_strided_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        D: *mut f64,
        strideD: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cheev_strided_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        D: *mut f32,
        strideD: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zheev_strided_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        D: *mut f64,
        strideD: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssyevd(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        D: *mut f32,
        E: *mut f32,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsyevd(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        D: *mut f64,
        E: *mut f64,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cheevd(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        D: *mut f32,
        E: *mut f32,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zheevd(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        D: *mut f64,
        E: *mut f64,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssyevd_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        D: *mut f32,
        strideD: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsyevd_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        D: *mut f64,
        strideD: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cheevd_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        D: *mut f32,
        strideD: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zheevd_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        D: *mut f64,
        strideD: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssyevd_strided_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        D: *mut f32,
        strideD: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsyevd_strided_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        D: *mut f64,
        strideD: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cheevd_strided_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        D: *mut f32,
        strideD: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zheevd_strided_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        D: *mut f64,
        strideD: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssyevdj(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        D: *mut f32,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsyevdj(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        D: *mut f64,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cheevdj(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        D: *mut f32,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zheevdj(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        D: *mut f64,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssyevdj_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        D: *mut f32,
        strideD: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsyevdj_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        D: *mut f64,
        strideD: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cheevdj_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        D: *mut f32,
        strideD: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zheevdj_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        D: *mut f64,
        strideD: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssyevdj_strided_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        D: *mut f32,
        strideD: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsyevdj_strided_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        D: *mut f64,
        strideD: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cheevdj_strided_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        D: *mut f32,
        strideD: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zheevdj_strided_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        D: *mut f64,
        strideD: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssygvdj(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        B: *mut f32,
        ldb: rocblas_int,
        D: *mut f32,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsygvdj(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        B: *mut f64,
        ldb: rocblas_int,
        D: *mut f64,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_chegvdj(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        B: *mut rocblas_float_complex,
        ldb: rocblas_int,
        D: *mut f32,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zhegvdj(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        B: *mut rocblas_double_complex,
        ldb: rocblas_int,
        D: *mut f64,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssygvdj_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        B: *const *mut f32,
        ldb: rocblas_int,
        D: *mut f32,
        strideD: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsygvdj_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        B: *const *mut f64,
        ldb: rocblas_int,
        D: *mut f64,
        strideD: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_chegvdj_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        B: *const *mut rocblas_float_complex,
        ldb: rocblas_int,
        D: *mut f32,
        strideD: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zhegvdj_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        B: *const *mut rocblas_double_complex,
        ldb: rocblas_int,
        D: *mut f64,
        strideD: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssygvdj_strided_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut f32,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        D: *mut f32,
        strideD: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsygvdj_strided_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut f64,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        D: *mut f64,
        strideD: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_chegvdj_strided_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut rocblas_float_complex,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        D: *mut f32,
        strideD: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zhegvdj_strided_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut rocblas_double_complex,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        D: *mut f64,
        strideD: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssyevj(
        handle: rocblas_handle,
        esort: rocblas_esort,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        abstol: f32,
        residual: *mut f32,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        W: *mut f32,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsyevj(
        handle: rocblas_handle,
        esort: rocblas_esort,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        abstol: f64,
        residual: *mut f64,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        W: *mut f64,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cheevj(
        handle: rocblas_handle,
        esort: rocblas_esort,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        abstol: f32,
        residual: *mut f32,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        W: *mut f32,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zheevj(
        handle: rocblas_handle,
        esort: rocblas_esort,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        abstol: f64,
        residual: *mut f64,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        W: *mut f64,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssyevj_batched(
        handle: rocblas_handle,
        esort: rocblas_esort,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        abstol: f32,
        residual: *mut f32,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        W: *mut f32,
        strideW: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsyevj_batched(
        handle: rocblas_handle,
        esort: rocblas_esort,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        abstol: f64,
        residual: *mut f64,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        W: *mut f64,
        strideW: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cheevj_batched(
        handle: rocblas_handle,
        esort: rocblas_esort,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        abstol: f32,
        residual: *mut f32,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        W: *mut f32,
        strideW: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zheevj_batched(
        handle: rocblas_handle,
        esort: rocblas_esort,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        abstol: f64,
        residual: *mut f64,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        W: *mut f64,
        strideW: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssyevj_strided_batched(
        handle: rocblas_handle,
        esort: rocblas_esort,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        abstol: f32,
        residual: *mut f32,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        W: *mut f32,
        strideW: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsyevj_strided_batched(
        handle: rocblas_handle,
        esort: rocblas_esort,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        abstol: f64,
        residual: *mut f64,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        W: *mut f64,
        strideW: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cheevj_strided_batched(
        handle: rocblas_handle,
        esort: rocblas_esort,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        abstol: f32,
        residual: *mut f32,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        W: *mut f32,
        strideW: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zheevj_strided_batched(
        handle: rocblas_handle,
        esort: rocblas_esort,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        abstol: f64,
        residual: *mut f64,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        W: *mut f64,
        strideW: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssyevx(
        handle: rocblas_handle,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        vl: f32,
        vu: f32,
        il: rocblas_int,
        iu: rocblas_int,
        abstol: f32,
        nev: *mut rocblas_int,
        W: *mut f32,
        Z: *mut f32,
        ldz: rocblas_int,
        ifail: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsyevx(
        handle: rocblas_handle,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        vl: f64,
        vu: f64,
        il: rocblas_int,
        iu: rocblas_int,
        abstol: f64,
        nev: *mut rocblas_int,
        W: *mut f64,
        Z: *mut f64,
        ldz: rocblas_int,
        ifail: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cheevx(
        handle: rocblas_handle,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        vl: f32,
        vu: f32,
        il: rocblas_int,
        iu: rocblas_int,
        abstol: f32,
        nev: *mut rocblas_int,
        W: *mut f32,
        Z: *mut rocblas_float_complex,
        ldz: rocblas_int,
        ifail: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zheevx(
        handle: rocblas_handle,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        vl: f64,
        vu: f64,
        il: rocblas_int,
        iu: rocblas_int,
        abstol: f64,
        nev: *mut rocblas_int,
        W: *mut f64,
        Z: *mut rocblas_double_complex,
        ldz: rocblas_int,
        ifail: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssyevx_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        vl: f32,
        vu: f32,
        il: rocblas_int,
        iu: rocblas_int,
        abstol: f32,
        nev: *mut rocblas_int,
        W: *mut f32,
        strideW: rocblas_stride,
        Z: *const *mut f32,
        ldz: rocblas_int,
        ifail: *mut rocblas_int,
        strideF: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsyevx_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        vl: f64,
        vu: f64,
        il: rocblas_int,
        iu: rocblas_int,
        abstol: f64,
        nev: *mut rocblas_int,
        W: *mut f64,
        strideW: rocblas_stride,
        Z: *const *mut f64,
        ldz: rocblas_int,
        ifail: *mut rocblas_int,
        strideF: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cheevx_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        vl: f32,
        vu: f32,
        il: rocblas_int,
        iu: rocblas_int,
        abstol: f32,
        nev: *mut rocblas_int,
        W: *mut f32,
        strideW: rocblas_stride,
        Z: *const *mut rocblas_float_complex,
        ldz: rocblas_int,
        ifail: *mut rocblas_int,
        strideF: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zheevx_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        vl: f64,
        vu: f64,
        il: rocblas_int,
        iu: rocblas_int,
        abstol: f64,
        nev: *mut rocblas_int,
        W: *mut f64,
        strideW: rocblas_stride,
        Z: *const *mut rocblas_double_complex,
        ldz: rocblas_int,
        ifail: *mut rocblas_int,
        strideF: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssyevx_strided_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        vl: f32,
        vu: f32,
        il: rocblas_int,
        iu: rocblas_int,
        abstol: f32,
        nev: *mut rocblas_int,
        W: *mut f32,
        strideW: rocblas_stride,
        Z: *mut f32,
        ldz: rocblas_int,
        strideZ: rocblas_stride,
        ifail: *mut rocblas_int,
        strideF: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsyevx_strided_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        vl: f64,
        vu: f64,
        il: rocblas_int,
        iu: rocblas_int,
        abstol: f64,
        nev: *mut rocblas_int,
        W: *mut f64,
        strideW: rocblas_stride,
        Z: *mut f64,
        ldz: rocblas_int,
        strideZ: rocblas_stride,
        ifail: *mut rocblas_int,
        strideF: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cheevx_strided_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        vl: f32,
        vu: f32,
        il: rocblas_int,
        iu: rocblas_int,
        abstol: f32,
        nev: *mut rocblas_int,
        W: *mut f32,
        strideW: rocblas_stride,
        Z: *mut rocblas_float_complex,
        ldz: rocblas_int,
        strideZ: rocblas_stride,
        ifail: *mut rocblas_int,
        strideF: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zheevx_strided_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        vl: f64,
        vu: f64,
        il: rocblas_int,
        iu: rocblas_int,
        abstol: f64,
        nev: *mut rocblas_int,
        W: *mut f64,
        strideW: rocblas_stride,
        Z: *mut rocblas_double_complex,
        ldz: rocblas_int,
        strideZ: rocblas_stride,
        ifail: *mut rocblas_int,
        strideF: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssygv(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        B: *mut f32,
        ldb: rocblas_int,
        D: *mut f32,
        E: *mut f32,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsygv(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        B: *mut f64,
        ldb: rocblas_int,
        D: *mut f64,
        E: *mut f64,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_chegv(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        B: *mut rocblas_float_complex,
        ldb: rocblas_int,
        D: *mut f32,
        E: *mut f32,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zhegv(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        B: *mut rocblas_double_complex,
        ldb: rocblas_int,
        D: *mut f64,
        E: *mut f64,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssygv_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        B: *const *mut f32,
        ldb: rocblas_int,
        D: *mut f32,
        strideD: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsygv_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        B: *const *mut f64,
        ldb: rocblas_int,
        D: *mut f64,
        strideD: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_chegv_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        B: *const *mut rocblas_float_complex,
        ldb: rocblas_int,
        D: *mut f32,
        strideD: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zhegv_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        B: *const *mut rocblas_double_complex,
        ldb: rocblas_int,
        D: *mut f64,
        strideD: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssygv_strided_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut f32,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        D: *mut f32,
        strideD: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsygv_strided_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut f64,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        D: *mut f64,
        strideD: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_chegv_strided_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut rocblas_float_complex,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        D: *mut f32,
        strideD: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zhegv_strided_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut rocblas_double_complex,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        D: *mut f64,
        strideD: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssygvd(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        B: *mut f32,
        ldb: rocblas_int,
        D: *mut f32,
        E: *mut f32,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsygvd(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        B: *mut f64,
        ldb: rocblas_int,
        D: *mut f64,
        E: *mut f64,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_chegvd(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        B: *mut rocblas_float_complex,
        ldb: rocblas_int,
        D: *mut f32,
        E: *mut f32,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zhegvd(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        B: *mut rocblas_double_complex,
        ldb: rocblas_int,
        D: *mut f64,
        E: *mut f64,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssygvd_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        B: *const *mut f32,
        ldb: rocblas_int,
        D: *mut f32,
        strideD: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsygvd_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        B: *const *mut f64,
        ldb: rocblas_int,
        D: *mut f64,
        strideD: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_chegvd_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        B: *const *mut rocblas_float_complex,
        ldb: rocblas_int,
        D: *mut f32,
        strideD: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zhegvd_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        B: *const *mut rocblas_double_complex,
        ldb: rocblas_int,
        D: *mut f64,
        strideD: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssygvd_strided_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut f32,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        D: *mut f32,
        strideD: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsygvd_strided_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut f64,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        D: *mut f64,
        strideD: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_chegvd_strided_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut rocblas_float_complex,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        D: *mut f32,
        strideD: rocblas_stride,
        E: *mut f32,
        strideE: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zhegvd_strided_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut rocblas_double_complex,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        D: *mut f64,
        strideD: rocblas_stride,
        E: *mut f64,
        strideE: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssygvj(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        B: *mut f32,
        ldb: rocblas_int,
        abstol: f32,
        residual: *mut f32,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        W: *mut f32,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsygvj(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        B: *mut f64,
        ldb: rocblas_int,
        abstol: f64,
        residual: *mut f64,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        W: *mut f64,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_chegvj(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        B: *mut rocblas_float_complex,
        ldb: rocblas_int,
        abstol: f32,
        residual: *mut f32,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        W: *mut f32,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zhegvj(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        B: *mut rocblas_double_complex,
        ldb: rocblas_int,
        abstol: f64,
        residual: *mut f64,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        W: *mut f64,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssygvj_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        B: *const *mut f32,
        ldb: rocblas_int,
        abstol: f32,
        residual: *mut f32,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        W: *mut f32,
        strideW: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsygvj_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        B: *const *mut f64,
        ldb: rocblas_int,
        abstol: f64,
        residual: *mut f64,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        W: *mut f64,
        strideW: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_chegvj_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        B: *const *mut rocblas_float_complex,
        ldb: rocblas_int,
        abstol: f32,
        residual: *mut f32,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        W: *mut f32,
        strideW: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zhegvj_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        B: *const *mut rocblas_double_complex,
        ldb: rocblas_int,
        abstol: f64,
        residual: *mut f64,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        W: *mut f64,
        strideW: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssygvj_strided_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut f32,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        abstol: f32,
        residual: *mut f32,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        W: *mut f32,
        strideW: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsygvj_strided_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut f64,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        abstol: f64,
        residual: *mut f64,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        W: *mut f64,
        strideW: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_chegvj_strided_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut rocblas_float_complex,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        abstol: f32,
        residual: *mut f32,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        W: *mut f32,
        strideW: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zhegvj_strided_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut rocblas_double_complex,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        abstol: f64,
        residual: *mut f64,
        max_sweeps: rocblas_int,
        n_sweeps: *mut rocblas_int,
        W: *mut f64,
        strideW: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssygvx(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        B: *mut f32,
        ldb: rocblas_int,
        vl: f32,
        vu: f32,
        il: rocblas_int,
        iu: rocblas_int,
        abstol: f32,
        nev: *mut rocblas_int,
        W: *mut f32,
        Z: *mut f32,
        ldz: rocblas_int,
        ifail: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsygvx(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        B: *mut f64,
        ldb: rocblas_int,
        vl: f64,
        vu: f64,
        il: rocblas_int,
        iu: rocblas_int,
        abstol: f64,
        nev: *mut rocblas_int,
        W: *mut f64,
        Z: *mut f64,
        ldz: rocblas_int,
        ifail: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_chegvx(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        B: *mut rocblas_float_complex,
        ldb: rocblas_int,
        vl: f32,
        vu: f32,
        il: rocblas_int,
        iu: rocblas_int,
        abstol: f32,
        nev: *mut rocblas_int,
        W: *mut f32,
        Z: *mut rocblas_float_complex,
        ldz: rocblas_int,
        ifail: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zhegvx(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        B: *mut rocblas_double_complex,
        ldb: rocblas_int,
        vl: f64,
        vu: f64,
        il: rocblas_int,
        iu: rocblas_int,
        abstol: f64,
        nev: *mut rocblas_int,
        W: *mut f64,
        Z: *mut rocblas_double_complex,
        ldz: rocblas_int,
        ifail: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssygvx_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        B: *const *mut f32,
        ldb: rocblas_int,
        vl: f32,
        vu: f32,
        il: rocblas_int,
        iu: rocblas_int,
        abstol: f32,
        nev: *mut rocblas_int,
        W: *mut f32,
        strideW: rocblas_stride,
        Z: *const *mut f32,
        ldz: rocblas_int,
        ifail: *mut rocblas_int,
        strideF: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsygvx_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        B: *const *mut f64,
        ldb: rocblas_int,
        vl: f64,
        vu: f64,
        il: rocblas_int,
        iu: rocblas_int,
        abstol: f64,
        nev: *mut rocblas_int,
        W: *mut f64,
        strideW: rocblas_stride,
        Z: *const *mut f64,
        ldz: rocblas_int,
        ifail: *mut rocblas_int,
        strideF: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_chegvx_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        B: *const *mut rocblas_float_complex,
        ldb: rocblas_int,
        vl: f32,
        vu: f32,
        il: rocblas_int,
        iu: rocblas_int,
        abstol: f32,
        nev: *mut rocblas_int,
        W: *mut f32,
        strideW: rocblas_stride,
        Z: *const *mut rocblas_float_complex,
        ldz: rocblas_int,
        ifail: *mut rocblas_int,
        strideF: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zhegvx_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        B: *const *mut rocblas_double_complex,
        ldb: rocblas_int,
        vl: f64,
        vu: f64,
        il: rocblas_int,
        iu: rocblas_int,
        abstol: f64,
        nev: *mut rocblas_int,
        W: *mut f64,
        strideW: rocblas_stride,
        Z: *const *mut rocblas_double_complex,
        ldz: rocblas_int,
        ifail: *mut rocblas_int,
        strideF: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssygvx_strided_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut f32,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        vl: f32,
        vu: f32,
        il: rocblas_int,
        iu: rocblas_int,
        abstol: f32,
        nev: *mut rocblas_int,
        W: *mut f32,
        strideW: rocblas_stride,
        Z: *mut f32,
        ldz: rocblas_int,
        strideZ: rocblas_stride,
        ifail: *mut rocblas_int,
        strideF: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsygvx_strided_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut f64,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        vl: f64,
        vu: f64,
        il: rocblas_int,
        iu: rocblas_int,
        abstol: f64,
        nev: *mut rocblas_int,
        W: *mut f64,
        strideW: rocblas_stride,
        Z: *mut f64,
        ldz: rocblas_int,
        strideZ: rocblas_stride,
        ifail: *mut rocblas_int,
        strideF: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_chegvx_strided_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut rocblas_float_complex,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        vl: f32,
        vu: f32,
        il: rocblas_int,
        iu: rocblas_int,
        abstol: f32,
        nev: *mut rocblas_int,
        W: *mut f32,
        strideW: rocblas_stride,
        Z: *mut rocblas_float_complex,
        ldz: rocblas_int,
        strideZ: rocblas_stride,
        ifail: *mut rocblas_int,
        strideF: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zhegvx_strided_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut rocblas_double_complex,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        vl: f64,
        vu: f64,
        il: rocblas_int,
        iu: rocblas_int,
        abstol: f64,
        nev: *mut rocblas_int,
        W: *mut f64,
        strideW: rocblas_stride,
        Z: *mut rocblas_double_complex,
        ldz: rocblas_int,
        strideZ: rocblas_stride,
        ifail: *mut rocblas_int,
        strideF: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetri_outofplace(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        C: *mut f32,
        ldc: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetri_outofplace(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        C: *mut f64,
        ldc: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetri_outofplace(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetri_outofplace(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetri_outofplace_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        C: *const *mut f32,
        ldc: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetri_outofplace_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        C: *const *mut f64,
        ldc: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetri_outofplace_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        C: *const *mut rocblas_float_complex,
        ldc: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetri_outofplace_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        C: *const *mut rocblas_double_complex,
        ldc: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetri_outofplace_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        C: *mut f32,
        ldc: rocblas_int,
        strideC: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetri_outofplace_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        C: *mut f64,
        ldc: rocblas_int,
        strideC: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetri_outofplace_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
        strideC: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetri_outofplace_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
        strideC: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetri_npvt_outofplace(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        C: *mut f32,
        ldc: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetri_npvt_outofplace(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        C: *mut f64,
        ldc: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetri_npvt_outofplace(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetri_npvt_outofplace(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetri_npvt_outofplace_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        C: *const *mut f32,
        ldc: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetri_npvt_outofplace_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        C: *const *mut f64,
        ldc: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetri_npvt_outofplace_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        C: *const *mut rocblas_float_complex,
        ldc: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetri_npvt_outofplace_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        C: *const *mut rocblas_double_complex,
        ldc: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgetri_npvt_outofplace_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        C: *mut f32,
        ldc: rocblas_int,
        strideC: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgetri_npvt_outofplace_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        C: *mut f64,
        ldc: rocblas_int,
        strideC: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgetri_npvt_outofplace_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
        strideC: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgetri_npvt_outofplace_strided_batched(
        handle: rocblas_handle,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
        strideC: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_strtri(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dtrtri(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ctrtri(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ztrtri(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_strtri_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dtrtri_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ctrtri_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ztrtri_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_strtri_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dtrtri_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ctrtri_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ztrtri_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        diag: rocblas_diagonal,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssytf2(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsytf2(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_csytf2(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zsytf2(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssytf2_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsytf2_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_csytf2_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zsytf2_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssytf2_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsytf2_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_csytf2_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zsytf2_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssytrf(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsytrf(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_csytrf(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zsytrf(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssytrf_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsytrf_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_csytrf_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zsytrf_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssytrf_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsytrf_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_csytrf_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zsytrf_strided_batched(
        handle: rocblas_handle,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        ipiv: *mut rocblas_int,
        strideP: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgeblttrf_npvt(
        handle: rocblas_handle,
        nb: rocblas_int,
        nblocks: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        B: *mut f32,
        ldb: rocblas_int,
        C: *mut f32,
        ldc: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgeblttrf_npvt(
        handle: rocblas_handle,
        nb: rocblas_int,
        nblocks: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        B: *mut f64,
        ldb: rocblas_int,
        C: *mut f64,
        ldc: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgeblttrf_npvt(
        handle: rocblas_handle,
        nb: rocblas_int,
        nblocks: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        B: *mut rocblas_float_complex,
        ldb: rocblas_int,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgeblttrf_npvt(
        handle: rocblas_handle,
        nb: rocblas_int,
        nblocks: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        B: *mut rocblas_double_complex,
        ldb: rocblas_int,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgeblttrf_npvt_batched(
        handle: rocblas_handle,
        nb: rocblas_int,
        nblocks: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        B: *const *mut f32,
        ldb: rocblas_int,
        C: *const *mut f32,
        ldc: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgeblttrf_npvt_batched(
        handle: rocblas_handle,
        nb: rocblas_int,
        nblocks: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        B: *const *mut f64,
        ldb: rocblas_int,
        C: *const *mut f64,
        ldc: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgeblttrf_npvt_batched(
        handle: rocblas_handle,
        nb: rocblas_int,
        nblocks: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        B: *const *mut rocblas_float_complex,
        ldb: rocblas_int,
        C: *const *mut rocblas_float_complex,
        ldc: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgeblttrf_npvt_batched(
        handle: rocblas_handle,
        nb: rocblas_int,
        nblocks: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        B: *const *mut rocblas_double_complex,
        ldb: rocblas_int,
        C: *const *mut rocblas_double_complex,
        ldc: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgeblttrf_npvt_strided_batched(
        handle: rocblas_handle,
        nb: rocblas_int,
        nblocks: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut f32,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        C: *mut f32,
        ldc: rocblas_int,
        strideC: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgeblttrf_npvt_strided_batched(
        handle: rocblas_handle,
        nb: rocblas_int,
        nblocks: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut f64,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        C: *mut f64,
        ldc: rocblas_int,
        strideC: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgeblttrf_npvt_strided_batched(
        handle: rocblas_handle,
        nb: rocblas_int,
        nblocks: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut rocblas_float_complex,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
        strideC: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgeblttrf_npvt_strided_batched(
        handle: rocblas_handle,
        nb: rocblas_int,
        nblocks: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut rocblas_double_complex,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
        strideC: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgeblttrf_npvt_interleaved_batched(
        handle: rocblas_handle,
        nb: rocblas_int,
        nblocks: rocblas_int,
        A: *mut f32,
        inca: rocblas_int,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut f32,
        incb: rocblas_int,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        C: *mut f32,
        incc: rocblas_int,
        ldc: rocblas_int,
        strideC: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgeblttrf_npvt_interleaved_batched(
        handle: rocblas_handle,
        nb: rocblas_int,
        nblocks: rocblas_int,
        A: *mut f64,
        inca: rocblas_int,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut f64,
        incb: rocblas_int,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        C: *mut f64,
        incc: rocblas_int,
        ldc: rocblas_int,
        strideC: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgeblttrf_npvt_interleaved_batched(
        handle: rocblas_handle,
        nb: rocblas_int,
        nblocks: rocblas_int,
        A: *mut rocblas_float_complex,
        inca: rocblas_int,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut rocblas_float_complex,
        incb: rocblas_int,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        C: *mut rocblas_float_complex,
        incc: rocblas_int,
        ldc: rocblas_int,
        strideC: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgeblttrf_npvt_interleaved_batched(
        handle: rocblas_handle,
        nb: rocblas_int,
        nblocks: rocblas_int,
        A: *mut rocblas_double_complex,
        inca: rocblas_int,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut rocblas_double_complex,
        incb: rocblas_int,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        C: *mut rocblas_double_complex,
        incc: rocblas_int,
        ldc: rocblas_int,
        strideC: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgeblttrs_npvt(
        handle: rocblas_handle,
        nb: rocblas_int,
        nblocks: rocblas_int,
        nrhs: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        B: *mut f32,
        ldb: rocblas_int,
        C: *mut f32,
        ldc: rocblas_int,
        X: *mut f32,
        ldx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgeblttrs_npvt(
        handle: rocblas_handle,
        nb: rocblas_int,
        nblocks: rocblas_int,
        nrhs: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        B: *mut f64,
        ldb: rocblas_int,
        C: *mut f64,
        ldc: rocblas_int,
        X: *mut f64,
        ldx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgeblttrs_npvt(
        handle: rocblas_handle,
        nb: rocblas_int,
        nblocks: rocblas_int,
        nrhs: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        B: *mut rocblas_float_complex,
        ldb: rocblas_int,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
        X: *mut rocblas_float_complex,
        ldx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgeblttrs_npvt(
        handle: rocblas_handle,
        nb: rocblas_int,
        nblocks: rocblas_int,
        nrhs: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        B: *mut rocblas_double_complex,
        ldb: rocblas_int,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
        X: *mut rocblas_double_complex,
        ldx: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgeblttrs_npvt_batched(
        handle: rocblas_handle,
        nb: rocblas_int,
        nblocks: rocblas_int,
        nrhs: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        B: *const *mut f32,
        ldb: rocblas_int,
        C: *const *mut f32,
        ldc: rocblas_int,
        X: *const *mut f32,
        ldx: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgeblttrs_npvt_batched(
        handle: rocblas_handle,
        nb: rocblas_int,
        nblocks: rocblas_int,
        nrhs: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        B: *const *mut f64,
        ldb: rocblas_int,
        C: *const *mut f64,
        ldc: rocblas_int,
        X: *const *mut f64,
        ldx: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgeblttrs_npvt_batched(
        handle: rocblas_handle,
        nb: rocblas_int,
        nblocks: rocblas_int,
        nrhs: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        B: *const *mut rocblas_float_complex,
        ldb: rocblas_int,
        C: *const *mut rocblas_float_complex,
        ldc: rocblas_int,
        X: *const *mut rocblas_float_complex,
        ldx: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgeblttrs_npvt_batched(
        handle: rocblas_handle,
        nb: rocblas_int,
        nblocks: rocblas_int,
        nrhs: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        B: *const *mut rocblas_double_complex,
        ldb: rocblas_int,
        C: *const *mut rocblas_double_complex,
        ldc: rocblas_int,
        X: *const *mut rocblas_double_complex,
        ldx: rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgeblttrs_npvt_strided_batched(
        handle: rocblas_handle,
        nb: rocblas_int,
        nblocks: rocblas_int,
        nrhs: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut f32,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        C: *mut f32,
        ldc: rocblas_int,
        strideC: rocblas_stride,
        X: *mut f32,
        ldx: rocblas_int,
        strideX: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgeblttrs_npvt_strided_batched(
        handle: rocblas_handle,
        nb: rocblas_int,
        nblocks: rocblas_int,
        nrhs: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut f64,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        C: *mut f64,
        ldc: rocblas_int,
        strideC: rocblas_stride,
        X: *mut f64,
        ldx: rocblas_int,
        strideX: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgeblttrs_npvt_strided_batched(
        handle: rocblas_handle,
        nb: rocblas_int,
        nblocks: rocblas_int,
        nrhs: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut rocblas_float_complex,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        C: *mut rocblas_float_complex,
        ldc: rocblas_int,
        strideC: rocblas_stride,
        X: *mut rocblas_float_complex,
        ldx: rocblas_int,
        strideX: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgeblttrs_npvt_strided_batched(
        handle: rocblas_handle,
        nb: rocblas_int,
        nblocks: rocblas_int,
        nrhs: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut rocblas_double_complex,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        C: *mut rocblas_double_complex,
        ldc: rocblas_int,
        strideC: rocblas_stride,
        X: *mut rocblas_double_complex,
        ldx: rocblas_int,
        strideX: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_sgeblttrs_npvt_interleaved_batched(
        handle: rocblas_handle,
        nb: rocblas_int,
        nblocks: rocblas_int,
        nrhs: rocblas_int,
        A: *mut f32,
        inca: rocblas_int,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut f32,
        incb: rocblas_int,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        C: *mut f32,
        incc: rocblas_int,
        ldc: rocblas_int,
        strideC: rocblas_stride,
        X: *mut f32,
        incx: rocblas_int,
        ldx: rocblas_int,
        strideX: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dgeblttrs_npvt_interleaved_batched(
        handle: rocblas_handle,
        nb: rocblas_int,
        nblocks: rocblas_int,
        nrhs: rocblas_int,
        A: *mut f64,
        inca: rocblas_int,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut f64,
        incb: rocblas_int,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        C: *mut f64,
        incc: rocblas_int,
        ldc: rocblas_int,
        strideC: rocblas_stride,
        X: *mut f64,
        incx: rocblas_int,
        ldx: rocblas_int,
        strideX: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cgeblttrs_npvt_interleaved_batched(
        handle: rocblas_handle,
        nb: rocblas_int,
        nblocks: rocblas_int,
        nrhs: rocblas_int,
        A: *mut rocblas_float_complex,
        inca: rocblas_int,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut rocblas_float_complex,
        incb: rocblas_int,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        C: *mut rocblas_float_complex,
        incc: rocblas_int,
        ldc: rocblas_int,
        strideC: rocblas_stride,
        X: *mut rocblas_float_complex,
        incx: rocblas_int,
        ldx: rocblas_int,
        strideX: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zgeblttrs_npvt_interleaved_batched(
        handle: rocblas_handle,
        nb: rocblas_int,
        nblocks: rocblas_int,
        nrhs: rocblas_int,
        A: *mut rocblas_double_complex,
        inca: rocblas_int,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut rocblas_double_complex,
        incb: rocblas_int,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        C: *mut rocblas_double_complex,
        incc: rocblas_int,
        ldc: rocblas_int,
        strideC: rocblas_stride,
        X: *mut rocblas_double_complex,
        incx: rocblas_int,
        ldx: rocblas_int,
        strideX: rocblas_stride,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_create_rfinfo(
        rfinfo: *mut rocsolver_rfinfo,
        handle: rocblas_handle,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_destroy_rfinfo(rfinfo: rocsolver_rfinfo) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_set_rfinfo_mode(
        rfinfo: rocsolver_rfinfo,
        mode: rocsolver_rfinfo_mode,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_get_rfinfo_mode(
        rfinfo: rocsolver_rfinfo,
        mode: *mut rocsolver_rfinfo_mode,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_scsrrf_sumlu(
        handle: rocblas_handle,
        n: rocblas_int,
        nnzL: rocblas_int,
        ptrL: *mut rocblas_int,
        indL: *mut rocblas_int,
        valL: *mut f32,
        nnzU: rocblas_int,
        ptrU: *mut rocblas_int,
        indU: *mut rocblas_int,
        valU: *mut f32,
        ptrT: *mut rocblas_int,
        indT: *mut rocblas_int,
        valT: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dcsrrf_sumlu(
        handle: rocblas_handle,
        n: rocblas_int,
        nnzL: rocblas_int,
        ptrL: *mut rocblas_int,
        indL: *mut rocblas_int,
        valL: *mut f64,
        nnzU: rocblas_int,
        ptrU: *mut rocblas_int,
        indU: *mut rocblas_int,
        valU: *mut f64,
        ptrT: *mut rocblas_int,
        indT: *mut rocblas_int,
        valT: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_scsrrf_splitlu(
        handle: rocblas_handle,
        n: rocblas_int,
        nnzT: rocblas_int,
        ptrT: *mut rocblas_int,
        indT: *mut rocblas_int,
        valT: *mut f32,
        ptrL: *mut rocblas_int,
        indL: *mut rocblas_int,
        valL: *mut f32,
        ptrU: *mut rocblas_int,
        indU: *mut rocblas_int,
        valU: *mut f32,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dcsrrf_splitlu(
        handle: rocblas_handle,
        n: rocblas_int,
        nnzT: rocblas_int,
        ptrT: *mut rocblas_int,
        indT: *mut rocblas_int,
        valT: *mut f64,
        ptrL: *mut rocblas_int,
        indL: *mut rocblas_int,
        valL: *mut f64,
        ptrU: *mut rocblas_int,
        indU: *mut rocblas_int,
        valU: *mut f64,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_scsrrf_analysis(
        handle: rocblas_handle,
        n: rocblas_int,
        nrhs: rocblas_int,
        nnzM: rocblas_int,
        ptrM: *mut rocblas_int,
        indM: *mut rocblas_int,
        valM: *mut f32,
        nnzT: rocblas_int,
        ptrT: *mut rocblas_int,
        indT: *mut rocblas_int,
        valT: *mut f32,
        pivP: *mut rocblas_int,
        pivQ: *mut rocblas_int,
        B: *mut f32,
        ldb: rocblas_int,
        rfinfo: rocsolver_rfinfo,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dcsrrf_analysis(
        handle: rocblas_handle,
        n: rocblas_int,
        nrhs: rocblas_int,
        nnzM: rocblas_int,
        ptrM: *mut rocblas_int,
        indM: *mut rocblas_int,
        valM: *mut f64,
        nnzT: rocblas_int,
        ptrT: *mut rocblas_int,
        indT: *mut rocblas_int,
        valT: *mut f64,
        pivP: *mut rocblas_int,
        pivQ: *mut rocblas_int,
        B: *mut f64,
        ldb: rocblas_int,
        rfinfo: rocsolver_rfinfo,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_scsrrf_refactlu(
        handle: rocblas_handle,
        n: rocblas_int,
        nnzA: rocblas_int,
        ptrA: *mut rocblas_int,
        indA: *mut rocblas_int,
        valA: *mut f32,
        nnzT: rocblas_int,
        ptrT: *mut rocblas_int,
        indT: *mut rocblas_int,
        valT: *mut f32,
        pivP: *mut rocblas_int,
        pivQ: *mut rocblas_int,
        rfinfo: rocsolver_rfinfo,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dcsrrf_refactlu(
        handle: rocblas_handle,
        n: rocblas_int,
        nnzA: rocblas_int,
        ptrA: *mut rocblas_int,
        indA: *mut rocblas_int,
        valA: *mut f64,
        nnzT: rocblas_int,
        ptrT: *mut rocblas_int,
        indT: *mut rocblas_int,
        valT: *mut f64,
        pivP: *mut rocblas_int,
        pivQ: *mut rocblas_int,
        rfinfo: rocsolver_rfinfo,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_scsrrf_refactchol(
        handle: rocblas_handle,
        n: rocblas_int,
        nnzA: rocblas_int,
        ptrA: *mut rocblas_int,
        indA: *mut rocblas_int,
        valA: *mut f32,
        nnzT: rocblas_int,
        ptrT: *mut rocblas_int,
        indT: *mut rocblas_int,
        valT: *mut f32,
        pivQ: *mut rocblas_int,
        rfinfo: rocsolver_rfinfo,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dcsrrf_refactchol(
        handle: rocblas_handle,
        n: rocblas_int,
        nnzA: rocblas_int,
        ptrA: *mut rocblas_int,
        indA: *mut rocblas_int,
        valA: *mut f64,
        nnzT: rocblas_int,
        ptrT: *mut rocblas_int,
        indT: *mut rocblas_int,
        valT: *mut f64,
        pivQ: *mut rocblas_int,
        rfinfo: rocsolver_rfinfo,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_scsrrf_solve(
        handle: rocblas_handle,
        n: rocblas_int,
        nrhs: rocblas_int,
        nnzT: rocblas_int,
        ptrT: *mut rocblas_int,
        indT: *mut rocblas_int,
        valT: *mut f32,
        pivP: *mut rocblas_int,
        pivQ: *mut rocblas_int,
        B: *mut f32,
        ldb: rocblas_int,
        rfinfo: rocsolver_rfinfo,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dcsrrf_solve(
        handle: rocblas_handle,
        n: rocblas_int,
        nrhs: rocblas_int,
        nnzT: rocblas_int,
        ptrT: *mut rocblas_int,
        indT: *mut rocblas_int,
        valT: *mut f64,
        pivP: *mut rocblas_int,
        pivQ: *mut rocblas_int,
        B: *mut f64,
        ldb: rocblas_int,
        rfinfo: rocsolver_rfinfo,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssyevdx(
        handle: rocblas_handle,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        vl: f32,
        vu: f32,
        il: rocblas_int,
        iu: rocblas_int,
        nev: *mut rocblas_int,
        W: *mut f32,
        Z: *mut f32,
        ldz: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsyevdx(
        handle: rocblas_handle,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        vl: f64,
        vu: f64,
        il: rocblas_int,
        iu: rocblas_int,
        nev: *mut rocblas_int,
        W: *mut f64,
        Z: *mut f64,
        ldz: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cheevdx(
        handle: rocblas_handle,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        vl: f32,
        vu: f32,
        il: rocblas_int,
        iu: rocblas_int,
        nev: *mut rocblas_int,
        W: *mut f32,
        Z: *mut rocblas_float_complex,
        ldz: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zheevdx(
        handle: rocblas_handle,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        vl: f64,
        vu: f64,
        il: rocblas_int,
        iu: rocblas_int,
        nev: *mut rocblas_int,
        W: *mut f64,
        Z: *mut rocblas_double_complex,
        ldz: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssyevdx_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        vl: f32,
        vu: f32,
        il: rocblas_int,
        iu: rocblas_int,
        nev: *mut rocblas_int,
        W: *mut f32,
        strideW: rocblas_stride,
        Z: *const *mut f32,
        ldz: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsyevdx_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        vl: f64,
        vu: f64,
        il: rocblas_int,
        iu: rocblas_int,
        nev: *mut rocblas_int,
        W: *mut f64,
        strideW: rocblas_stride,
        Z: *const *mut f64,
        ldz: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cheevdx_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        vl: f32,
        vu: f32,
        il: rocblas_int,
        iu: rocblas_int,
        nev: *mut rocblas_int,
        W: *mut f32,
        strideW: rocblas_stride,
        Z: *const *mut rocblas_float_complex,
        ldz: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zheevdx_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        vl: f64,
        vu: f64,
        il: rocblas_int,
        iu: rocblas_int,
        nev: *mut rocblas_int,
        W: *mut f64,
        strideW: rocblas_stride,
        Z: *const *mut rocblas_double_complex,
        ldz: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssyevdx_strided_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        vl: f32,
        vu: f32,
        il: rocblas_int,
        iu: rocblas_int,
        nev: *mut rocblas_int,
        W: *mut f32,
        strideW: rocblas_stride,
        Z: *mut f32,
        ldz: rocblas_int,
        strideZ: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsyevdx_strided_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        vl: f64,
        vu: f64,
        il: rocblas_int,
        iu: rocblas_int,
        nev: *mut rocblas_int,
        W: *mut f64,
        strideW: rocblas_stride,
        Z: *mut f64,
        ldz: rocblas_int,
        strideZ: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_cheevdx_strided_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        vl: f32,
        vu: f32,
        il: rocblas_int,
        iu: rocblas_int,
        nev: *mut rocblas_int,
        W: *mut f32,
        strideW: rocblas_stride,
        Z: *mut rocblas_float_complex,
        ldz: rocblas_int,
        strideZ: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zheevdx_strided_batched(
        handle: rocblas_handle,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        vl: f64,
        vu: f64,
        il: rocblas_int,
        iu: rocblas_int,
        nev: *mut rocblas_int,
        W: *mut f64,
        strideW: rocblas_stride,
        Z: *mut rocblas_double_complex,
        ldz: rocblas_int,
        strideZ: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssygvdx(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        B: *mut f32,
        ldb: rocblas_int,
        vl: f32,
        vu: f32,
        il: rocblas_int,
        iu: rocblas_int,
        nev: *mut rocblas_int,
        W: *mut f32,
        Z: *mut f32,
        ldz: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsygvdx(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        B: *mut f64,
        ldb: rocblas_int,
        vl: f64,
        vu: f64,
        il: rocblas_int,
        iu: rocblas_int,
        nev: *mut rocblas_int,
        W: *mut f64,
        Z: *mut f64,
        ldz: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_chegvdx(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        B: *mut rocblas_float_complex,
        ldb: rocblas_int,
        vl: f32,
        vu: f32,
        il: rocblas_int,
        iu: rocblas_int,
        nev: *mut rocblas_int,
        W: *mut f32,
        Z: *mut rocblas_float_complex,
        ldz: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zhegvdx(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        B: *mut rocblas_double_complex,
        ldb: rocblas_int,
        vl: f64,
        vu: f64,
        il: rocblas_int,
        iu: rocblas_int,
        nev: *mut rocblas_int,
        W: *mut f64,
        Z: *mut rocblas_double_complex,
        ldz: rocblas_int,
        info: *mut rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssygvdx_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f32,
        lda: rocblas_int,
        B: *const *mut f32,
        ldb: rocblas_int,
        vl: f32,
        vu: f32,
        il: rocblas_int,
        iu: rocblas_int,
        nev: *mut rocblas_int,
        W: *mut f32,
        strideW: rocblas_stride,
        Z: *const *mut f32,
        ldz: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsygvdx_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut f64,
        lda: rocblas_int,
        B: *const *mut f64,
        ldb: rocblas_int,
        vl: f64,
        vu: f64,
        il: rocblas_int,
        iu: rocblas_int,
        nev: *mut rocblas_int,
        W: *mut f64,
        strideW: rocblas_stride,
        Z: *const *mut f64,
        ldz: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_chegvdx_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_float_complex,
        lda: rocblas_int,
        B: *const *mut rocblas_float_complex,
        ldb: rocblas_int,
        vl: f32,
        vu: f32,
        il: rocblas_int,
        iu: rocblas_int,
        nev: *mut rocblas_int,
        W: *mut f32,
        strideW: rocblas_stride,
        Z: *const *mut rocblas_float_complex,
        ldz: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zhegvdx_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *const *mut rocblas_double_complex,
        lda: rocblas_int,
        B: *const *mut rocblas_double_complex,
        ldb: rocblas_int,
        vl: f64,
        vu: f64,
        il: rocblas_int,
        iu: rocblas_int,
        nev: *mut rocblas_int,
        W: *mut f64,
        strideW: rocblas_stride,
        Z: *const *mut rocblas_double_complex,
        ldz: rocblas_int,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_ssygvdx_strided_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f32,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut f32,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        vl: f32,
        vu: f32,
        il: rocblas_int,
        iu: rocblas_int,
        nev: *mut rocblas_int,
        W: *mut f32,
        strideW: rocblas_stride,
        Z: *mut f32,
        ldz: rocblas_int,
        strideZ: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_dsygvdx_strided_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut f64,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut f64,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        vl: f64,
        vu: f64,
        il: rocblas_int,
        iu: rocblas_int,
        nev: *mut rocblas_int,
        W: *mut f64,
        strideW: rocblas_stride,
        Z: *mut f64,
        ldz: rocblas_int,
        strideZ: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_chegvdx_strided_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_float_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut rocblas_float_complex,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        vl: f32,
        vu: f32,
        il: rocblas_int,
        iu: rocblas_int,
        nev: *mut rocblas_int,
        W: *mut f32,
        strideW: rocblas_stride,
        Z: *mut rocblas_float_complex,
        ldz: rocblas_int,
        strideZ: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
unsafe extern "C" {
    pub fn rocsolver_zhegvdx_strided_batched(
        handle: rocblas_handle,
        itype: rocblas_eform,
        evect: rocblas_evect,
        erange: rocblas_erange,
        uplo: rocblas_fill,
        n: rocblas_int,
        A: *mut rocblas_double_complex,
        lda: rocblas_int,
        strideA: rocblas_stride,
        B: *mut rocblas_double_complex,
        ldb: rocblas_int,
        strideB: rocblas_stride,
        vl: f64,
        vu: f64,
        il: rocblas_int,
        iu: rocblas_int,
        nev: *mut rocblas_int,
        W: *mut f64,
        strideW: rocblas_stride,
        Z: *mut rocblas_double_complex,
        ldz: rocblas_int,
        strideZ: rocblas_stride,
        info: *mut rocblas_int,
        batch_count: rocblas_int,
    ) -> rocblas_status;
}
